{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/Indicator/Indicator.module.css","components/Widgets/MonthExpenses/Items/Item.module.css","components/Balance/Balance.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/UI/Input/Input.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/Widgets/YearExpenses/Indicator/Indicator.module.css","components/Dummy/Dummy.module.css","components/UI/Select/Select.module.css","components/Widgets/Budget/Budget.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","services/mocks/mocks.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","hoc/Layout/Layout.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/Indicator/Indicator.js","components/Widgets/MonthExpenses/utils.js","components/Widgets/MonthExpenses/Items/Item.js","components/Widgets/MonthExpenses/const.js","components/Widgets/MonthExpenses/Statistics.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/constant.js","components/Widgets/YearExpenses/Indicator/Indicator.js","components/Widgets/YearExpenses/YearExpenses.js","components/Widgets/Budget/Budget.js","containers/Statistics/Statistics.js","components/Dummy/Dummy.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","accounts","categories","id","title","balance","startBalance","archive","getRandomInt","min","max","Math","ceil","floor","random","getRandomSubarray","items","slice","count","result","push","splice","length","getRandomDate","startPoint","Date","getTime","endPoint","toISOString","transactions","Array","fill","map","nanoid","sum","date","expense","Boolean","round","account","category","CategoryDataService","this","a","json","loadCategories","createAsyncThunk","getAll","data","postCategories","newCategory","create","categoriesSlice","createSlice","name","initialState","allCategories","isLoading","hasError","isPending","isFailedToCreate","reducers","addCategory","state","action","payload","extraReducers","pending","fulfilled","rejected","selectAllCategoriesState","actions","AccountDataService","loadAccounts","postAccounts","newAccount","accountsSlice","allAccounts","addAccount","selectAllAccountsState","TransactionDataService","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatWeekday","dateString","toLocaleString","weekday","formatMonthYear","month","year","formatMonth","loadTransactions","transactionsSlice","allTransactions","newTransaction","currentMonth","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","filter","transaction","updateMonth","showDelete","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","setOnClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","item","accountId","categoryId","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Layout","LayoutContainer","LayoutMain","Search","userInput","SearchCloseBtn","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","window","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","TransactionsItemsDateGroup","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","day","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","TransactionsContext","createContext","Transactions","filteredTransactions","Provider","WidgetsMonthBalance","MonthBalance","List","Wrapper","WidgetsMonthExpensesIndicator","excessPercent","balanceOfCurrent","totalPercent","transactionsSum","IndicatorWrapper","TotalExpenses","style","width","IndicatorTotal","IndicatorIncomes","IndicatorExpenses","TotalTitle","CategoryTitle","TotalSumWrapper","TotalSumAverage","TotalSum","getSum","toFixed","getBalance","getMonthAverageSum","getTotalPercentPerMonth","WidgetsMonthExpensesItem","excessCategoryPercent","totalCategoryPercent","balanceCategoryOfCurrent","categoryPercent","monthTransactions","daysAmount","getFullYear","getMonth","getDate","currentDay","currentDayStep","isShow","MonthExpensesItem","DayIndicatorWrapper","DayIndicator","left","DayIndicatorDate","Left","Right","Indicator","TRANSACTION_TYPE","Statistics","budget","_getExcessPercent","percent","_getExcessBudgetPercent","balancePerCategory","transactionsSumPerCategory","averageValue","abs","expensesPercent","total","averageSum","_getTotalPercent","WidgetsMonthExpenses","Salary","Rent","Groceries","Family","Coffee","Health","expenses","incomes","percentCategory","MONTH_EXPENSES","WidgetsYearExpensesIndicator","getPercent","Expenses","Incomes","height","WidgetsYearExpenses","incomesPercent","monthHandler","YearExpenses","Active","WidgetsBudget","BudgetWrapper","Dummy","DummyWrapper","Settings","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.bba9f979.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndicatorWrapper\":\"Indicator_IndicatorWrapper__203rc\",\"IndicatorTotal\":\"Indicator_IndicatorTotal__3p-cS\",\"IndicatorExpenses\":\"Indicator_IndicatorExpenses__3uc8_\",\"IndicatorIncomes\":\"Indicator_IndicatorIncomes__vSDFI\",\"Expense\":\"Indicator_Expense__UWzqj\",\"TotalExpenses\":\"Indicator_TotalExpenses__1tVA6\",\"TotalTitle\":\"Indicator_TotalTitle__3fLcu\",\"TotalSumWrapper\":\"Indicator_TotalSumWrapper__1ZCa2\",\"TotalSumAverage\":\"Indicator_TotalSumAverage__8MjVb\",\"Balance\":\"Indicator_Balance__19QnX\",\"CategoryTitle\":\"Indicator_CategoryTitle___zKTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpensesItem\":\"Item_MonthExpensesItem__YjU-v\",\"IndicatorWrapper\":\"Item_IndicatorWrapper__2mppw\",\"Indicator\":\"Item_Indicator__1tgmw\",\"DayIndicatorWrapper\":\"Item_DayIndicatorWrapper__1EIsj\",\"DayIndicator\":\"Item_DayIndicator__13Cg7\",\"DayIndicatorDate\":\"Item_DayIndicatorDate__3kWwy\",\"Right\":\"Item_Right__2f5Fi\",\"Left\":\"Item_Left__2pD6l\",\"List\":\"Item_List__3zSXB\",\"Wrapper\":\"Item_Wrapper__2aB6H\",\"CategoryTitle\":\"Item_CategoryTitle__1JliW\",\"Balance\":\"Item_Balance__1vv4s\",\"IndicatorTotal\":\"Item_IndicatorTotal__26IWg\",\"IndicatorExpenses\":\"Item_IndicatorExpenses__2n_83\",\"IndicatorIncomes\":\"Item_IndicatorIncomes__1nQzk\",\"TotalTitle\":\"Item_TotalTitle__akr9c\",\"TotalSumWrapper\":\"Item_TotalSumWrapper__2_RW5\",\"TotalSumAverage\":\"Item_TotalSumAverage__1WQ-t\",\"TotalSum\":\"Item_TotalSum__37VIa\",\"AverageWrapper\":\"Item_AverageWrapper__T8i9X\",\"TotalExpenses\":\"Item_TotalExpenses__de84n\",\"Expense\":\"Item_Expense__1uT9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchCloseBtn\":\"Search_SearchCloseBtn__dEG1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Indicator_Incomes__3bIeI\",\"Expenses\":\"Indicator_Expenses__1JIA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DummyWrapper\":\"Dummy_DummyWrapper__ainuq\",\"Dummy\":\"Dummy_Dummy__V-6Gh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Budget_BudgetWrapper__2eRq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {nanoid} from 'nanoid';\n\nexport const categories = [\n  {id: 1, title: `Salary`},\n  {id: 2, title: `Rent`},\n  {id: 3, title: `Groceries`},\n  {id: 4, title: `Parking fees`},\n  {id: 5, title: `Clothing & shoes`},\n  {id: 6, title: `Family`},\n  {id: 7, title: `Coffee`},\n  {id: 8, title: `Health`},\n];\n\nexport const accounts = [\n  {id: 1, title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: 2, title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: 3, title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomSubarray = (items) => {\n  items = items.slice();\n  let count = 1;\n  const result = [];\n  while (count--) {\n    result.push(\n        ...items.splice(\n            getRandomInt(0, items.length - 1), 1)\n    );\n  }\n  return result[0];\n};\n\nconst getRandomDate = () => {\n  const startPoint = new Date().getTime();\n  const endPoint = startPoint - new Date(360 * (24 * 3600 * 1000)).getTime();\n  const date = new Date(endPoint + Math.random() * (startPoint - endPoint));\n\n  return date.toISOString().slice(0, -14);\n};\n\nconst MAX_ID_LENGTH = 6;\n\nconst generateTransactions = (count, accounts, categories) => (Array(count).fill({}).map(() => ({\n    id: nanoid(MAX_ID_LENGTH),\n    sum: getRandomInt(1, 500),\n    date: getRandomDate(),\n    expense: Boolean(Math.round(Math.random())),\n    account: getRandomSubarray(accounts),\n    category: getRandomSubarray(categories),\n  }))\n);\n\nexport const transactions = generateTransactions(100, accounts, categories);\n","import {categories} from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  this.categories = categories;\n  }\n  async getAll() {\n    const json = this.categories;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\nimport {categories} from '../../services/mocks/mocks';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: categories,\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {accounts} from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  this.accounts = accounts;\n  }\n  async getAll() {\n    const json = this.accounts;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\nimport {accounts} from '../../services/mocks/mocks';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: accounts,\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {transactions} from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  // const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {nanoid} from 'nanoid';\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {formatMonth} from '../../utils/utils'\nimport {transactions} from '../../services/mocks/mocks';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: transactions,\n    newTransaction: {\n      id: nanoid(MAX_ID_LENGTH),\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date())\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n  updateMonth\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, setOnClickAddBtn}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    setOnClickAddBtn(false);\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts}) {\n  const [onClickAddBtn, setOnClickAddBtn] = useState(false);\n  const dispatch = useDispatch();\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    onClickAddBtn ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    setOnClickAddBtn(!onClickAddBtn);\n\n    if (onClickAddBtn) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        onClickAddBtn={onClickAddBtn}\n        setOnClickAddBtn={setOnClickAddBtn}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          <CSSTransition\n              in={onClickAddBtn}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/statistics'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState} from '../../reducers/categories/categories-slice'\nimport {selectAllAccountsState} from '../../reducers/accounts/accounts-slice'\nimport Menu from '../../components/Navigation/Menu/Menu';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className={classes.SearchCloseBtn} onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsDateGroup({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsDateGroup;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport classes from '../ListContainer.module.css';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, ...rest}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {TransitionGroup} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport {useSelector} from 'react-redux';\n\nimport {selectFilteredTransactions} from '../../../reducers/transactions/transactions-slice'\nimport {formatMonth} from \"../../../utils/utils\";\n\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\n\nfunction TransactionsListContainer() {\n  const transactions = useSelector(selectFilteredTransactions);\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {\n  // loadTransactions,\n  selectFilteredTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice'\n// import {loadCategories} from '../../reducers/categories/categories-slice'\n// import {loadAccounts} from '../../reducers/accounts/accounts-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\n// import { transactions } from '../../services/mocks/mocks';\n\nexport const TransactionsContext = React.createContext();\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  // const dispatch = useDispatch();\n\n\n  // useEffect(() => {\n  //   dispatch(loadTransactions());\n  //   dispatch(loadCategories());\n  //   dispatch(loadAccounts());\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <>\n      <Balance transactions={allTransactions} />\n      <Search />\n      <TransactionsContext.Provider value={filteredTransactions}>\n        <TransactionsListContainer />\n      </TransactionsContext.Provider>\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction WidgetsMonthBalance({currentMonth, transactions}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2 >{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthBalance;\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsMonthExpensesIndicator({\n  excessPercent,\n  balanceOfCurrent,\n  totalPercent,\n  transactionsSum,\n  type,\n  title\n  }) {\n  return (\n    <>\n      <div className={classes.IndicatorWrapper}>\n\n        {/* Indicator */}\n        <div\n          className={classes.TotalExpenses}\n          style={{width: `${totalPercent}%`}}\n        ></div>\n        <div\n          className={classes.IndicatorTotal}\n          style={{width: `${100 - totalPercent}%`}}\n        ></div>\n        <div\n          className={\n              `${\n                type === 'incomes'\n                  ? classes.IndicatorIncomes\n                  : classes.IndicatorExpenses\n              }`\n            }\n          style={{width: `${excessPercent}%`}}\n        ></div>\n\n        {/* Contents */}\n        <p className={\n            title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalTitle\n              : classes.CategoryTitle\n          }>\n          {title}\n        </p>\n        <div className={classes.TotalSumWrapper}>\n          <h4 className={classes.TotalSumAverage}>{balanceOfCurrent}</h4>\n          <h4 className={\n              title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalSum\n              : classes.Balance\n            }>\n            {type === 'incomes' ? '+' : '-'}\n            {transactionsSum}€\n          </h4>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsMonthExpensesIndicator;\n","export const getSum = (transactions, type) => {\n    return transactions\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0).toFixed(2);\n}\n\nexport const getBalance = (category, type, transactions) => {\n  const balance = transactions\n    .filter((transaction) => transaction.category.title === category)\n    .map((transaction) => (type === 'incomes' ? !transaction.expense : transaction.expense) ? transaction = +transaction.sum : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    return balance.toFixed(2);\n}\n\nexport const MOTH_COUNT = 12;\n\nexport const getMonthAverageSum = (sum) => (sum / MOTH_COUNT).toFixed(2);\nexport const getTotalPercentPerMonth = (balance, sum) => (balance / getMonthAverageSum(sum) * 100).toFixed(2);\n","import React from 'react';\nimport Indicator from '../Indicator/Indicator';\nimport classes from './Item.module.css';\nimport {getBalance} from '../utils';\nimport {formatMonth} from '../../../../utils/utils';\n\nfunction WidgetsMonthExpensesItem(\n    {\n      categories, excessPercent,\n      excessCategoryPercent, totalPercent,\n      totalCategoryPercent, balanceOfCurrent,\n      balanceCategoryOfCurrent, categoryPercent,\n      transactionsSum, type, title,\n      monthTransactions,\n      month\n    }\n  ) {\n\n  const daysAmount = new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n  const currentDay = new Date().getDate();\n  const currentMonth = formatMonth(new Date());\n  const currentDayStep = (currentDay / daysAmount * 100).toFixed(2);\n  const isShow = month === currentMonth;\n\n  return (\n    <section className={classes.MonthExpensesItem}>\n      {\n        isShow &&\n          <div className={classes.DayIndicatorWrapper}>\n            <div className={classes.DayIndicator} style={{left: `${currentDayStep}%`}}>\n              <p className={\n                `${classes.DayIndicatorDate} ${currentDay > 15 ? classes.Left : classes.Right}`\n                }>Today is  {currentMonth} {currentDay}th</p>\n            </div>\n          </div>\n      }\n      <Indicator\n        excessPercent={excessPercent}\n        balanceOfCurrent={balanceOfCurrent}\n        totalPercent={totalPercent}\n        transactionsSum={transactionsSum}\n        type={type}\n        title={title}\n      />\n\n      <ul className={classes.List}>\n        {categories.map((category) => (\n            <li className={classes.Wrapper} key={category}>\n              <Indicator\n                excessPercent={excessCategoryPercent(category, type)}\n                balanceOfCurrent={balanceCategoryOfCurrent(category, type)}\n                totalPercent={totalCategoryPercent(category, type)}\n                transactionsSum={getBalance(category, type, monthTransactions)}\n                type={type}\n                title={`${categoryPercent(getBalance(category, type, monthTransactions), transactionsSum)}%\n                  ${category}`}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthExpensesItem;\n","export const TRANSACTION_TYPE = {\n    EXPENSES: 'expenses',\n    INCOMES: 'incomes',\n  }\n","import {\n  getMonthAverageSum,\n  getSum,\n  getTotalPercentPerMonth,\n  getBalance,\n  MOTH_COUNT\n} from \"./utils\";\nimport {TRANSACTION_TYPE} from './const';\n\nexport class Statistics {\n  constructor(transactions, type, budget, monthTransactions) {\n    this.transactions = transactions;\n    this.type = type;\n    this.budget = budget;\n    this.monthTransactions = monthTransactions;\n  }\n\n  _getExcessPercent = (balance, sum) => {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getExcessBudgetPercent = (balance, sum) => {\n    const percent = balance / sum * 100;\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getTotalPercent(balance, sum) {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  categories(type) {\n    return [...new Set(this.monthTransactions\n    .filter((transaction) => (type === TRANSACTION_TYPE.EXPENSES ? transaction.expense : !transaction.expense)\n      ? transaction.sum !== 0\n      : transaction = null)\n    .map(transaction => transaction.category.title))];\n  }\n\n  sum() {\n    return getSum(this.monthTransactions, this.type);\n  }\n\n  averageSum() {\n    return !this.budget.total\n    ? (getMonthAverageSum(getSum(this.transactions, this.type)))\n    : this.budget.total;\n  }\n\n  excessPercent() {\n    return this.budget.total\n    ? this._getExcessBudgetPercent(getSum(this.monthTransactions, this.type), this.averageSum())\n    : this._getExcessPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  balanceOfCurrent() {\n    const averageValue =  (this.averageSum() - getSum(this.monthTransactions, this.type)).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${this.budget.total ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${this.budget.total ? \"budget\" : \"typical\"}`;\n  }\n\n  totalPercent() {\n    return this.budget.total\n    ? (((getSum(this.monthTransactions, this.type) / this.averageSum()) * 100) >= 100\n      ? 100\n      : (getSum(this.monthTransactions, this.type) / this.averageSum()) * 100)\n    : this._getTotalPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  percentCategory(balance, sum) {\n    let percent = (balance / sum * 100).toFixed(2);\n    const expensesPercent = percent > 99.9 ? 100 : percent;\n\n    return expensesPercent;\n  }\n\n  excessCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget.category[category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  balanceCategoryOfCurrent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const transactionsSumPerCategory = getBalance(category, type, this.monthTransactions)\n\n    const budget = this.budget.category[category];\n\n    const averageValue = budget\n      ? (budget - transactionsSumPerCategory).toFixed(2)\n      : ((balancePerCategory / MOTH_COUNT) - transactionsSumPerCategory).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${budget ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${budget ? \"budget\" : \"typical\"}`;\n  }\n\n  totalCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget.category[category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 0 : expensesPercent;\n  }\n}\n","import React from 'react';\nimport WidgetsMonthExpensesItem from './Items/Item'\nimport {formatMonth} from '../../../utils/utils'\nimport {Statistics} from './Statistics';\nimport {TRANSACTION_TYPE} from './const';\n\nfunction WidgetsMonthExpenses({currentMonth, transactions}) {\n  // for test\n  const budget = {\n    incomes: {\n      total: 2000,\n      category: {\n        Salary: 500,\n        Rent: 500,\n        Groceries: 500,\n        'Parking fees': 500,\n        'Clothing & shoes': 500,\n        Family: 500,\n        Coffee: 500,\n        Health: 500,\n      }\n    },\n    expenses: {\n      total: 2000,\n      category: {\n        Salary: 300,\n        Rent: 300,\n        Groceries: 300,\n        'Parking fees': 300,\n        'Clothing & shoes': 300,\n        Family: 300,\n        Coffee: 300,\n        Health: 300,\n      }\n    }\n  }\n\n  const monthTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const expenses = new Statistics(transactions, TRANSACTION_TYPE.EXPENSES, budget.expenses, monthTransactions);\n  const incomes = new Statistics(transactions, TRANSACTION_TYPE.INCOMES, budget.incomes, monthTransactions);\n\n  return (\n    <>\n      <WidgetsMonthExpensesItem\n        categories={expenses.categories(TRANSACTION_TYPE.EXPENSES)}\n\n        categoryPercent={expenses.percentCategory}\n        excessCategoryPercent={expenses.excessCategoryPercent}\n        balanceCategoryOfCurrent={expenses.balanceCategoryOfCurrent}\n        totalCategoryPercent={expenses.totalCategoryPercent}\n\n        excessPercent={expenses.excessPercent()}\n        balanceOfCurrent={expenses.balanceOfCurrent()}\n        totalPercent={expenses.totalPercent()}\n        transactionsSum={expenses.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.EXPENSES}\n        title={\"Expenses\"}\n        month={currentMonth}\n      />\n\n      <WidgetsMonthExpensesItem\n        categories={incomes.categories(TRANSACTION_TYPE.INCOMES)}\n\n        categoryPercent={incomes.percentCategory}\n        excessCategoryPercent={incomes.excessCategoryPercent}\n        balanceCategoryOfCurrent={incomes.balanceCategoryOfCurrent}\n        totalCategoryPercent={incomes.totalCategoryPercent}\n\n        excessPercent={incomes.excessPercent()}\n        balanceOfCurrent={incomes.balanceOfCurrent()}\n        totalPercent={incomes.totalPercent()}\n        transactionsSum={incomes.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.INCOMES}\n        title={\"Incomes\"}\n        month={currentMonth}\n      />\n    </>\n  )\n}\n\nexport default WidgetsMonthExpenses;\n","// export const MONTH_EXPENSES = {\n//   JANUARY: 'January',\n//   FEBRUARY: 'February',\n//   MARCH: 'March',\n//   APRIL: 'April',\n//   MAY: 'May',\n//   JUNE: 'June',\n//   JULY: 'July',\n//   AUGUST: 'August',\n//   SEPTEMBER: 'September',\n//   OCTOBER: 'October',\n//   NOVEMBER: 'November',\n//   DECEMBER: 'December'\n// }\n\nexport const MONTH_EXPENSES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'\n]\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsYearExpensesIndicator({month, getPercent, type}) {\n  let cls = [];\n\n  type === \"expenses\" ? cls.push(classes.Expenses) : cls.push(classes.Incomes);\n\n  return (\n    <div\n      className={cls.join(' ')}\n      id={month}\n      style={{height: `${getPercent(month, type)}%`}}\n    ></div>\n  )\n}\n\nexport default WidgetsYearExpensesIndicator;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateMonth} from '../../../reducers/transactions/transactions-slice';\n\nimport {formatMonth} from '../../../utils/utils';\nimport classes from './YearExpenses.module.css';\nimport {MONTH_EXPENSES} from './constant';\n\nimport Indicator from './Indicator/Indicator';\n\nfunction WidgetsYearExpenses({currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const maxMonthExpense = 3000; // temporary value\n\n  const getPercent = (month, type) => {\n    const incomes = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthExpense * 100);\n    let incomesPercent = percent >= 100 ? 100 : percent;\n\n    return incomesPercent === 0 ? 1 : incomesPercent;\n  }\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <div className={classes.Wrapper}>\n          {MONTH_EXPENSES.map((month) => (\n            <div\n              className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n              key={month}\n              id={month}\n              onClick={monthHandler}\n            >\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"incomes\"}\n              />\n\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"expenses\"}\n              />\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WidgetsYearExpenses;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport classes from './Budget.module.css';\n\nfunction WidgetsBudget() {\n  const categories = useSelector(selectAllCategoriesState);\n\n  return (\n    <section className={classes.BudgetWrapper}>\n      <ul> Expenses\n        {categories.map((category) => (\n            <li key={category.id}>{category.title}</li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsBudget;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport WidgetsMonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport WidgetsMonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport WidgetsYearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport WidgetsBudget from '../../components/Widgets/Budget/Budget'\nimport classes from './Statistics.module.css';\nimport {currentMonth} from '../../reducers/transactions/transactions-slice';\nimport {\n  // loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice'\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const month = useSelector(currentMonth);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(loadTransactions());\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <section className={classes.Statistics}>\n      <WidgetsMonthBalance currentMonth={month} transactions={allTransactions} />\n      <WidgetsYearExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsMonthExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsBudget />\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Dummy.module.css';\n\nfunction Dummy() {\n  return (\n\n    <section className={classes.DummyWrapper}>\n      <div className={classes.Dummy} style={{height: 'calc(100vh - 100px)'}}>\n        Coming soon...\n      </div>\n    </section>\n  )\n}\n\nexport default Dummy;\n","import React from 'react';\nimport Dummy from '../../components/Dummy/Dummy';\nimport classes from './Settings.module.css';\n\nfunction Settings() {\n  return (\n    <section className={classes.Settings}>\n      <Dummy />\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\n\nfunction App() {\n    return (\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<Transactions />} />\n          <Route path=\"/statistics\" element={<Statistics />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Layout>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}