{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/Items/Indicator/Indicator.module.css","components/Popup/Settings/Settings.module.css","components/Widgets/MonthExpenses/Items/Item.module.css","components/Balance/Balance.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Auth/Auth.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/Widgets/Budget/Budget.module.css","components/Widgets/Budget/Items/Item.module.css","components/Settings/Blocks/Block.module.css","components/UI/Input/Input.module.css","hoc/Popup/Popup.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/UI/Loader/Loader.module.css","components/Widgets/YearExpenses/Indicator/Indicator.module.css","components/UI/Select/Select.module.css","components/UI/CloseButton/CloseButton.module.css","components/Welcome/Welcome.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","reducers/user/user-slice.js","services/firebase.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","components/Auth/Auth.js","hoc/Layout/Layout.js","hoc/ScrollToTop/ScrollToTop.js","components/UI/CloseButton/CloseButton.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","components/UI/Loader/Loader.js","components/Welcome/Welcome.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/Items/Indicator/Indicator.js","components/Widgets/MonthExpenses/utils.js","components/Widgets/MonthExpenses/Items/Item.js","components/Widgets/MonthExpenses/const.js","components/Widgets/MonthExpenses/Statistics.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/constant.js","components/Widgets/YearExpenses/Indicator/Indicator.js","components/Widgets/YearExpenses/YearExpenses.js","services/budget.service.js","reducers/budget/budget-slice.js","components/Widgets/Budget/Items/Item.js","components/Widgets/Budget/Budget.js","containers/Statistics/Statistics.js","components/Settings/Blocks/Block.js","hoc/Popup/PopupContext.js","components/Settings/Settings.js","hoc/Popup/Popup.js","components/Popup/Settings/Settings.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","userSlice","createSlice","name","initialState","userId","reducers","setUserId","state","action","payload","extraReducers","selectUserId","user","actions","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","categoriesRef","collection","getAll","a","getDocs","snapshot","results","docs","map","doc","data","id","create","category","addDoc","deleteId","docRef","deleteDoc","update","setDoc","merge","loadCategories","createAsyncThunk","postCategory","newCategory","updateCategory","deleteCategory","categoryId","categoriesSlice","allCategories","title","popupItem","popupPrevItem","isLoading","hasError","isPending","isFailedToCreate","setPopupItem","setPopupPrevItem","pending","fulfilled","rejected","selectPopupItemState","categories","selectPopupPrevItemState","isCategoriesLoading","selectAllCategoriesState","allCategoriesState","filter","transaction","accountsRef","account","updateDoc","loadAccounts","postAccount","newAccount","updateAccount","deleteAccount","accountId","accountsSlice","allAccounts","balance","startBalance","archive","isAccountsLoading","accounts","selectAllAccountsState","allAccountsState","addAccount","editAccount","createAccount","transactionsRef","snapshotTransactions","snapshotCategories","snapshotAccounts","transactions","find","sum","expense","date","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatWeekday","dateString","Date","toLocaleString","weekday","formatMonthYear","month","year","formatMonth","formatYear","loadTransactions","postTransaction","deleteTransaction","transactionId","transactionsSlice","allTransactions","newTransaction","toISOString","slice","currentMonth","currentYear","isButtonClick","isButtonShow","setUserInput","value","setCategory","setAccount","resetState","updateMonth","updateYear","showButton","clickButton","showDelete","selectNewTransactionState","selectAllTransactionsState","allTransactionsState","selectFilteredTransactions","toLowerCase","includes","sort","b","getTime","setTransactionId","addTransaction","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","Math","random","push","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","item","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","clickAddButton","showAddButton","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Auth","loading","setLoading","currentUser","setCurrentUser","onAuthStateChanged","uid","useAuth","emailRef","passwordRef","handleSignup","email","current","password","createUserWithEmailAndPassword","alert","handleLogin","signInWithEmailAndPassword","handleLogout","signOut","Main","Header","Fields","Layout","LayoutContainer","LayoutMain","ScrollToTop","pathname","useLocation","window","scrollTo","CloseButton","CloseBtn","Search","userInput","length","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","round","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","confirm","TransactionsItemsDateGroup","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","day","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","Loader","center","Welcome","Transactions","WidgetsMonthBalance","filteredTransactions","toFixed","MonthBalance","List","Wrapper","WidgetsMonthExpensesIndicator","excessPercent","balanceOfCurrent","totalPercent","transactionsSum","IndicatorWrapper","TotalExpenses","style","width","IndicatorTotal","IndicatorIncomes","IndicatorExpenses","TotalTitle","CategoryTitle","TotalSumWrapper","TotalSumAverage","TotalSum","getSum","getBalance","getMonthAverageSum","getTotalPercentPerMonth","WidgetsMonthExpensesItem","excessCategoryPercent","totalCategoryPercent","balanceCategoryOfCurrent","categoryPercent","monthTransactions","daysAmount","getFullYear","getMonth","getDate","currentDay","currentDayStep","isShow","MonthExpensesItem","DayIndicatorWrapper","DayIndicator","left","DayIndicatorDate","Left","Right","Indicator","TRANSACTION_TYPE","Statistics","budget","_getExcessPercent","percent","_getExcessBudgetPercent","balancePerCategory","isBudget","_categoryId","transactionsSumPerCategory","averageValue","abs","expensesPercent","this","toUpperCase","isIncomes","incomes","Object","values","keys","flat","averageSum","isNaN","_getTotalPercent","WidgetsMonthExpenses","expenses","percentCategory","MONTH_EXPENSES","WidgetsYearExpensesIndicator","getPercent","Expenses","Incomes","height","WidgetsYearExpenses","getMaxAmountPerYear","max","maxMonthExpensePerYear","maxMonthIncomePerYear","maxMonthTransaction","monthHandler","handleClick","String","YearExpenses","LeftBtn","ListWrapper","Active","RightBtn","budgetRef","getOverall","upperCase","balanceTotal","balanceBudget","loadBudgets","postBudget","updatedBudget","budgetSlice","budgetUpdated","updateBudget","nameUpperCase","console","log","currentType","overall","JSON","parse","stringify","selectAllBudgetState","selectUpdatedBudgetState","WidgetsBudgetItem","dataType","isHeader","Block","Title","SubTitle","Description","InputDisabled","WidgetsBudget","prevBudget","onInputChange","getAttribute","BudgetWrapper","HeaderWrapper","Content","newBudget","newUpdatedBudget","SettingsBlock","items","header","onClickItem","onClickToggle","dataheader","Item","dataid","datavalue","datatype","PopupContext","createContext","usePopup","useContext","PopupProvider","popup","setPopup","Provider","visible","toggle","prev","Settings","toString","Popup","EnterActive","ExitActive","Container","PopupSettings","popupState","popupPrevState","prevState","isExists","it","isDelete","onChangeType","checked","Label","Type","loadingCategories","loadingAccounts","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","budgetReducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e42a555d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndicatorWrapper\":\"Indicator_IndicatorWrapper__3q_mt\",\"IndicatorTotal\":\"Indicator_IndicatorTotal__1Y7TP\",\"IndicatorExpenses\":\"Indicator_IndicatorExpenses__12-8R\",\"IndicatorIncomes\":\"Indicator_IndicatorIncomes__9rMe6\",\"Expense\":\"Indicator_Expense__22TSw\",\"TotalExpenses\":\"Indicator_TotalExpenses__1Dw4H\",\"TotalTitle\":\"Indicator_TotalTitle__xlfB6\",\"TotalSumWrapper\":\"Indicator_TotalSumWrapper__mgUZc\",\"TotalSumAverage\":\"Indicator_TotalSumAverage__PGk5u\",\"TotalSum\":\"Indicator_TotalSum__16pCE\",\"Balance\":\"Indicator_Balance__3Hw51\",\"CategoryTitle\":\"Indicator_CategoryTitle__1lw9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Welcome\":\"Settings_Welcome__31UgF\",\"Button\":\"Settings_Button__qlh1R\",\"Input\":\"Settings_Input__2QGwt\",\"Type\":\"Settings_Type__3Q39w\",\"Wrapper\":\"Settings_Wrapper__1k2JK\",\"Label\":\"Settings_Label__2arxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpensesItem\":\"Item_MonthExpensesItem__YjU-v\",\"IndicatorWrapper\":\"Item_IndicatorWrapper__2mppw\",\"Indicator\":\"Item_Indicator__1tgmw\",\"DayIndicatorWrapper\":\"Item_DayIndicatorWrapper__1EIsj\",\"DayIndicator\":\"Item_DayIndicator__13Cg7\",\"DayIndicatorDate\":\"Item_DayIndicatorDate__3kWwy\",\"Right\":\"Item_Right__2f5Fi\",\"Left\":\"Item_Left__2pD6l\",\"List\":\"Item_List__3zSXB\",\"Wrapper\":\"Item_Wrapper__2aB6H\",\"CategoryTitle\":\"Item_CategoryTitle__1JliW\",\"Balance\":\"Item_Balance__1vv4s\",\"IndicatorTotal\":\"Item_IndicatorTotal__26IWg\",\"IndicatorExpenses\":\"Item_IndicatorExpenses__2n_83\",\"IndicatorIncomes\":\"Item_IndicatorIncomes__1nQzk\",\"TotalTitle\":\"Item_TotalTitle__akr9c\",\"TotalSumWrapper\":\"Item_TotalSumWrapper__2_RW5\",\"TotalSumAverage\":\"Item_TotalSumAverage__1WQ-t\",\"TotalSum\":\"Item_TotalSum__37VIa\",\"AverageWrapper\":\"Item_AverageWrapper__T8i9X\",\"TotalExpenses\":\"Item_TotalExpenses__de84n\",\"Expense\":\"Item_Expense__1uT9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"ListWrapper\":\"YearExpenses_ListWrapper__1HoYZ\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\",\"LeftBtn\":\"YearExpenses_LeftBtn__bMop3\",\"RightBtn\":\"YearExpenses_RightBtn__1v0s_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Auth_Main__11kSo\",\"Header\":\"Auth_Header__1VwbD\",\"Fields\":\"Auth_Fields__3NQ_O\",\"Button\":\"Auth_Button__tzrL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Budget_BudgetWrapper__2eRq_\",\"HeaderWrapper\":\"Budget_HeaderWrapper__2QyV8\",\"Header\":\"Budget_Header__xvghW\",\"Content\":\"Budget_Content__11etz\",\"Button\":\"Budget_Button__JsHlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Item_BudgetWrapper__3V_CQ\",\"Header\":\"Item_Header__3N3pa\",\"Block\":\"Item_Block__2m7Qg\",\"Description\":\"Item_Description__2TYyv\",\"Title\":\"Item_Title__3RCdl\",\"SubTitle\":\"Item_SubTitle__3sJSk\",\"Input\":\"Item_Input__2vqP4\",\"InputDisabled\":\"Item_InputDisabled__fpU2l\",\"Button\":\"Item_Button__1Bpmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Block_Wrapper__3Behv\",\"Content\":\"Block_Content__3gcKc\",\"Header\":\"Block_Header__3xn1h\",\"Item\":\"Block_Item__226YO\",\"Button\":\"Block_Button__10LYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Popup_Container__3DUOe\",\"EnterActive\":\"Popup_EnterActive__iJHcV\",\"show\":\"Popup_show__3z3FU\",\"ExitActive\":\"Popup_ExitActive__2EFlQ\",\"CloseBtn\":\"Popup_CloseBtn__jYf4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"CloseBtn\":\"Search_CloseBtn__2nr-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__ANdA0\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__SyWc9\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__2QT4J\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__3_aVs\",\"center\":\"Loader_center__Iyafz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Indicator_Incomes__3bIeI\",\"Expenses\":\"Indicator_Expenses__1JIA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CloseBtn\":\"CloseButton_CloseBtn__3yyFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Welcome\":\"Welcome_Welcome__EjqLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {createSlice} from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userId: '',\n  },\n  reducers: {\n    setUserId: (state, action) => {\n      return {\n        userId: action.payload,\n      };\n    },\n  },\n  extraReducers: {},\n});\n\nexport const selectUserId = (state) => state.user.userId;\n\nexport const {setUserId} = userSlice.actions;\nexport default userSlice.reducer;\n","import {useEffect, useState} from \"react\";\nimport {useDispatch} from 'react-redux';\nimport {setUserId} from \"../reducers/user/user-slice\";\n\nimport {initializeApp} from \"firebase/app\";\nimport {getFirestore} from \"firebase/firestore\";\nimport {getAuth, createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut} from 'firebase/auth';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA-jcEb53c4muML3hfX3HA7WYvqCSwBNNY\",\n  authDomain: \"expense-tracker-4e13a.firebaseapp.com\",\n  projectId: \"expense-tracker-4e13a\",\n  storageBucket: \"expense-tracker-4e13a.appspot.com\",\n  messagingSenderId: \"65016479636\",\n  appId: \"1:65016479636:web:8b455fad8e8c1b1c791981\"\n};\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth();\n\nexport function singUp(email, password) {\n    createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n\n//Custom Hook\nexport function useAuth() {\n  const [currentUser, setCurrentUser] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n      if (user) {\n      dispatch(setUserId(user.uid));\n    } else {\n      dispatch(setUserId(null));\n    }\n      setCurrentUser(user)\n    });\n    return unsub;\n// eslint-disable-next-line\n  }, [])\n\n  return currentUser;\n}\n\nexport default db;\n","import {addDoc, collection, setDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst categoriesRef = collection(db, \"categories\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(categoriesRef);\n  const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  return results;\n}\n\nexport const create = async (category) => {\n  const payload = {...category};\n  await addDoc(categoriesRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(categoriesRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, data) => {\n  // const id = data.id\n  const docRef = doc(db, \"categories\", id);\n  const payload = {...data};\n\n  setDoc(docRef, payload, {merge:true});\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport {getAll, create, deleteId, update} from '../../services/category.service';\nimport {selectUserId} from '../user/user-slice';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postCategory = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    return await create(newCategory);\n  }\n)\n\nexport const updateCategory = createAsyncThunk(\n  'categories/updateData',\n  async (data) => {\n    const {id} = data;\n    return await update(id, data);\n  }\n)\n\nexport const deleteCategory = createAsyncThunk(\n  'categories/deleteData',\n  async (categoryId) => {\n    return await deleteId(categoryId);\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    popupItem: {},\n    popupPrevItem: {},\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    setPopupItem: (state, action) => {\n      return {\n        ...state,\n        popupItem: action.payload,\n      };\n    },\n    setPopupPrevItem: (state, action) => {\n      return {\n        ...state,\n        popupPrevItem: action.payload,\n      };\n    },\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const allCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const selectPopupItemState = (state) => state.categories.popupItem;\nexport const selectPopupPrevItemState = (state) => state.categories.popupPrevItem;\nexport const isCategoriesLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const selectAllCategoriesState = (state) => {\n  const allCategories = allCategoriesState(state);\n  const userId = selectUserId(state);\n\n  return allCategories\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const {setPopupItem, setPopupPrevItem} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {addDoc, collection, updateDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst accountsRef = collection(db, \"accounts\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(accountsRef);\n  const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  return results;\n}\n\nexport const create = async (account) => {\n  const payload = {...account};\n  await addDoc(accountsRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(accountsRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title, userId) => {\n  const docRef = doc(accountsRef, id);\n  const payload = {title, userId};\n\n  updateDoc(docRef, payload);\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport {getAll, create, update, deleteId} from '../../services/account.service';\nimport {selectUserId} from '../user/user-slice';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postAccount = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    return await create(newAccount);\n  }\n)\n\nexport const updateAccount = createAsyncThunk(\n  'accounts/updateData',\n  async ({id, title, userId}) => {\n    return await update(id, title, userId);\n  }\n)\n\nexport const deleteAccount = createAsyncThunk(\n  'accounts/deleteData',\n  async (accountId) => {\n    return await deleteId(accountId);\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {},\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const allAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isAccountsLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const selectAllAccountsState = (state) => {\n  const allAccounts = allAccountsState(state);\n  const userId = selectUserId(state);\n\n  return allAccounts\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const {addAccount, editAccount, createAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {addDoc, collection, updateDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst transactionsRef = collection(db, \"transactions\");\nconst categoriesRef = collection(db, \"categories\");\nconst accountsRef = collection(db, \"accounts\");\n\nexport const getAll = async () => {\n  const snapshotTransactions = await getDocs(transactionsRef);\n  const snapshotCategories = await getDocs(categoriesRef);\n  const snapshotAccounts = await getDocs(accountsRef);\n\n  let transactions = {};\n  const categories = snapshotCategories.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  const accounts = snapshotAccounts.docs.map((doc) => ({...doc.data(), id: doc.id}));\n\n  transactions = snapshotTransactions.docs.map((doc) => {\n    transactions = {id: doc.id, ...doc.data()}\n    transactions.category = categories.find((category) => category.id === transactions.categoryId);\n    transactions.account = accounts.find((account) => account.id === transactions.accountId);\n    return transactions;\n  });\n  return transactions;\n}\n\nexport const create = async (data) => {\n  const {sum, expense, date, categoryId, accountId, userId} = data;\n  const payload = {sum, expense, date, categoryId, accountId, userId};\n  await addDoc(transactionsRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(transactionsRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title) => {\n  const docRef = doc(transactionsRef, id);\n  const payload = {title};\n\n  updateDoc(docRef, payload);\n}\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getAll, create, deleteId} from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {selectUserId} from '../user/user-slice';\nimport {formatMonth, formatYear} from '../../utils/utils'\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postTransaction = createAsyncThunk(\n  'transactions/postData',\n  async (data) => {\n    return await create(data);\n  }\n)\n\nexport const deleteTransaction = createAsyncThunk(\n  'transactions/deleteData',\n  async (transactionId) => {\n    return await deleteId(transactionId);\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date()),\n    currentYear: formatYear(new Date()),\n    isButtonClick: false,\n    isButtonShow: false\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          categoryId: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          accountId: action.payload,\n        }\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          // id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n        },\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n    updateYear: (state, action) => {\n      return {\n        ...state,\n        currentYear: action.payload,\n      };\n    },\n    showButton: (state, action) => {\n      return {\n        ...state,\n        isButtonShow: !state.isButtonShow,\n      };\n    },\n    clickButton: (state, action) => {\n      return {\n        ...state,\n        isButtonClick: !state.isButtonClick,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nconst allTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\nexport const currentYear = (state) => state.transactions.currentYear;\nexport const isButtonClick = (state) => state.transactions.isButtonClick;\nexport const isButtonShow = (state) => state.transactions.isButtonShow;\n\nexport const selectAllTransactionsState = (state) => {\n  const allTransactions = allTransactionsState(state);\n  const userId = selectUserId(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n  const userId = selectUserId(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.userId === userId)\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  updateMonth,\n  updateYear,\n  clickButton,\n  showButton,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  postTransaction,\n  resetState,\n  clickButton,\n  loadTransactions\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, userId}){\n  // console.log(`🚀 ~ file: Form.js ~ line 21 ~ TransactionCreateForm ~ userId`, userId);\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount(accountId));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory(categoryId));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(postTransaction({...newTransactionState, userId}));\n    dispatch(resetState());\n    dispatch(clickButton());\n    dispatch(loadTransactions());\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState, isButtonShow, isButtonClick, clickButton} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts, userId}) {\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n  const showAddButton = useSelector(isButtonShow);\n\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    clickAddButton ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    dispatch(clickButton());\n\n    if (clickAddButton) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        userId={userId}\n        onClickAddBtn={clickAddButton}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          {showAddButton && <CSSTransition\n              in={clickAddButton}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>}\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/statistics'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import { useRef, useState } from 'react';\nimport classes from './Auth.module.css';\nimport { singUp, logout, login, useAuth } from '../../services/firebase';\nimport {NavLink} from 'react-router-dom';\n\nfunction Auth() {\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSignup = async () => {\n    setLoading(true);\n    try {\n      await singUp(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Email already in use!\");\n    }\n    setLoading(false);\n  }\n\n  const handleLogin = async () => {\n    setLoading(true);\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Wrong email or password\");\n    }\n    setLoading(false);\n  }\n\n  const handleLogout = async () => {\n    setLoading(true);\n    try {\n      await logout();\n    } catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <section className={classes.Main}>\n      {currentUser && <p className={classes.Header}>{currentUser?.email}</p>}\n      {!currentUser && <div className={classes.Fields}>\n        <input ref={emailRef} placeholder=\"Email\" />\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n      </div>}\n\n      {!currentUser && <button className={classes.Button} disabled={loading || currentUser} onClick={handleSignup}>Sing Up</button>}\n      {!currentUser && <button className={classes.Button} disabled={loading || currentUser} onClick={handleLogin}>Log In</button>}\n      {currentUser && <NavLink to={'/'} className={classes.Button} disabled={loading || !currentUser} onClick={handleLogout}>Log Out</NavLink>}\n\n    </section>\n  );\n}\n\nexport default Auth;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState, loadCategories} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, loadAccounts} from '../../reducers/accounts/accounts-slice';\nimport { selectUserId } from '../../reducers/user/user-slice';\nimport Menu from '../../components/Navigation/Menu/Menu';\nimport Auth from '../../components/Auth/Auth';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n  }, [dispatch]);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        <Auth />\n        {props.children}\n        {userId && <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n          userId={userId}\n        />}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {clickButton, isButtonClick} from '../../reducers/transactions/transactions-slice'\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (clickAddButton) {\n      dispatch(clickButton());\n    }\n    // eslint-disable-next-line\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport classes from './CloseButton.module.css';\n\nconst CloseButton = ({onClick}) => {\n  return (\n    <span className={classes.CloseBtn} onClick={onClick}/>\n  )\n}\n\nexport default CloseButton;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport CloseButton from '../UI/CloseButton/CloseButton';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <div className={classes.CloseBtn}>\n          <CloseButton onClick={onClearSearchTermHandler}/>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction, loadTransactions} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    const confirm = window.confirm(\"Are you sure?\");\n\n    if (confirm) {\n      dispatch(deleteTransaction(id));\n      dispatch(loadTransactions());\n    }\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsDateGroup({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsDateGroup;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport classes from '../ListContainer.module.css';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, ...rest}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {TransitionGroup} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport {useSelector} from 'react-redux';\n\nimport {selectFilteredTransactions} from '../../../reducers/transactions/transactions-slice'\nimport {formatMonth} from \"../../../utils/utils\";\n\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\n\nfunction TransactionsListContainer() {\n  const transactions = useSelector(selectFilteredTransactions);\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React from 'react';\nimport classes from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={classes.center}>\n      <div className={classes.Loader}>\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport classes from './Welcome.module.css';\n\nfunction Welcome() {\n  return (\n    <section className={classes.Welcome}>\n      <div>\n        <p>Please <b>login</b> or <b>sing up</b></p>\n        <p>You can try a demo account</p>\n        <p>Use <b>demo@demo.com</b> as email and password for login</p>\n      </div>\n    </section>\n  );\n}\n\nexport default Welcome;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n  loadTransactions,\n  selectAllTransactionsState,\n  showButton, isLoading\n} from '../../reducers/transactions/transactions-slice'\nimport {selectUserId} from '../../reducers/user/user-slice';\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\nimport Loader from '../../components/UI/Loader/Loader';\nimport Welcome from '../../components/Welcome/Welcome';\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const loading = useSelector(isLoading);\n  const userId = useSelector(selectUserId);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(showButton());\n    dispatch(loadTransactions());\n    return () => {\n      dispatch(showButton());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {loading && userId && <Loader />}\n      {!loading && userId &&\n        <>\n          <Balance transactions={allTransactions} />\n          <Search />\n          <TransactionsListContainer />\n        </>\n      }\n      {!userId &&\n        <Welcome />\n      }\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth, formatYear} from '../../../utils/utils'\n\nfunction WidgetsMonthBalance({currentYear, currentMonth, transactions, }) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatYear(transaction.date) === currentYear)\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0).toFixed(2);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0).toFixed(2);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2>{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthBalance;\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsMonthExpensesIndicator({\n  excessPercent,\n  balanceOfCurrent,\n  totalPercent,\n  transactionsSum,\n  type,\n  title\n  }) {\n  return (\n    <>\n      <div className={classes.IndicatorWrapper}>\n\n        {/* Indicator */}\n        <div\n          className={classes.TotalExpenses}\n          style={{width: `${totalPercent}%`}}\n        ></div>\n        <div\n          className={classes.IndicatorTotal}\n          style={{width: `${100 - totalPercent}%`}}\n        ></div>\n        <div\n          className={\n              `${\n                type === 'incomes'\n                  ? classes.IndicatorIncomes\n                  : classes.IndicatorExpenses\n              }`\n            }\n          style={{width: `${excessPercent}%`}}\n        ></div>\n\n        {/* Contents */}\n        <p className={\n            title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalTitle\n              : classes.CategoryTitle\n          }>\n          {title}\n        </p>\n        <div className={classes.TotalSumWrapper}>\n          <p className={classes.TotalSumAverage}>{balanceOfCurrent}</p>\n          <p className={\n              title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalSum\n              : classes.Balance\n            }>\n            {type === 'incomes' ? '+' : '-'}\n            {transactionsSum}€\n          </p>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsMonthExpensesIndicator;\n","export const getSum = (transactions, type) => {\n    return transactions\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0).toFixed(2);\n}\n\nexport const getBalance = (category, type, transactions) => {\n  const balance = transactions\n    .filter((transaction) => transaction.category.title === category)\n    .map((transaction) => (type === 'incomes' ? !transaction.expense : transaction.expense) ? transaction = +transaction.sum : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    return balance.toFixed(2);\n}\n\nexport const MOTH_COUNT = 12;\n\nexport const getMonthAverageSum = (sum) => (sum / MOTH_COUNT).toFixed(2);\nexport const getTotalPercentPerMonth = (balance, sum) => (balance / getMonthAverageSum(sum) * 100).toFixed(2);\n","import React from 'react';\nimport Indicator from './Indicator/Indicator';\nimport classes from './Item.module.css';\nimport {getBalance} from '../utils';\nimport {formatMonth} from '../../../../utils/utils';\n\nfunction WidgetsMonthExpensesItem(\n    {\n      categories, excessPercent,\n      excessCategoryPercent, totalPercent,\n      totalCategoryPercent, balanceOfCurrent,\n      balanceCategoryOfCurrent, categoryPercent,\n      transactionsSum, type, title,\n      monthTransactions,\n      month\n    }\n  ) {\n\n  const daysAmount = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();\n  const currentDay = new Date().getDate();\n  const currentMonth = formatMonth(new Date());\n  const currentDayStep = (currentDay / daysAmount * 100).toFixed(2);\n  const isShow = month === currentMonth;\n\n  return (\n    <section className={classes.MonthExpensesItem}>\n      {\n        isShow &&\n          <div className={classes.DayIndicatorWrapper}>\n            <div className={classes.DayIndicator} style={{left: `${currentDayStep}%`}}>\n              <p className={\n                `${classes.DayIndicatorDate} ${currentDay > 15 ? classes.Left : classes.Right}`\n                }>Today is  {currentMonth} {currentDay}th</p>\n            </div>\n          </div>\n      }\n      <Indicator\n        excessPercent={excessPercent}\n        balanceOfCurrent={balanceOfCurrent}\n        totalPercent={totalPercent}\n        transactionsSum={transactionsSum}\n        type={type}\n        title={title}\n      />\n\n      <ul className={classes.List}>\n        {categories.map((category) => (\n            <li className={classes.Wrapper} key={category}>\n              <Indicator\n                excessPercent={excessCategoryPercent(category, type)}\n                balanceOfCurrent={balanceCategoryOfCurrent(category, type)}\n                totalPercent={totalCategoryPercent(category, type)}\n                transactionsSum={getBalance(category, type, monthTransactions)}\n                type={type}\n                title={`${categoryPercent(getBalance(category, type, monthTransactions), transactionsSum)}%\n                  ${category}`}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthExpensesItem;\n","export const TRANSACTION_TYPE = {\n    EXPENSES: 'expenses',\n    INCOMES: 'incomes',\n  }\n","import {\n  getMonthAverageSum,\n  getSum,\n  getTotalPercentPerMonth,\n  getBalance,\n  MOTH_COUNT\n} from \"./utils\";\nimport {TRANSACTION_TYPE} from './const';\n\nexport class Statistics {\n  constructor(transactions, type, budget, monthTransactions, currentMonth, currentYear, userId, allCategories) {\n    this.transactions = transactions;\n    this.allCategories = allCategories;\n    this.type = type;\n    this.budget = budget;\n    this.monthTransactions = monthTransactions;\n    this.currentMonth = currentMonth;\n    this.currentYear = currentYear;\n    this.category = this.type[0].toUpperCase() + this.type.slice(1);\n    this.userId = userId;\n    this.isBudget = this.budget && this.budget[currentYear] && this.budget[currentYear][currentMonth];\n  }\n\n  _getExcessPercent = (balance, sum) => {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getExcessBudgetPercent = (balance, sum) => {\n    const percent = balance / sum * 100;\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getTotalPercent(balance, sum) {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  _categoryId(category, type) {\n    const isIncomes = type === \"incomes\" ? true : false\n\n    return this.allCategories\n      .filter((item) => item.incomes === isIncomes)\n      .filter((item) => item.title === category)\n      .map((item) => item.id).join();\n  }\n\n  categories(type) {\n    const uniqueCategory = [...new Set(this.monthTransactions\n    .filter((transaction) => (type === TRANSACTION_TYPE.EXPENSES ? transaction.expense : !transaction.expense)\n      ? transaction.sum !== 0\n      : transaction = null)\n    .map(transaction => transaction.category.title))];\n\n    const sortCategory = uniqueCategory\n      .map((category) => this.monthTransactions\n      .map((transaction) => transaction.category.title === category\n        ? (type === 'expenses' ? transaction.expense : !transaction.expense)\n          ? transaction = {[category]: +transaction.sum}\n          : transaction = null\n        : null)\n        .filter((item) => item ? item : null)\n        .reduce((acc, sum) => {\n          return {\n            [category]: acc[category] + sum[category]\n          }\n        }))\n        .sort((a, b) => Object.values(b) - Object.values(a))\n        .map((item) => Object.keys(item)).flat()\n\n    return sortCategory;\n  }\n\n  sum() {\n    return getSum(this.monthTransactions, this.type);\n  }\n\n  averageSum() {\n    return !this.isBudget\n    ? (getMonthAverageSum(getSum(this.transactions, this.type)))\n    : this.budget[this.currentYear][this.currentMonth][this.type][this.category];\n  }\n\n  excessPercent() {\n    return this.isBudget && this.budget[this.currentYear][this.currentMonth][this.type][this.category]\n    ? this._getExcessBudgetPercent(getSum(this.monthTransactions, this.type), this.averageSum())\n    : this._getExcessPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  balanceOfCurrent() {\n    const averageValue =  (this.averageSum() - getSum(this.monthTransactions, this.type)).toFixed(2);\n\n    if (!this.isBudget) return;\n\n    return averageValue > 0\n      ? `${averageValue}€ below ${this.budget[this.currentYear][this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`\n      : isNaN(averageValue) ? \"\"\n      : averageValue === '0.00' ? \"equal to budget\"\n      : `${Math.abs(averageValue)}€ above ${this.budget[this.currentYear][this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`;\n  }\n\n  totalPercent() {\n    return this.isBudget && this.budget[this.currentYear][this.currentMonth][this.type][this.category]\n    ? (((getSum(this.monthTransactions, this.type) / this.averageSum()) * 100) >= 100\n      ? 100\n      : (getSum(this.monthTransactions, this.type) / this.averageSum()) * 100)\n    : this._getTotalPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  percentCategory(balance, sum) {\n    let percent = (balance / sum * 100).toFixed(2);\n    const expensesPercent = percent > 99.9 ? 100 : percent;\n\n    return expensesPercent;\n  }\n\n  excessCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.isBudget && this.budget[this.currentYear][this.currentMonth][this.type][this._categoryId(category, type)];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  balanceCategoryOfCurrent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const transactionsSumPerCategory = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.isBudget && this.budget[this.currentYear][this.currentMonth][this.type][this._categoryId(category, type)];\n\n    const averageValue = budget\n    ? (budget - transactionsSumPerCategory).toFixed(2)\n    : ((balancePerCategory / MOTH_COUNT) - transactionsSumPerCategory).toFixed(2);\n\n    return averageValue > 0\n      ? `${averageValue}€ below ${budget ? \"budget\" : \"typical\"}`\n      : averageValue === '0.00' ? \"equal to budget\"\n      : `${Math.abs(averageValue)}€ above ${budget ? \"budget\" : \"typical\"}`\n  }\n\n  totalCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.isBudget && this.budget[this.currentYear][this.currentMonth][this.type][this._categoryId(category, type)];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 0 : expensesPercent;\n  }\n}\n","import React from 'react';\nimport WidgetsMonthExpensesItem from './Items/Item'\nimport {formatMonth, formatYear} from '../../../utils/utils'\nimport {Statistics} from './Statistics';\nimport {TRANSACTION_TYPE} from './const';\n\nfunction WidgetsMonthExpenses({currentYear, currentMonth, transactions, budget, userId, allCategories}) {\n  const monthTransactions = transactions\n    .filter((transaction) => formatYear(transaction.date) === currentYear)\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const expenses = new Statistics(transactions, TRANSACTION_TYPE.EXPENSES, budget, monthTransactions, currentMonth, currentYear, userId, allCategories);\n  const incomes = new Statistics(transactions, TRANSACTION_TYPE.INCOMES, budget, monthTransactions, currentMonth, currentYear, userId, allCategories);\n\n  return (\n    <>\n      <WidgetsMonthExpensesItem\n        categories={expenses.categories(TRANSACTION_TYPE.EXPENSES)}\n\n        categoryPercent={expenses.percentCategory}\n        excessCategoryPercent={expenses.excessCategoryPercent}\n        balanceCategoryOfCurrent={expenses.balanceCategoryOfCurrent}\n        totalCategoryPercent={expenses.totalCategoryPercent}\n\n        excessPercent={expenses.excessPercent()}\n        balanceOfCurrent={expenses.balanceOfCurrent()}\n        totalPercent={expenses.totalPercent()}\n        transactionsSum={expenses.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.EXPENSES}\n        title={\"Expenses\"}\n        month={currentMonth}\n      />\n\n      <WidgetsMonthExpensesItem\n        categories={incomes.categories(TRANSACTION_TYPE.INCOMES)}\n\n        categoryPercent={incomes.percentCategory}\n        excessCategoryPercent={incomes.excessCategoryPercent}\n        balanceCategoryOfCurrent={incomes.balanceCategoryOfCurrent}\n        totalCategoryPercent={incomes.totalCategoryPercent}\n\n        excessPercent={incomes.excessPercent()}\n        balanceOfCurrent={incomes.balanceOfCurrent()}\n        totalPercent={incomes.totalPercent()}\n        transactionsSum={incomes.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.INCOMES}\n        title={\"Incomes\"}\n        month={currentMonth}\n      />\n    </>\n  )\n}\n\nexport default WidgetsMonthExpenses;\n","// export const MONTH_EXPENSES = {\n//   JANUARY: 'January',\n//   FEBRUARY: 'February',\n//   MARCH: 'March',\n//   APRIL: 'April',\n//   MAY: 'May',\n//   JUNE: 'June',\n//   JULY: 'July',\n//   AUGUST: 'August',\n//   SEPTEMBER: 'September',\n//   OCTOBER: 'October',\n//   NOVEMBER: 'November',\n//   DECEMBER: 'December'\n// }\n\nexport const MONTH_EXPENSES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'\n]\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsYearExpensesIndicator({year, month, getPercent, type}) {\n  let cls = [];\n\n  type === \"expenses\" ? cls.push(classes.Expenses) : cls.push(classes.Incomes);\n\n  return (\n    <div\n      className={cls.join(' ')}\n      id={month}\n      style={{height: `${getPercent(year, month, type)}%`}}\n    ></div>\n  )\n}\n\nexport default WidgetsYearExpensesIndicator;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateMonth, updateYear} from '../../../reducers/transactions/transactions-slice';\n\nimport {formatMonth, formatYear} from '../../../utils/utils';\nimport classes from './YearExpenses.module.css';\nimport {MONTH_EXPENSES} from './constant';\n\nimport Indicator from './Indicator/Indicator';\n\nfunction WidgetsYearExpenses({currentYear, currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const getMaxAmountPerYear = (year, type) => {\n    const months = [...new Set(transactions\n      .filter((transaction) => formatYear(transaction.date) === year)\n      .map((transaction) => formatMonth(transaction.date)))];\n\n    const amount = Math.max(...months\n      .map((month) => transactions\n      .map((transaction) => formatMonth(transaction.date) === month\n        ? (type === 'expenses' ? transaction.expense : !transaction.expense)\n          ? transaction = +transaction.sum\n          : transaction = null\n        : null)\n      .reduce((acc, sum) => acc + sum, 0)))\n\n    return amount;\n  }\n\n  const maxMonthExpensePerYear = getMaxAmountPerYear(currentYear, 'expenses');\n  const maxMonthIncomePerYear = getMaxAmountPerYear(currentYear, 'income');\n\n  const maxMonthTransaction = Math.max(maxMonthExpensePerYear, maxMonthIncomePerYear)\n\n  const getPercent = (year, month, type) => {\n    const incomes = transactions\n    .filter((transaction) => formatYear(transaction.date) === year)\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n    ? transaction = +transaction.sum\n    : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthTransaction * 100);\n    let incomesPercent = percent >= 100 ? percent : percent;\n\n    return incomesPercent;\n  }\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n  const handleClick = ({target}) => {\n    const id = target.id;\n    let year = +currentYear;\n\n    id === \"prev\" ? --year : ++year\n\n    dispatch(updateYear(String(year)));\n  };\n\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <button\n          id={'prev'}\n          className={classes.LeftBtn}\n          onClick={handleClick}\n        ></button>\n\n        <h4>{currentYear}</h4>\n        <div className={classes.Wrapper}>\n          {MONTH_EXPENSES.map((month) => (\n            <div\n              className={classes.ListWrapper}\n              key={month}\n              onClick={monthHandler}\n            >\n              <div\n                className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n                id={month}\n              >\n                <Indicator\n                  year={currentYear}\n                  month={month}\n                  getPercent={getPercent}\n                  type={\"incomes\"}\n                />\n\n                <Indicator\n                  year={currentYear}\n                  month={month}\n                  getPercent={getPercent}\n                  type={\"expenses\"}\n                />\n              </div>\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n\n        <button\n          id={'next'}\n          className={classes.RightBtn}\n          onClick={handleClick}\n        ></button>\n      </section>\n    </>\n  )\n}\n\nexport default WidgetsYearExpenses;\n","import {addDoc, collection, setDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst budgetRef = collection(db, \"budgets\");\n\nexport const getAll = async (userId) => {\n  const snapshot = await getDocs(budgetRef, userId);\n  const results = snapshot.docs.filter((doc) => doc.id === userId)\n    .map((doc) => (doc.data()))\n    .find((doc) => doc);\n  return results\n}\n\nexport const create = async (data) => {\n  const {sum, expense, date, categoryId, accountId} = data;\n  const payload = {sum, expense, date, categoryId, accountId};\n  await addDoc(budgetRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(budgetRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, budget) => {\n  const docRef = doc(db, \"budgets\", id);\n  const payload = {...budget};\n\n  setDoc(docRef, payload, {merge:true});\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getAll, update} from '../../services/budget.service';\n\nconst getOverall = (budget, type, month, year) => {\n    if (Object.keys(budget[year][month][type]).length === 0) {\n      return;\n    };\n    const upperCase = type[0].toUpperCase() + type.slice(1);\n    const balanceTotal = budget[year][month][type][upperCase];\n    const balanceBudget = Object.values(budget[year][month][type]).reduce((a, b) => +a + +b);\n\n    const overall = Math.abs((!balanceTotal ? 0 : balanceTotal) - balanceBudget);\n\n    return overall;\n  }\n\nexport const loadBudgets = createAsyncThunk(\n  'budgets/loadData',\n  async (userId) => {\n    return await getAll(userId);\n  }\n)\n\nexport const postBudget = createAsyncThunk(\n  'budgets/addData',\n  async ({updatedBudget, userId}) => {\n\n    return await update(userId, updatedBudget);\n  }\n)\n\nexport const budgetSlice = createSlice({\n  name: \"budget\",\n  initialState: {\n    budget: {},\n    budgetUpdated: {},\n    isLoading: false,\n  },\n  reducers: {\n    updateBudget: (state, action) => {\n      const type = action.payload.type;\n      const name = action.payload.id;\n      const nameUpperCase = type[0].toUpperCase() + type.slice(1);\n      const value = +action.payload.value;\n      const month = action.payload.month;\n      const year = action.payload.year;\n      let budget = action.payload.updatedBudget;\n\n      let current = {};\n\n      if (!budget) {\n        console.log('1');\n        current[year] = {[month]: {expenses: {}, incomes: {}}};\n\n        let currentYear = {...current[year]};\n        let currentMonth = {...currentYear[month]};\n        currentMonth = {[type]: {}};\n        let currentType = {...currentMonth[type]};\n        currentType[name] = value;\n        currentMonth[type] = currentType;\n        currentYear[month] = {...current[year][month], ...currentMonth};\n\n        current[year] = {...currentYear};\n\n        const overall = getOverall(current, type, month, year).toFixed(2);\n        currentType[nameUpperCase] = overall;\n        currentMonth[type] = currentType;\n        currentYear[month] = {...current[year][month], ...currentMonth};\n        // current[year] = {...budget[month], ...currentYear};\n      }\n\n      if (budget && (!budget[year] || !budget[year][month])) {\n        console.log('2');\n        current[year] = {[month]: {expenses: {}, incomes: {}}};\n\n        let currentYear = {...current[year]};\n        let currentMonth = {...currentYear[month]};\n        currentMonth = {[type]: {}};\n        let currentType = {...currentMonth[type]};\n        currentType[name] = value;\n        currentMonth[type] = currentType;\n        currentYear[month] = {...current[year][month], ...currentMonth};\n\n        current[year] = {...budget[year], ...currentYear};\n        current = {...budget, ...current}\n\n        const overall = getOverall(current, type, month, year).toFixed(2);\n        currentType[nameUpperCase] = overall;\n        currentMonth[type] = currentType;\n        currentYear[month] ={...current[year][month], ...currentMonth};\n        current[year] = {...budget[year], ...currentYear};\n        current = {...budget, ...current}\n      }\n\n\n      if (budget && budget[year] && budget[year][month]) {\n        console.log('3');\n\n        current = {...JSON.parse(JSON.stringify(budget))};\n        let currentYear = current[year];\n        let currentMonth = {...currentYear[month]};\n        currentMonth = {[type]: {}};\n        let currentType = {...currentMonth[type]};\n        currentType[name] = value;\n        currentMonth[type] = {...budget[year][month][type], ...currentType};\n        currentYear[month] = {...budget[year][month], ...currentMonth};\n        current[year] = {...budget[month], ...currentYear};\n\n        const overall = getOverall(current, type, month, year).toFixed(2);\n        currentType[nameUpperCase] = overall;\n        currentMonth[type] = {...budget[year][month][type], ...currentType};\n        currentYear[month] = {...budget[year][month], ...currentMonth};\n        current[year] = {...budget[month], ...currentYear};\n      }\n\n      return {\n        ...state,\n        budgetUpdated: {...current}\n      };\n    },\n  },\n\n  extraReducers: {\n    [loadBudgets.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [loadBudgets.fulfilled]: (state, action) => {\n      state.budget = action.payload;\n      state.budgetUpdated = action.payload;\n      state.isLoading = false;\n    },\n    [loadBudgets.rejected]: (state) => {\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const selectAllBudgetState = (state) => state.budget.budget;\nexport const selectUpdatedBudgetState = (state) => state.budget.budgetUpdated;\nexport const isLoading = (state) => state.budget.isLoading;\n\nexport const {updateBudget} = budgetSlice.actions;\nexport default budgetSlice.reducer;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction WidgetsBudgetItem({title, value, onChange, id, dataType}) {\n  const isHeader = title === \"Expenses\" || title === \"Incomes\"\n  return (\n    <div className={classes.Block}>\n      <p className={isHeader ? classes.Title : classes.SubTitle}>{title}</p>\n      {isHeader ? <p className={classes.Description}>Plan</p> : ''}\n      <input\n        className={isHeader ? classes.InputDisabled : classes.Input }\n        type=\"number\"\n        // step=\"0.01\"\n        id={id}\n        name={title}\n        placeholder={\"0.00\"}\n        value={value}\n        onChange={onChange}\n        // disabled={isHeader}\n        data-type={dataType}\n      />\n    </div>\n  )\n}\n\nexport default WidgetsBudgetItem;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {loadTransactions} from '../../../reducers/transactions/transactions-slice';\nimport {selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport {postBudget, loadBudgets, updateBudget} from '../../../reducers/budget/budget-slice';\n\nimport classes from './Budget.module.css';\nimport WidgetsBudgetItem from './Items/Item';\n\nfunction WidgetsBudget({currentYear, currentMonth, budget, userId, updatedBudget}) {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n\n  // const usePrevious = (value) => {\n  //   const ref = useRef();\n  //   // useEffect(() => {\n  //     ref.current = value;\n  //   // });\n  //   return ref.current;\n  // }\n\n  const prevBudget = JSON.stringify(budget) === JSON.stringify(updatedBudget);\n\n  const onInputChange = ({target}) => {\n    const id = target.id;\n    const type = target.getAttribute('data-type');\n    const name = target.name;\n    const value = target.value;\n    const month = currentMonth;\n    const year = currentYear;\n\n    dispatch(updateBudget({id, type, name, value, year, month, userId, updatedBudget, categories}));\n  }\n\n  const onEditClick = () => {\n    dispatch(postBudget({updatedBudget, userId}));\n    dispatch(loadBudgets(userId));\n    dispatch(loadTransactions());// ??? update edit button\n  }\n\n  const isBudget = (updatedBudget || '') && (updatedBudget[currentYear] || '') && (updatedBudget[currentYear][currentMonth] || '');\n\n  return (\n    <section className={classes.BudgetWrapper}>\n      <div className={classes.HeaderWrapper}>\n        <p className={classes.Header}>Budget</p>\n        <button\n            className={classes.Button}\n            type=\"submit\"\n            onClick={onEditClick}\n            disabled={prevBudget}\n          >\n            Update\n          </button>\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Expenses\"}\n          dataType={\"expenses\"}\n          value={isBudget && (updatedBudget[currentYear][currentMonth][\"expenses\"][\"Expenses\"] || '')}\n          onChange={onInputChange}\n        />\n\n        {categories\n          .filter((category) => !category.incomes)\n          .map((category) => isBudget && updatedBudget[currentYear][currentMonth][\"expenses\"][category.id]\n            ? {...category, sum: updatedBudget[currentYear][currentMonth][\"expenses\"][category.id]}\n            : {...category, sum: 0})\n          .sort((a, b) => b.sum - a.sum)\n          .map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              dataType={\"expenses\"}\n              id={category.id}\n              value={isBudget && (updatedBudget[currentYear][currentMonth][\"expenses\"][category.id] || '')}\n              onChange={onInputChange}\n            />\n          ))\n        }\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Incomes\"}\n          dataType={\"incomes\"}\n          value={isBudget && (updatedBudget[currentYear][currentMonth][\"incomes\"][\"Incomes\"]  || '')}\n          onChange={onInputChange}\n        />\n\n        {categories\n          .filter((category) => category.incomes)\n          .map((category) => isBudget && updatedBudget[currentYear][currentMonth][\"incomes\"][category.id]\n            ? {...category, sum: updatedBudget[currentYear][currentMonth][\"incomes\"][category.id]}\n            : {...category, sum: 0})\n          .sort((a, b) => b.sum - a.sum)\n          .map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              id={category.id}\n              dataType={\"incomes\"}\n              value={isBudget && (updatedBudget[currentYear][currentMonth][\"incomes\"][category.id]  || '')}\n              onChange={onInputChange}\n            />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default WidgetsBudget;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport WidgetsMonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport WidgetsMonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport WidgetsYearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport WidgetsBudget from '../../components/Widgets/Budget/Budget';\nimport {selectUserId} from '../../reducers/user/user-slice';\nimport classes from './Statistics.module.css';\nimport {currentMonth, currentYear} from '../../reducers/transactions/transactions-slice';\nimport {\n  loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice';\nimport {selectAllBudgetState, loadBudgets, selectUpdatedBudgetState, isLoading} from '../../reducers/budget/budget-slice';\nimport {selectAllCategoriesState} from '../../reducers/categories/categories-slice';\nimport Loader from '../../components/UI/Loader/Loader';\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const allCategories = useSelector(selectAllCategoriesState);\n  const month = useSelector(currentMonth);\n  const year = useSelector(currentYear);\n  const budget = useSelector(selectAllBudgetState);\n  const updatedBudget = useSelector(selectUpdatedBudgetState);\n  const userId = useSelector(selectUserId);\n  const newBudget = budget && Object.keys(budget).length !== 0 && budget;\n  const newUpdatedBudget = updatedBudget && Object.keys(updatedBudget).length !== 0 && updatedBudget;\n  const loading = useSelector(isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadBudgets(userId));\n    dispatch(loadTransactions());\n    // eslint-disable-next-line\n  }, [userId]);\n\n  return (\n    <section className={classes.Statistics}>\n      {loading && userId && <Loader />}\n      {!loading && userId &&\n        <>\n          <WidgetsMonthBalance currentYear={year} currentMonth={month} transactions={allTransactions} />\n          <WidgetsYearExpenses currentYear={year} currentMonth={month} transactions={allTransactions} />\n          <WidgetsMonthExpenses currentYear={year} currentMonth={month} transactions={allTransactions} budget={newBudget} userId={userId} allCategories={allCategories} />\n          <WidgetsBudget currentYear={year} currentMonth={month} budget={newBudget} updatedBudget={newUpdatedBudget} userId={userId} />\n        </>\n      }\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Block.module.css';\n\nfunction SettingsBlock({\n  items, header, onClickItem, onClickToggle\n}) {\n  return (\n    <section className={classes.Wrapper}>\n      <div className={classes.Content}>\n        <p className={classes.Header}>{header}</p>\n        <button\n          className={classes.Button}\n          onClick={onClickToggle}\n          dataheader={header}\n        >Create</button>\n      </div>\n\n        {items.sort((a, b) => b.title.toLowerCase() > a.title.toLowerCase() ? -1 : 1).map((category) => (\n          <p\n            className={classes.Item}\n            onClick={onClickItem}\n            dataid={category.id}\n            datavalue={category.title}\n            datatype={+category.incomes ? +category.incomes : ''}\n            dataheader={header}\n            key={category.id}\n          >\n            {category.title}\n          </p>\n          ))\n        }\n    </section>\n  )\n}\n\nexport default SettingsBlock;\n","import React, {useContext, useState} from 'react';\nconst PopupContext = React.createContext();\n\nexport const usePopup = () => {\n  return useContext(PopupContext);\n}\n\nfunction PopupProvider(props) {\n  const [popup, setPopup] = useState(false);\n  const toggle = () => setPopup(prev => !prev);\n\n  return (\n    <PopupContext.Provider value={{\n        visible: popup,\n        toggle\n      }}>\n        {props.children}\n    </PopupContext.Provider>\n  )\n}\n\nexport default PopupProvider;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState, setPopupItem, setPopupPrevItem} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState} from '../../reducers/accounts/accounts-slice';\nimport { selectUserId } from '../../reducers/user/user-slice';\nimport SettingsBlock from './Blocks/Block';\nimport {usePopup} from '../../hoc/Popup/PopupContext';\n\nfunction Settings() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const accounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n  const {toggle} = usePopup()\n\n  const onClickItem = async ({target}) => {\n    const id = target.getAttribute('dataid');\n    const title = target.getAttribute('datavalue');\n    const type = target.getAttribute('datatype');\n    const header = target.getAttribute('dataheader');\n    console.log(`🚀 ~ file: Settings.js ~ line 35 ~ onClickItem ~ header`, header);\n\n    dispatch(setPopupItem({id, title, userId, incomes: !!+type.toString(), header}));\n    dispatch(setPopupPrevItem({id, title, userId, incomes: !!+type.toString(), header}));\n    toggle()\n  }\n\n  const onClickToggle = async ({target}) => {\n    const id = '';\n    const title = '';\n    const type = '';\n    const header = target.getAttribute('dataheader');\n\n    dispatch(setPopupItem({id, title, userId, incomes: !!+type.toString(), header}));\n    dispatch(setPopupPrevItem({id, title, userId, incomes: !!+type.toString(), header}));\n    toggle()\n  }\n\n  return (\n    <>\n      <SettingsBlock\n        items={categories}\n        header={\"Categories\"}\n        onClickItem={onClickItem}\n        onClickToggle={onClickToggle}\n      />\n\n      <SettingsBlock\n        items={accounts}\n        header={\"Accounts\"}\n        onClickItem={onClickItem}\n        onClickToggle={onClickToggle}\n      />\n    </>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport classes from './Popup.module.css';\nimport {usePopup} from './PopupContext';\nimport CloseButton from '../../components/UI/CloseButton/CloseButton';\nimport {CSSTransition} from 'react-transition-group';\n\nfunction Popup({children}) {\n  const popup = usePopup();\n  const {toggle} = usePopup();\n\n  const nodeRef = React.useRef(null);\n\n  // // if (!popup.visible) return null;\n\n  return (\n    <CSSTransition\n      in={popup.visible}\n      timeout={300}\n      classNames={{\n        enterActive: `${classes.EnterActive}`,\n        exitActive: `${classes.ExitActive}`,\n      }}\n      unmountOnExit\n      nodeRef={nodeRef}\n    >\n      <section className={classes.Container} ref={nodeRef}>\n        <div className={classes.CloseBtn}>\n          <CloseButton onClick={toggle}/>\n        </div>\n        {children}\n      </section>\n    </CSSTransition>\n  )\n}\n\nexport default Popup;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {updateCategory, loadCategories, selectPopupItemState, setPopupItem, deleteCategory, selectPopupPrevItemState, postCategory, selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport {selectAllTransactionsState} from '../../../reducers/transactions/transactions-slice';\nimport {selectUserId} from '../../../reducers/user/user-slice';\nimport classes from './Settings.module.css';\nimport {usePopup} from '../../../hoc/Popup/PopupContext';\nimport { deleteAccount, postAccount, updateAccount, selectAllAccountsState, loadAccounts } from '../../../reducers/accounts/accounts-slice';\nimport ScrollToTop from '../../../hoc/ScrollToTop/ScrollToTop';\n\nfunction PopupSettings() {\n  const dispatch = useDispatch();\n  const popupState = useSelector(selectPopupItemState);\n  const popupPrevState = useSelector(selectPopupPrevItemState);\n  const transactions = useSelector(selectAllTransactionsState);\n  const categories = useSelector(selectAllCategoriesState);\n  const accounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n  const {toggle} = usePopup()\n  const {id, title, incomes, header} = popupState;\n\n  const prevState = JSON.stringify(popupState) === JSON.stringify(popupPrevState);\n\n  const isExists = (data, item) => {\n    return data.find((it) => it.title === item) ? true : false;\n  }\n\n  const isDelete = (data, type, id) => {\n    return data.find((it) => it[`${type}Id`] === id) ? true : false;\n  }\n\n  const onChangeType = async ({target}) => {\n    dispatch(setPopupItem({id, title, userId, incomes: target.checked, header}));\n  }\n\n  const onChangeItem = ({target}) => {\n    const value = target.value;\n    const type = incomes ? incomes : false;\n    dispatch(setPopupItem({id, title: value, userId, incomes: type, header}));\n  }\n\n  const onClickEditButton = ({target}) => {\n    if (header === \"Categories\") {\n      dispatch(updateCategory(popupState));\n      dispatch(loadCategories());\n    }\n    if (header === \"Accounts\") {\n      dispatch(updateAccount(popupState));\n      dispatch(loadAccounts());\n    }\n    toggle();\n  };\n\n  function onClickDeleteButton() {\n    const confirm = window.confirm(\"Are you sure?\");\n\n    if (confirm) {\n      if (header === \"Categories\") {\n        if (isDelete(transactions, 'category', id)) {\n          alert(\"This category is already in use and cannot be deleted!\");\n          return;\n        }\n        dispatch(deleteCategory(id));\n        dispatch(loadCategories());\n      }\n\n      if (header === \"Accounts\") {\n        if (isDelete(transactions, 'account', id)) {\n          alert(\"This account is already in use and cannot be deleted!\");\n          return;\n        }\n        dispatch(deleteAccount(id));\n        dispatch(loadAccounts());\n      }\n\n      toggle();\n    }\n  };\n\n  const onClickCreateButton = () => {\n    if (header === \"Categories\") {\n      if (isExists(categories, title)) {\n        alert(\"This category already exists!\");\n        return;\n      }\n      dispatch(postCategory({title, userId, incomes}));\n      dispatch(loadCategories());\n    }\n    if (header === \"Accounts\") {\n      if (isExists(accounts, title)) {\n        alert(\"This account already exists!\");\n        return;\n      }\n      dispatch(postAccount({title, userId}));\n      dispatch(loadAccounts());\n    }\n\n    toggle();\n  };\n\n  return (\n    <section className={classes.Settings}>\n      <ScrollToTop />\n      {popupPrevState.id && <button\n        className={classes.Button}\n        onClick={onClickEditButton}\n        disabled={prevState || !title}\n      >Update</button>}\n      {!popupPrevState.id && <button\n        className={classes.Button}\n        onClick={onClickCreateButton}\n        disabled={!title}\n      >Create</button>}\n\n      {popupPrevState.id && <button\n        className={classes.Button}\n        onClick={onClickDeleteButton}\n        // disabled={!popupPrevState.id}\n      >Delete</button>}\n\n      <div className={classes.Wrapper}>\n        <p className={classes.Label}>{`Name of ${header === \"Categories\" ? \"category\" : \"account\"}`}</p>\n        <input\n          className={classes.Input}\n          type=\"text\"\n          value={title}\n          onChange={onChangeItem}\n          placeholder={`Type the new name for the ${header === \"Categories\" ? \"category\" : \"account\"}`}\n        />\n        {header !== \"Accounts\" && <div className={classes.Type}>\n          <p className={classes.Label}>Select \"incomes\" if the category is taken into income transactions</p>\n          <input\n            type=\"checkbox\"\n            checked={+incomes || false}\n            onChange={onChangeType}\n          />\n          <label\n            // htmlFor={htmlFor}\n          >Incomes</label>\n        </div>}\n      </div>\n    </section>\n  );\n}\n\nexport default PopupSettings;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport SettingsScreen from '../../components/Settings/Settings'\nimport classes from './Settings.module.css';\nimport PopupProvider from '../../hoc/Popup/PopupContext';\nimport Popup from '../../hoc/Popup/Popup';\nimport {selectUserId} from '../../reducers/user/user-slice';\nimport {isCategoriesLoading} from '../../reducers/categories/categories-slice';\nimport {isAccountsLoading} from '../../reducers/accounts/accounts-slice';\nimport PopupSettings from '../../components/Popup/Settings/Settings';\nimport Loader from '../../components/UI/Loader/Loader';\n\n\nfunction Settings() {\n  const userId = useSelector(selectUserId);\n  const loadingCategories = useSelector(isCategoriesLoading);\n  const loadingAccounts = useSelector(isAccountsLoading);\n  return (\n    <section className={classes.Settings}>\n      {(loadingCategories || loadingAccounts) && userId && <Loader />}\n      {userId && <PopupProvider>\n        <SettingsScreen />\n        <Popup>\n          <PopupSettings />\n        </Popup>\n      </PopupProvider>}\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\nimport ScrollToTop from './hoc/ScrollToTop/ScrollToTop';\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\nfunction App() {\n  return (\n    <Layout>\n      <ScrollToTop />\n      <Routes>\n        <Route path=\"/\" element={<Transactions />} />\n        <Route path=\"/statistics\" element={<Statistics />} />\n        <Route path=\"/settings\" element={<Settings />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\nimport budgetReducer from '../reducers/budget/budget-slice';\nimport userReducer from '../reducers/user/user-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n    budget: budgetReducer,\n    user: userReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}