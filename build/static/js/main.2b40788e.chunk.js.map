{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/Items/Indicator/Indicator.module.css","components/Widgets/MonthExpenses/Items/Item.module.css","components/Balance/Balance.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/Widgets/Budget/Items/Item.module.css","components/UI/Input/Input.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","components/Widgets/Budget/Budget.module.css","components/Settings/Items/Item.module.css","components/Settings/Settings.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/Widgets/YearExpenses/Indicator/Indicator.module.css","components/UI/Select/Select.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","services/mocks/mocks.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","hoc/Layout/Layout.js","hoc/ScrollToTop/ScrollToTop.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/Items/Indicator/Indicator.js","components/Widgets/MonthExpenses/utils.js","components/Widgets/MonthExpenses/Items/Item.js","components/Widgets/MonthExpenses/const.js","components/Widgets/MonthExpenses/Statistics.js","reducers/budget/budget-slice.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/constant.js","components/Widgets/YearExpenses/Indicator/Indicator.js","components/Widgets/YearExpenses/YearExpenses.js","components/Widgets/Budget/Items/Item.js","components/Widgets/Budget/Budget.js","containers/Statistics/Statistics.js","components/Settings/Items/Item.js","components/Settings/Blocks/Block.js","components/Settings/Settings.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","accounts","categories","id","nanoid","title","balance","startBalance","archive","getRandomInt","min","max","Math","ceil","floor","random","getRandomSubarray","items","slice","count","result","push","splice","length","getRandomDate","startPoint","Date","getTime","endPoint","toISOString","transactions","Array","fill","map","sum","date","expense","Boolean","round","account","category","CategoryDataService","this","a","json","loadCategories","createAsyncThunk","getAll","data","postCategories","newCategory","create","categoriesSlice","createSlice","name","initialState","allCategories","isLoading","hasError","isPending","isFailedToCreate","reducers","addCategory","state","action","payload","editCategory","newCategories","createCategory","deleteCategory","filter","item","extraReducers","pending","fulfilled","rejected","selectAllCategoriesState","actions","AccountDataService","loadAccounts","postAccounts","newAccount","accountsSlice","allAccounts","addAccount","editAccount","newAccounts","createAccount","deleteAccount","selectAllAccountsState","TransactionDataService","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatWeekday","dateString","toLocaleString","weekday","formatMonthYear","month","year","formatMonth","loadTransactions","transactionsSlice","allTransactions","newTransaction","currentMonth","isButtonShow","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","transaction","updateMonth","showButton","showDelete","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","setOnClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","accountId","categoryId","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Layout","LayoutContainer","LayoutMain","ScrollToTop","pathname","useLocation","window","scrollTo","Search","userInput","SearchCloseBtn","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","TransactionsItemsDateGroup","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","day","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","TransactionsContext","createContext","Transactions","filteredTransactions","Provider","WidgetsMonthBalance","MonthBalance","List","Wrapper","WidgetsMonthExpensesIndicator","excessPercent","balanceOfCurrent","totalPercent","transactionsSum","IndicatorWrapper","TotalExpenses","style","width","IndicatorTotal","IndicatorIncomes","IndicatorExpenses","TotalTitle","CategoryTitle","TotalSumWrapper","TotalSumAverage","TotalSum","getSum","toFixed","getBalance","getMonthAverageSum","getTotalPercentPerMonth","WidgetsMonthExpensesItem","excessCategoryPercent","totalCategoryPercent","balanceCategoryOfCurrent","categoryPercent","monthTransactions","daysAmount","getFullYear","getMonth","getDate","currentDay","currentDayStep","isShow","MonthExpensesItem","DayIndicatorWrapper","DayIndicator","left","DayIndicatorDate","Left","Right","Indicator","TRANSACTION_TYPE","Statistics","budget","_getExcessPercent","percent","_getExcessBudgetPercent","balancePerCategory","transactionsSumPerCategory","averageValue","abs","expensesPercent","toUpperCase","averageSum","_getTotalPercent","budgetSlice","January","expenses","incomes","February","March","April","May","June","July","August","September","October","November","December","updateBudget","nameUpperCase","currentType","overall","Object","keys","upperCase","balanceTotal","balanceBudget","values","getOverall","selectBudgetState","WidgetsMonthExpenses","percentCategory","MONTH_EXPENSES","WidgetsYearExpensesIndicator","getPercent","Expenses","Incomes","height","WidgetsYearExpenses","incomesPercent","monthHandler","YearExpenses","Active","WidgetsBudgetItem","isHeader","Block","Title","SubTitle","Description","WidgetsBudget","BudgetWrapper","Header","Content","SettingsItem","onClickSubmitButton","submitTitle","onClickButton","ItemWrapper","ButtonWrapper","SettingsBlock","onClickCreateButton","onClickDeleteButton","Settings","inputCategory","setInputCategory","inputAccount","setInputAccount","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","budgetTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2b40788e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndicatorWrapper\":\"Indicator_IndicatorWrapper__3q_mt\",\"IndicatorTotal\":\"Indicator_IndicatorTotal__1Y7TP\",\"IndicatorExpenses\":\"Indicator_IndicatorExpenses__12-8R\",\"IndicatorIncomes\":\"Indicator_IndicatorIncomes__9rMe6\",\"Expense\":\"Indicator_Expense__22TSw\",\"TotalExpenses\":\"Indicator_TotalExpenses__1Dw4H\",\"TotalTitle\":\"Indicator_TotalTitle__xlfB6\",\"TotalSumWrapper\":\"Indicator_TotalSumWrapper__mgUZc\",\"TotalSumAverage\":\"Indicator_TotalSumAverage__PGk5u\",\"TotalSum\":\"Indicator_TotalSum__16pCE\",\"Balance\":\"Indicator_Balance__3Hw51\",\"CategoryTitle\":\"Indicator_CategoryTitle__1lw9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpensesItem\":\"Item_MonthExpensesItem__YjU-v\",\"IndicatorWrapper\":\"Item_IndicatorWrapper__2mppw\",\"Indicator\":\"Item_Indicator__1tgmw\",\"DayIndicatorWrapper\":\"Item_DayIndicatorWrapper__1EIsj\",\"DayIndicator\":\"Item_DayIndicator__13Cg7\",\"DayIndicatorDate\":\"Item_DayIndicatorDate__3kWwy\",\"Right\":\"Item_Right__2f5Fi\",\"Left\":\"Item_Left__2pD6l\",\"List\":\"Item_List__3zSXB\",\"Wrapper\":\"Item_Wrapper__2aB6H\",\"CategoryTitle\":\"Item_CategoryTitle__1JliW\",\"Balance\":\"Item_Balance__1vv4s\",\"IndicatorTotal\":\"Item_IndicatorTotal__26IWg\",\"IndicatorExpenses\":\"Item_IndicatorExpenses__2n_83\",\"IndicatorIncomes\":\"Item_IndicatorIncomes__1nQzk\",\"TotalTitle\":\"Item_TotalTitle__akr9c\",\"TotalSumWrapper\":\"Item_TotalSumWrapper__2_RW5\",\"TotalSumAverage\":\"Item_TotalSumAverage__1WQ-t\",\"TotalSum\":\"Item_TotalSum__37VIa\",\"AverageWrapper\":\"Item_AverageWrapper__T8i9X\",\"TotalExpenses\":\"Item_TotalExpenses__de84n\",\"Expense\":\"Item_Expense__1uT9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Item_BudgetWrapper__3V_CQ\",\"Header\":\"Item_Header__3N3pa\",\"Block\":\"Item_Block__2m7Qg\",\"Description\":\"Item_Description__2TYyv\",\"Title\":\"Item_Title__3RCdl\",\"SubTitle\":\"Item_SubTitle__3sJSk\",\"Input\":\"Item_Input__2vqP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Budget_BudgetWrapper__2eRq_\",\"Header\":\"Budget_Header__xvghW\",\"Content\":\"Budget_Content__11etz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemWrapper\":\"Item_ItemWrapper__36lCx\",\"Input\":\"Item_Input__2LKUT\",\"ButtonWrapper\":\"Item_ButtonWrapper__275w9\",\"Button\":\"Item_Button__1YbUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__S2_BS\",\"Header\":\"Settings_Header__1GgmN\",\"Content\":\"Settings_Content__2vl7u\",\"ItemWrapper\":\"Settings_ItemWrapper__1JUDg\",\"Input\":\"Settings_Input__nrbt0\",\"ButtonWrapper\":\"Settings_ButtonWrapper__2lcW-\",\"Button\":\"Settings_Button__1aSBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchCloseBtn\":\"Search_SearchCloseBtn__dEG1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Indicator_Incomes__3bIeI\",\"Expenses\":\"Indicator_Expenses__1JIA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {nanoid} from 'nanoid';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const categories = [\n  {id: nanoid(MAX_ID_LENGTH), title: `Salary`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Rent`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Groceries`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Parking fees`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Clothing & shoes`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Family`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Coffee`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Health`},\n];\n\nexport const accounts = [\n  {id: nanoid(MAX_ID_LENGTH), title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: nanoid(MAX_ID_LENGTH), title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: nanoid(MAX_ID_LENGTH), title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomSubarray = (items) => {\n  items = items.slice();\n  let count = 1;\n  const result = [];\n  while (count--) {\n    result.push(\n        ...items.splice(\n            getRandomInt(0, items.length - 1), 1)\n    );\n  }\n  return result[0];\n};\n\nconst getRandomDate = () => {\n  const startPoint = new Date().getTime();\n  const endPoint = startPoint - new Date(360 * (24 * 3600 * 1000)).getTime();\n  const date = new Date(endPoint + Math.random() * (startPoint - endPoint));\n\n  return date.toISOString().slice(0, -14);\n};\n\nconst generateTransactions = (count, accounts, categories) => (Array(count).fill({}).map(() => ({\n    id: nanoid(MAX_ID_LENGTH),\n    sum: getRandomInt(1, 500),\n    date: getRandomDate(),\n    expense: Boolean(Math.round(Math.random())),\n    account: getRandomSubarray(accounts),\n    category: getRandomSubarray(categories),\n  }))\n);\n\nexport const transactions = generateTransactions(100, accounts, categories);\n","import {categories} from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  this.categories = categories;\n  }\n  async getAll() {\n    const json = this.categories;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\nimport {categories} from '../../services/mocks/mocks';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: categories,\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    },\n    editCategory: (state, action) => {\n      const categories = [...state.allCategories];\n      const newCategories = categories.map(category => {\n          if (category.id === action.payload.id) {\n            return action.payload;\n          }\n          return category;\n        })\n\n      return {\n        ...state,\n        allCategories: newCategories\n      };\n    },\n    createCategory: (state, action) => {\n      return {\n        ...state,\n        allCategories: [\n          ...state.allCategories,\n          ...action.payload\n        ]\n      };\n    },\n    deleteCategory: (state, action) => {\n      const id = action.payload;\n      const newCategories = [...state.allCategories].filter((item) => item.id !== id)\n      return {\n        ...state,\n        allCategories: [\n          ...newCategories\n        ]\n      };\n    },\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory, editCategory, createCategory, deleteCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {accounts} from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  this.accounts = accounts;\n  }\n  async getAll() {\n    const json = this.accounts;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\nimport {accounts} from '../../services/mocks/mocks';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: accounts,\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    },\n    editAccount: (state, action) => {\n      const accounts = [...state.allAccounts];\n      const newAccounts = accounts.map(account => {\n          if (account.id === action.payload.id) {\n            return action.payload;\n          }\n          return account;\n        })\n\n      return {\n        ...state,\n        allAccounts: newAccounts\n      };\n    },\n    createAccount: (state, action) => {\n      return {\n        ...state,\n        allAccounts: [\n          ...state.allAccounts,\n          ...action.payload\n        ]\n      };\n    },\n    deleteAccount: (state, action) => {\n      const id = action.payload;\n      const newAccounts = [...state.allAccounts].filter((item) => item.id !== id)\n      return {\n        ...state,\n        allAccounts: [\n          ...newAccounts\n        ]\n      };\n    },\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount, editAccount, createAccount, deleteAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {transactions} from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  // const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {nanoid} from 'nanoid';\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {formatMonth} from '../../utils/utils'\nimport {transactions} from '../../services/mocks/mocks';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: transactions,\n    newTransaction: {\n      id: nanoid(MAX_ID_LENGTH),\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date()),\n    isButtonShow: false\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n    showButton: (state, action) => {\n      return {\n        ...state,\n        isButtonShow: !state.isButtonShow,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\nexport const isButtonShow = (state) => state.transactions.isButtonShow;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n  updateMonth,\n  showButton\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, setOnClickAddBtn}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    setOnClickAddBtn(false);\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState, isButtonShow} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts}) {\n  const [onClickAddBtn, setOnClickAddBtn] = useState(false);\n  const dispatch = useDispatch();\n  const showButton = useSelector(isButtonShow);\n\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    onClickAddBtn ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    setOnClickAddBtn(!onClickAddBtn);\n\n    if (onClickAddBtn) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        onClickAddBtn={onClickAddBtn}\n        setOnClickAddBtn={setOnClickAddBtn}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          {showButton && <CSSTransition\n              in={onClickAddBtn}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>}\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/statistics'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState} from '../../reducers/categories/categories-slice'\nimport {selectAllAccountsState} from '../../reducers/accounts/accounts-slice'\nimport Menu from '../../components/Navigation/Menu/Menu';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className={classes.SearchCloseBtn} onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsDateGroup({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsDateGroup;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport classes from '../ListContainer.module.css';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, ...rest}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {TransitionGroup} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport {useSelector} from 'react-redux';\n\nimport {selectFilteredTransactions} from '../../../reducers/transactions/transactions-slice'\nimport {formatMonth} from \"../../../utils/utils\";\n\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\n\nfunction TransactionsListContainer() {\n  const transactions = useSelector(selectFilteredTransactions);\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n  // loadTransactions,\n  selectFilteredTransactions,\n  selectAllTransactionsState,\n  showButton\n} from '../../reducers/transactions/transactions-slice'\n// import {loadCategories} from '../../reducers/categories/categories-slice'\n// import {loadAccounts} from '../../reducers/accounts/accounts-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\n// import { transactions } from '../../services/mocks/mocks';\n\nexport const TransactionsContext = React.createContext();\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(showButton());\n    return () => {\n      dispatch(showButton());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Balance transactions={allTransactions} />\n      <Search />\n      <TransactionsContext.Provider value={filteredTransactions}>\n        <TransactionsListContainer />\n      </TransactionsContext.Provider>\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction WidgetsMonthBalance({currentMonth, transactions}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2 >{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthBalance;\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsMonthExpensesIndicator({\n  excessPercent,\n  balanceOfCurrent,\n  totalPercent,\n  transactionsSum,\n  type,\n  title\n  }) {\n  return (\n    <>\n      <div className={classes.IndicatorWrapper}>\n\n        {/* Indicator */}\n        <div\n          className={classes.TotalExpenses}\n          style={{width: `${totalPercent}%`}}\n        ></div>\n        <div\n          className={classes.IndicatorTotal}\n          style={{width: `${100 - totalPercent}%`}}\n        ></div>\n        <div\n          className={\n              `${\n                type === 'incomes'\n                  ? classes.IndicatorIncomes\n                  : classes.IndicatorExpenses\n              }`\n            }\n          style={{width: `${excessPercent}%`}}\n        ></div>\n\n        {/* Contents */}\n        <p className={\n            title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalTitle\n              : classes.CategoryTitle\n          }>\n          {title}\n        </p>\n        <div className={classes.TotalSumWrapper}>\n          <p className={classes.TotalSumAverage}>{balanceOfCurrent}</p>\n          <p className={\n              title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalSum\n              : classes.Balance\n            }>\n            {type === 'incomes' ? '+' : '-'}\n            {transactionsSum}€\n          </p>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsMonthExpensesIndicator;\n","export const getSum = (transactions, type) => {\n    return transactions\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0).toFixed(2);\n}\n\nexport const getBalance = (category, type, transactions) => {\n  const balance = transactions\n    .filter((transaction) => transaction.category.title === category)\n    .map((transaction) => (type === 'incomes' ? !transaction.expense : transaction.expense) ? transaction = +transaction.sum : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    return balance.toFixed(2);\n}\n\nexport const MOTH_COUNT = 12;\n\nexport const getMonthAverageSum = (sum) => (sum / MOTH_COUNT).toFixed(2);\nexport const getTotalPercentPerMonth = (balance, sum) => (balance / getMonthAverageSum(sum) * 100).toFixed(2);\n","import React from 'react';\nimport Indicator from './Indicator/Indicator';\nimport classes from './Item.module.css';\nimport {getBalance} from '../utils';\nimport {formatMonth} from '../../../../utils/utils';\n\nfunction WidgetsMonthExpensesItem(\n    {\n      categories, excessPercent,\n      excessCategoryPercent, totalPercent,\n      totalCategoryPercent, balanceOfCurrent,\n      balanceCategoryOfCurrent, categoryPercent,\n      transactionsSum, type, title,\n      monthTransactions,\n      month\n    }\n  ) {\n\n  const daysAmount = new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n  const currentDay = new Date().getDate();\n  const currentMonth = formatMonth(new Date());\n  const currentDayStep = (currentDay / daysAmount * 100).toFixed(2);\n  const isShow = month === currentMonth;\n\n  return (\n    <section className={classes.MonthExpensesItem}>\n      {\n        isShow &&\n          <div className={classes.DayIndicatorWrapper}>\n            <div className={classes.DayIndicator} style={{left: `${currentDayStep}%`}}>\n              <p className={\n                `${classes.DayIndicatorDate} ${currentDay > 15 ? classes.Left : classes.Right}`\n                }>Today is  {currentMonth} {currentDay}th</p>\n            </div>\n          </div>\n      }\n      <Indicator\n        excessPercent={excessPercent}\n        balanceOfCurrent={balanceOfCurrent}\n        totalPercent={totalPercent}\n        transactionsSum={transactionsSum}\n        type={type}\n        title={title}\n      />\n\n      <ul className={classes.List}>\n        {categories.map((category) => (\n            <li className={classes.Wrapper} key={category}>\n              <Indicator\n                excessPercent={excessCategoryPercent(category, type)}\n                balanceOfCurrent={balanceCategoryOfCurrent(category, type)}\n                totalPercent={totalCategoryPercent(category, type)}\n                transactionsSum={getBalance(category, type, monthTransactions)}\n                type={type}\n                title={`${categoryPercent(getBalance(category, type, monthTransactions), transactionsSum)}%\n                  ${category}`}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthExpensesItem;\n","export const TRANSACTION_TYPE = {\n    EXPENSES: 'expenses',\n    INCOMES: 'incomes',\n  }\n","import {\n  getMonthAverageSum,\n  getSum,\n  getTotalPercentPerMonth,\n  getBalance,\n  MOTH_COUNT\n} from \"./utils\";\nimport {TRANSACTION_TYPE} from './const';\n\nexport class Statistics {\n  constructor(transactions, type, budget, monthTransactions, currentMonth) {\n    this.transactions = transactions;\n    this.type = type;\n    this.budget = budget;\n    this.monthTransactions = monthTransactions;\n    this.currentMonth = currentMonth;\n    this.category = this.type[0].toUpperCase() + this.type.slice(1);\n  }\n\n  _getExcessPercent = (balance, sum) => {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getExcessBudgetPercent = (balance, sum) => {\n    const percent = balance / sum * 100;\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getTotalPercent(balance, sum) {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  categories(type) {\n    return [...new Set(this.monthTransactions\n    .filter((transaction) => (type === TRANSACTION_TYPE.EXPENSES ? transaction.expense : !transaction.expense)\n      ? transaction.sum !== 0\n      : transaction = null)\n    .map(transaction => transaction.category.title))];\n  }\n\n  sum() {\n    return getSum(this.monthTransactions, this.type);\n  }\n\n  averageSum() {\n    return !this.budget[this.currentMonth][this.type][this.category]\n    ? (getMonthAverageSum(getSum(this.transactions, this.type)))\n    : this.budget[this.currentMonth][this.type][this.category];\n  }\n\n  excessPercent() {\n    return this.budget[this.currentMonth][this.type][this.category]\n    ? this._getExcessBudgetPercent(getSum(this.monthTransactions, this.type), this.averageSum())\n    : this._getExcessPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  balanceOfCurrent() {\n    const averageValue =  (this.averageSum() - getSum(this.monthTransactions, this.type)).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${this.budget[this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${this.budget[this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`;\n  }\n\n  totalPercent() {\n    return this.budget[this.currentMonth][this.type][this.category]\n    ? (((getSum(this.monthTransactions, this.type) / this.averageSum()) * 100) >= 100\n      ? 100\n      : (getSum(this.monthTransactions, this.type) / this.averageSum()) * 100)\n    : this._getTotalPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  percentCategory(balance, sum) {\n    let percent = (balance / sum * 100).toFixed(2);\n    const expensesPercent = percent > 99.9 ? 100 : percent;\n\n    return expensesPercent;\n  }\n\n  excessCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  balanceCategoryOfCurrent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const transactionsSumPerCategory = getBalance(category, type, this.monthTransactions)\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const averageValue = budget\n      ? (budget - transactionsSumPerCategory).toFixed(2)\n      : ((balancePerCategory / MOTH_COUNT) - transactionsSumPerCategory).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${budget ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${budget ? \"budget\" : \"typical\"}`;\n  }\n\n  totalCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 0 : expensesPercent;\n  }\n}\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst getOverall = (budget, type, currentMonth) => {\n    if (Object.keys(budget[currentMonth][type]).length === 0) {\n      return;\n    };\n    const upperCase = type[0].toUpperCase() + type.slice(1);\n    const balanceTotal = budget[currentMonth][type][upperCase];\n    const balanceBudget = Object.values(budget[currentMonth][type]).reduce((a, b) => +a + +b);\n\n    const overall = Math.abs((!balanceTotal ? 0 : balanceTotal) - balanceBudget);\n\n    return overall;\n  }\n\n  const getBalance = (budget, type, currentMonth) => {\n    if (Object.keys(budget[currentMonth][type]).length === 0) {\n      return;\n    };\n    const upperCase = type[0].toUpperCase() + type.slice(1);\n    const balanceTotal = budget[currentMonth][type][upperCase];\n\n    return !balanceTotal ? 0 : balanceTotal;\n  }\n\nexport const budgetSlice = createSlice({\n  name: \"budget\",\n  initialState: {\n    January: {\n      expenses: {},\n      incomes: {}\n    },\n    February: {\n      expenses: {},\n      incomes: {}\n    },\n    March: {\n      expenses: {},\n      incomes: {}\n    },\n    April: {\n      expenses: {},\n      incomes: {}\n    },\n    May: {\n      expenses: {},\n      incomes: {}\n    },\n    June: {\n      expenses: {},\n      incomes: {}\n    },\n    July: {\n      expenses: {},\n      incomes: {}\n    },\n    August: {\n      expenses: {},\n      incomes: {}\n    },\n    September: {\n      expenses: {},\n      incomes: {}\n    },\n    October: {\n      expenses: {},\n      incomes: {}\n    },\n    November: {\n      expenses: {},\n      incomes: {}\n    },\n    December: {\n      expenses: {},\n      incomes: {}\n    },\n  },\n  reducers: {\n    updateBudget: (state, action) => {\n      const type = action.payload.type;\n      const name = action.payload.name;\n      const nameUpperCase = action.payload.nameUpperCase;\n      const value = action.payload.value;\n      const month = action.payload.month;\n\n      const budget = {...state};\n      const currentMonth = {...budget[month]};\n      const currentType = {...currentMonth[type]};\n      currentType[name] = value;\n      currentMonth[type] = currentType;\n\n      budget[month] = currentMonth;\n\n      const overall = getOverall(budget, type, month);\n      const balance = getBalance(budget, type, month);\n\n      if (overall > balance) {\n        const currentMonth = {...budget[month]};\n        const currentType = {...currentMonth[type]};\n        currentType[nameUpperCase] = overall;\n        currentMonth[type] = currentType;\n\n        budget[month] = currentMonth;\n      }\n\n      return {\n        ...budget,\n      };\n    },\n  },\n});\n\nexport const selectBudgetState = (state) => state.budget;\n\nexport const {\n  updateBudget,\n} = budgetSlice.actions;\n\nexport default budgetSlice.reducer;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport WidgetsMonthExpensesItem from './Items/Item'\nimport {formatMonth} from '../../../utils/utils'\nimport {Statistics} from './Statistics';\nimport {TRANSACTION_TYPE} from './const';\nimport {selectBudgetState} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsMonthExpenses({currentMonth, transactions}) {\n  const budget = useSelector(selectBudgetState);\n\n  const monthTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const expenses = new Statistics(transactions, TRANSACTION_TYPE.EXPENSES, budget, monthTransactions, currentMonth);\n  const incomes = new Statistics(transactions, TRANSACTION_TYPE.INCOMES, budget, monthTransactions, currentMonth);\n\n  return (\n    <>\n      <WidgetsMonthExpensesItem\n        categories={expenses.categories(TRANSACTION_TYPE.EXPENSES)}\n\n        categoryPercent={expenses.percentCategory}\n        excessCategoryPercent={expenses.excessCategoryPercent}\n        balanceCategoryOfCurrent={expenses.balanceCategoryOfCurrent}\n        totalCategoryPercent={expenses.totalCategoryPercent}\n\n        excessPercent={expenses.excessPercent()}\n        balanceOfCurrent={expenses.balanceOfCurrent()}\n        totalPercent={expenses.totalPercent()}\n        transactionsSum={expenses.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.EXPENSES}\n        title={\"Expenses\"}\n        month={currentMonth}\n      />\n\n      <WidgetsMonthExpensesItem\n        categories={incomes.categories(TRANSACTION_TYPE.INCOMES)}\n\n        categoryPercent={incomes.percentCategory}\n        excessCategoryPercent={incomes.excessCategoryPercent}\n        balanceCategoryOfCurrent={incomes.balanceCategoryOfCurrent}\n        totalCategoryPercent={incomes.totalCategoryPercent}\n\n        excessPercent={incomes.excessPercent()}\n        balanceOfCurrent={incomes.balanceOfCurrent()}\n        totalPercent={incomes.totalPercent()}\n        transactionsSum={incomes.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.INCOMES}\n        title={\"Incomes\"}\n        month={currentMonth}\n      />\n    </>\n  )\n}\n\nexport default WidgetsMonthExpenses;\n","// export const MONTH_EXPENSES = {\n//   JANUARY: 'January',\n//   FEBRUARY: 'February',\n//   MARCH: 'March',\n//   APRIL: 'April',\n//   MAY: 'May',\n//   JUNE: 'June',\n//   JULY: 'July',\n//   AUGUST: 'August',\n//   SEPTEMBER: 'September',\n//   OCTOBER: 'October',\n//   NOVEMBER: 'November',\n//   DECEMBER: 'December'\n// }\n\nexport const MONTH_EXPENSES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'\n]\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsYearExpensesIndicator({month, getPercent, type}) {\n  let cls = [];\n\n  type === \"expenses\" ? cls.push(classes.Expenses) : cls.push(classes.Incomes);\n\n  return (\n    <div\n      className={cls.join(' ')}\n      id={month}\n      style={{height: `${getPercent(month, type)}%`}}\n    ></div>\n  )\n}\n\nexport default WidgetsYearExpensesIndicator;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateMonth} from '../../../reducers/transactions/transactions-slice';\n\nimport {formatMonth} from '../../../utils/utils';\nimport classes from './YearExpenses.module.css';\nimport {MONTH_EXPENSES} from './constant';\n\nimport Indicator from './Indicator/Indicator';\n\nfunction WidgetsYearExpenses({currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const maxMonthExpense = 3000; // temporary value\n\n  const getPercent = (month, type) => {\n    const incomes = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthExpense * 100);\n    let incomesPercent = percent >= 100 ? 100 : percent;\n\n    return incomesPercent === 0 ? 1 : incomesPercent;\n  }\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <div className={classes.Wrapper}>\n          {MONTH_EXPENSES.map((month) => (\n            <div\n              className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n              key={month}\n              id={month}\n              onClick={monthHandler}\n            >\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"incomes\"}\n              />\n\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"expenses\"}\n              />\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WidgetsYearExpenses;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction WidgetsBudgetItem({title, value, onChange, id}) {\n  const isHeader = title === \"Expenses\" || title === \"Incomes\"\n  return (\n    <div className={classes.Block}>\n      <p className={isHeader ? classes.Title : classes.SubTitle}>{title}</p>\n      {isHeader ? <p className={classes.Description}>Plan</p> : ''}\n      <input\n        className={classes.Input}\n        type=\"number\"\n        id={id}\n        name={title}\n        placeholder={\"0.00\"}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default WidgetsBudgetItem;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport classes from './Budget.module.css';\nimport WidgetsBudgetItem from './Items/Item';\nimport {selectBudgetState, updateBudget} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsBudget({currentMonth}) {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const budget = useSelector(selectBudgetState);\n\n  const onChange = ({target}) => {\n    const type = target.id;\n    const name = target.name;\n    const nameUpperCase = type[0].toUpperCase() + type.slice(1);\n    const value = target.value;\n    const month = currentMonth;\n\n    dispatch(updateBudget({type, name, nameUpperCase, value, month}));\n  }\n\n  return (\n    <section className={classes.BudgetWrapper}>\n      <p className={classes.Header}>Budget</p>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Expenses\"}\n          id={\"expenses\"}\n          value={budget[currentMonth][\"expenses\"][\"Expenses\"] || ''}\n          onChange={onChange}\n        />\n\n        {categories.map((category) => (\n          <WidgetsBudgetItem\n            key={category.id}\n            title={category.title}\n            id={\"expenses\"}\n            value={budget[currentMonth][\"expenses\"][category.title] || ''}\n            onChange={onChange}\n          />\n          ))\n        }\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Incomes\"}\n          id={\"incomes\"}\n          value={budget[currentMonth][\"incomes\"][\"Incomes\"] || ''}\n          onChange={onChange}\n        />\n\n        {categories.map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              id={\"incomes\"}\n              value={budget[currentMonth][\"incomes\"][category.title] || ''}\n              onChange={onChange}\n            />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default WidgetsBudget;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport WidgetsMonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport WidgetsMonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport WidgetsYearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport WidgetsBudget from '../../components/Widgets/Budget/Budget'\nimport classes from './Statistics.module.css';\nimport {currentMonth} from '../../reducers/transactions/transactions-slice';\nimport {\n  // loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice'\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const month = useSelector(currentMonth);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(loadTransactions());\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <section className={classes.Statistics}>\n      <WidgetsMonthBalance currentMonth={month} transactions={allTransactions} />\n      <WidgetsYearExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsMonthExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsBudget currentMonth={month} />\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction SettingsItem({id, onChange, onClickSubmitButton, value, submitTitle, onClickButton}) {\n  return (\n    <form\n      className={classes.ItemWrapper}\n      onSubmit={onClickSubmitButton}\n    >\n      <input\n        className={classes.Input}\n        type=\"text\"\n        name={value}\n        value={value}\n        id={id}\n        onChange={onChange}\n      />\n      <div className={classes.ButtonWrapper}>\n        <button\n          className={classes.Button}\n          id={id}\n          type=\"submit\"\n          onClick={onClickButton}\n        >\n          {submitTitle}\n        </button>\n        {/* {onClickDeleteBtn && <button\n          className={classes.Button}\n          type=\"button\"\n          onClick={onClickDeleteBtn}\n        >\n          Delete\n        </button>} */}\n      </div>\n    </form>\n  )\n}\n\nexport default SettingsItem;\n","import React from 'react';\nimport classes from '../Settings.module.css';\nimport SettingsItem from '../Items/Item';\n\nfunction SettingsBlock({onClickSubmitButton, onClickCreateButton, value, onChange, onClickDeleteButton, items, title}) {\n  return (\n    <section className={classes.Wrapper}>\n      <div className={classes.Content}>\n        <p className={classes.Header}>{title}</p>\n        <SettingsItem\n          onClickSubmitButton={onClickSubmitButton}\n          onClickButton={onClickCreateButton}\n          value={value}\n          submitTitle={\"Create\"}\n          onChange={onChange}\n        />\n\n        {items.map((category) => (\n          <SettingsItem\n            onClickSubmitButton={onClickSubmitButton}\n            value={category.title}\n            submitTitle={\"Delete\"}\n            onClickButton={onClickDeleteButton}\n            onChange={onChange}\n            id={category.id}\n            key={category.id}\n          />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default SettingsBlock;\n","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState, editCategory, createCategory, deleteCategory} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, editAccount, createAccount, deleteAccount} from '../../reducers/accounts/accounts-slice';\n// import classes from './Settings.module.css';\n// import SettingsItem from './Items/Item';\nimport {nanoid} from 'nanoid';\nimport SettingsBlock from './Blocks/Block';\n\nconst MAX_ID_LENGTH = 6;\n\nfunction Settings() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const accounts = useSelector(selectAllAccountsState);\n\n  const [inputCategory, setInputCategory] = useState('');\n  const [inputAccount, setInputAccount] = useState('');\n\n  const onChangeCategory = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(editCategory({id, title}));\n    } else {\n      setInputCategory(title);\n    }\n  }\n\n  const onChangeAccount = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(editAccount({id, title}));\n    } else {\n      setInputAccount(title);\n    }\n  }\n\n  const onClickCreateCategoryButton = () => {\n    dispatch(createCategory([{id: nanoid(MAX_ID_LENGTH), title: inputCategory}]));\n    setInputCategory('');\n  };\n\n  const onClickCreateAccountButton = () => {\n    dispatch(createAccount([{id: nanoid(MAX_ID_LENGTH), title: inputAccount}]));\n    setInputAccount('');\n  };\n\n  function onClickDeleteCategoryButton({target}) {\n    dispatch(deleteCategory(target.id));\n  };\n\n  function onClickDeleteAccountButton({target}) {\n    dispatch(deleteAccount(target.id));\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateCategoryButton}\n        onClickDeleteButton={onClickDeleteCategoryButton}\n        value={inputCategory}\n        submitTitle={\"Create\"}\n        onChange={onChangeCategory}\n        items={categories}\n        title={\"Categories\"}\n      />\n\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateAccountButton}\n        onClickDeleteButton={onClickDeleteAccountButton}\n        value={inputAccount}\n        submitTitle={\"Create\"}\n        onChange={onChangeAccount}\n        items={accounts}\n        title={\"Accounts\"}\n      />\n    </>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport SettingsScreen from '../../components/Settings/Settings'\nimport classes from './Settings.module.css';\n\nfunction Settings() {\n  return (\n    <section className={classes.Settings}>\n      <SettingsScreen />\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\nimport ScrollToTop from './hoc/ScrollToTop/ScrollToTop';\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\n\nfunction App() {\n    return (\n      <Layout>\n        <ScrollToTop />\n        <Routes>\n          <Route path=\"/\" element={<Transactions />} />\n          <Route path=\"/statistics\" element={<Statistics />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Layout>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\nimport budgetTermReducer from '../reducers/budget/budget-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n    budget: budgetTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}