{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/MonthExpenses.module.css","components/Balance/Balance.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/Dummy/Dummy.module.css","components/UI/Select/Select.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","services/mocks/mocks.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","hoc/Layout/Layout.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/YearExpenses.js","containers/Statistics/Statistics.js","components/Dummy/Dummy.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","accounts","categories","id","title","balance","startBalance","archive","getRandomInt","min","max","Math","ceil","floor","random","getRandomSubarray","items","slice","count","result","push","splice","length","getRandomDate","startPoint","Date","getTime","endPoint","toISOString","transactions","Array","fill","map","nanoid","sum","date","expense","Boolean","round","account","category","CategoryDataService","this","a","json","loadCategories","createAsyncThunk","getAll","data","postCategories","newCategory","create","categoriesSlice","createSlice","name","initialState","allCategories","isLoading","hasError","isPending","isFailedToCreate","reducers","addCategory","state","action","payload","extraReducers","pending","fulfilled","rejected","selectAllCategoriesState","actions","AccountDataService","loadAccounts","postAccounts","newAccount","console","log","accountsSlice","allAccounts","addAccount","selectAllAccountsState","TransactionDataService","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatWeekday","dateString","toLocaleString","weekday","formatMonthYear","month","year","formatMonth","loadTransactions","transactionsSlice","allTransactions","newTransaction","currentMonth","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","filter","transaction","updateMonth","showDelete","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","setOnClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","item","accountId","categoryId","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Layout","LayoutContainer","LayoutMain","Search","userInput","SearchCloseBtn","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","window","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","TransactionsItemsContainer","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","day","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","Transactions","filteredTransactions","MonthBalance","List","Wrapper","MonthExpenses","categoriesForExpenses","categoriesForIncomes","getExpenses","getIncomes","getExpensesPercent","percent","expensesPercent","getIncomesPercent","getTotalPercent","TotalBg","TotalExpense","style","width","TotalTitle","TotalSum","Expense","Category","YearExpenses","incomesPercent","monthHandler","Active","Incomes","height","Expenses","Statistics","Dummy","DummyWrapper","Settings","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3303c27e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpenses\":\"MonthExpenses_MonthExpenses__1d6Ze\",\"List\":\"MonthExpenses_List__lP4wz\",\"Wrapper\":\"MonthExpenses_Wrapper__26g9q\",\"Category\":\"MonthExpenses_Category__1h297\",\"Balance\":\"MonthExpenses_Balance__1OzdB\",\"TotalBg\":\"MonthExpenses_TotalBg__1bypZ\",\"TotalTitle\":\"MonthExpenses_TotalTitle__UeveH\",\"TotalSum\":\"MonthExpenses_TotalSum__mLr8D\",\"TotalExpense\":\"MonthExpenses_TotalExpense__1lS3U\",\"Expense\":\"MonthExpenses_Expense__2FmXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchCloseBtn\":\"Search_SearchCloseBtn__dEG1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DummyWrapper\":\"Dummy_DummyWrapper__ainuq\",\"Dummy\":\"Dummy_Dummy__V-6Gh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {nanoid} from 'nanoid';\n\nexport const categories = [\n  {id: 1, title: `Salary`},\n  {id: 2, title: `Rent`},\n  {id: 3, title: `Groceries`},\n  {id: 4, title: `Transportation & parking fees`},\n  {id: 5, title: `Clothing & shoes`},\n  {id: 6, title: `Family`},\n  {id: 7, title: `Coffee`},\n  {id: 8, title: `Health`},\n];\n\nexport const accounts = [\n  {id: 1, title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: 2, title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: 3, title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomSubarray = (items) => {\n  items = items.slice();\n  let count = 1;\n  const result = [];\n  while (count--) {\n    result.push(\n        ...items.splice(\n            getRandomInt(0, items.length - 1), 1)\n    );\n  }\n  return result[0];\n};\n\nconst getRandomDate = () => {\n  const startPoint = new Date().getTime();\n  const endPoint = startPoint - new Date(360 * (24 * 3600 * 1000)).getTime();\n  const date = new Date(endPoint + Math.random() * (startPoint - endPoint));\n\n  return date.toISOString().slice(0, -14);\n};\n\nconst MAX_ID_LENGTH = 6;\n\nconst generateTransactions = (count, accounts, categories) => (Array(count).fill({}).map(() => ({\n    id: nanoid(MAX_ID_LENGTH),\n    sum: getRandomInt(1, 500),\n    date: getRandomDate(),\n    expense: Boolean(Math.round(Math.random())),\n    account: getRandomSubarray(accounts),\n    category: getRandomSubarray(categories),\n  }))\n);\n\nexport const transactions = generateTransactions(100, accounts, categories);\n","import {categories} from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  this.categories = categories;\n  }\n  async getAll() {\n    const json = this.categories;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {accounts} from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  this.accounts = accounts;\n  }\n  async getAll() {\n    const json = this.accounts;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    console.log(`🚀 ~ file: accounts-slice.js ~ line 17 ~ newAccount`, newAccount);\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {transactions} from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  // const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {nanoid} from 'nanoid';\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {formatMonth} from '../../utils/utils'\n\nconst MAX_ID_LENGTH = 6;\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      id: nanoid(MAX_ID_LENGTH),\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date())\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n  updateMonth\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, setOnClickAddBtn}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    setOnClickAddBtn(false);\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts}) {\n  const [onClickAddBtn, setOnClickAddBtn] = useState(false);\n  const dispatch = useDispatch();\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    onClickAddBtn ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    setOnClickAddBtn(!onClickAddBtn);\n\n    if (onClickAddBtn) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        onClickAddBtn={onClickAddBtn}\n        setOnClickAddBtn={setOnClickAddBtn}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          <CSSTransition\n              in={onClickAddBtn}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/budget'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState} from '../../reducers/categories/categories-slice'\nimport {selectAllAccountsState} from '../../reducers/accounts/accounts-slice'\nimport Menu from '../../components/Navigation/Menu/Menu';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className={classes.SearchCloseBtn} onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsContainer({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsContainer;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport classes from '../ListContainer.module.css';\nimport {CSSTransition} from 'react-transition-group';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, transactions, ...rest}) {\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {TransitionGroup} from 'react-transition-group';\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month, transactions}) {\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              transactions={transactions}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\nimport {formatMonth} from \"../../../utils/utils\";\n\nfunction TransactionsListContainer({transactions}) {\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} transactions={transactions} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {\n  loadTransactions,\n  selectFilteredTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice'\nimport {loadCategories} from '../../reducers/categories/categories-slice'\nimport {loadAccounts} from '../../reducers/accounts/accounts-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadTransactions());\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Balance transactions={allTransactions} />\n      <Search />\n      <TransactionsListContainer transactions={filteredTransactions} />\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction MonthBalance({currentMonth, transactions}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2 >{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default MonthBalance;\n","import React from 'react';\nimport classes from './MonthExpenses.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction MonthExpenses({currentMonth, transactions}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n  const categoriesForExpenses = [...new Set(filteredTransactions\n    .filter((transaction) => transaction.expense ? transaction.sum !== 0 : transaction = null)\n    .map(transaction => transaction.category.title))];\n  const categoriesForIncomes = [...new Set(filteredTransactions\n    .filter((transaction) => !transaction.expense ? transaction.sum !== 0 : transaction = null)\n    .map(transaction => transaction.category.title))];\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((acc, sum) => acc + sum, 0);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((acc, sum) => acc + sum, 0);\n\n  const getExpenses = (category) => {\n    const expense = filteredTransactions\n      .filter((transaction) => transaction.category.title === category)\n      .map((transaction) => transaction.expense ? transaction = +transaction.sum : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n      return expense;\n  }\n\n  const getIncomes = (category) => {\n    const expense = filteredTransactions\n      .filter((transaction) => transaction.category.title === category)\n      .map((transaction) => !transaction.expense ? transaction = +transaction.sum : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n      return expense;\n  }\n\n  const getExpensesPercent = (balance) => {\n    let percent = (balance / sumExpenses * 100);\n\n    percent = Math.round(percent);\n\n    let expensesPercent = percent >= 100 ? 100 : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  const getIncomesPercent = (balance) => {\n    let percent = (balance / sumIncomes * 100);\n\n    percent = Math.round(percent);\n\n    let expensesPercent = percent >= 100 ? 100 : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  const getTotalPercent = (balance) => {\n    const percent = (balance / 3000 * 100);\n\n    let expensesPercent = percent >= 100 ? 100 : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  return (\n    <>\n      <section className={classes.MonthExpenses}>\n        <div className={classes.TotalBg}></div>\n        <div className={classes.TotalExpense} style={{width: `${getTotalPercent(sumExpenses)}%`}}></div>\n        <h4 className={classes.TotalTitle}>Expenses</h4>\n        <h4 className={classes.TotalSum}>-{sumExpenses}€ out of 3000€</h4>\n        <ul className={classes.List}>\n          {categoriesForExpenses.map((category) => (\n              <li className={classes.Wrapper} key={category}>\n                <div className={classes.TotalBg}></div>\n                <div className={classes.Expense} style={{width: `${getExpensesPercent(getExpenses(category))}%`}}></div>\n                <p className={classes.Category}>{`${getExpensesPercent(getExpenses(category))}% ${category}`}</p>\n                <p className={classes.Balance}>-{getExpenses(category)}€</p>\n              </li>\n            ))\n          }\n        </ul>\n      </section>\n      <section className={classes.MonthExpenses}>\n        <div className={classes.TotalBg}></div>\n        <div className={classes.TotalExpense} style={{width: `${getTotalPercent(sumIncomes)}%`}}></div>\n        <h4 className={classes.TotalTitle}>Incomes</h4>\n        <h4 className={classes.TotalSum}>+{sumIncomes}€ out of 3000€</h4>\n        <ul className={classes.List}>\n          {categoriesForIncomes.map((category) => (\n              <li className={classes.Wrapper} key={category}>\n                <div className={classes.TotalBg}></div>\n                <div className={classes.Expense} style={{width: `${getIncomesPercent(getIncomes(category))}%`}}></div>\n                <p className={classes.Category}>{`${getIncomesPercent(getIncomes(category))}% ${category}`}</p>\n                <p className={classes.Balance}>+{getIncomes(category)}€</p>\n              </li>\n            ))\n          }\n        </ul>\n      </section>\n      {/* <section className={classes.MonthExpenses} style={{flex: '1 1 auto'}}></section> */}\n    </>\n  )\n}\n\nexport default MonthExpenses;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport classes from './YearExpenses.module.css';\nimport {formatMonth} from '../../../utils/utils';\n\nimport {\n  updateMonth,\n} from '../../../reducers/transactions/transactions-slice'\n\nfunction YearExpenses({currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const maxMonthExpense = 3000;\n\n  const getExpensesPercent = (month) => {\n    const expenses = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => transaction.expense ? transaction = +transaction.sum : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (expenses / maxMonthExpense * 100);\n\n    let expensesPercent = percent >= 100 ? 100 : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  const getIncomesPercent = (month) => {\n    const incomes = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => !transaction.expense ? transaction = +transaction.sum : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthExpense * 100);\n\n    let incomesPercent = percent >= 100 ? 100 : percent;\n\n    return incomesPercent === 0 ? 1 : incomesPercent;\n  }\n\n  const monthExpenses = [\n    'January', 'February', 'March',\n    'April', 'May', 'June',\n    'July', 'August', 'September',\n    'October', 'November', 'December'\n  ]\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <div className={classes.Wrapper}>\n          {monthExpenses.map((month) => (\n            <div\n              className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n              key={month}\n              id={month}\n              onClick={monthHandler}\n            >\n              <div\n                className={classes.Incomes}\n                id={month}\n                style={{height: `${getIncomesPercent(month)}%`}}\n              ></div>\n              <div\n                className={classes.Expenses}\n                id={month}\n                style={{height: `${getExpensesPercent(month)}%`}}\n              ></div>\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default YearExpenses;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport MonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport MonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport YearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport classes from './Statistics.module.css';\nimport {currentMonth} from '../../reducers/transactions/transactions-slice';\nimport {\n  loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice'\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const month = useSelector(currentMonth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadTransactions());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <section className={classes.Statistics}>\n      <MonthBalance currentMonth={month} transactions={allTransactions} />\n      <YearExpenses currentMonth={month} transactions={allTransactions} />\n      <MonthExpenses currentMonth={month} transactions={allTransactions} />\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Dummy.module.css';\n\nfunction Dummy() {\n  return (\n\n    <section className={classes.DummyWrapper}>\n      <div className={classes.Dummy} style={{height: 'calc(100vh - 100px)'}}>\n        Coming soon...\n      </div>\n    </section>\n  )\n}\n\nexport default Dummy;\n","import React from 'react';\nimport Dummy from '../../components/Dummy/Dummy';\nimport classes from './Settings.module.css';\n\nfunction Settings() {\n  return (\n    <section className={classes.Settings}>\n      <Dummy />\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\n\nfunction App() {\n    return (\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<Transactions />} />\n          <Route path=\"/budget\" element={<Statistics />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Layout>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}