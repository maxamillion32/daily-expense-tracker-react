{"version":3,"sources":["components/Navigation/Menu/Menu.module.css","hoc/Layout/Layout.js","services/mocks/mocks.js","services/transaction.service.js","reducers/search/search-slice.js","reducers/transactions/transactions-slice.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/Items/Item.js","components/Transactions/Items/ItemsContainer.js","utils/utils.js","components/Transactions/Items/ItemHeader.js","components/Transactions/List.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","App.js","store/store.js","index.js","components/Transactions/CreateForm/Form.module.css"],"names":["module","exports","Layout","accounts","categories","props","className","children","id","title","balance","startBalance","archive","getRandomInt","min","max","Math","ceil","floor","random","getRandomSubarray","items","slice","count","result","push","splice","length","getRandomDate","startPoint","Date","getTime","endPoint","toISOString","transactions","Array","fill","map","nanoid","sum","date","outcome","Boolean","round","account","category","TransactionDataService","this","a","json","searchTermSlice","createSlice","name","initialState","reducers","setSearchTerm","state","action","payload","clearSearchTerm","selectSearchTerm","searchTerm","actions","loadTransactions","createAsyncThunk","getAll","data","transactionsSlice","allTransactions","newTransaction","isLoading","hasError","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","filter","transaction","extraReducers","pending","fulfilled","showDelete","rejected","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","CategoryDataService","loadCategories","postCategories","newCategory","create","categoriesSlice","allCategories","isPending","isFailedToCreate","addCategory","selectAllCategoriesState","AccountDataService","loadAccounts","postAccounts","newAccount","console","log","accountsSlice","allAccounts","addAccount","selectAllAccountsState","Search","useSelector","dispatch","useDispatch","type","placeholder","onChange","e","userInput","target","onClick","Balance","sumOutcomes","reduce","sumIncomes","item","TransactionsItem","categoryTitle","accountTitle","useState","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","onMouseOver","onMouseOut","TransactionsItemsContainer","index","formatWeekday","dateString","toLocaleString","weekday","formatMonth","month","year","TransactionsItemHeader","currentTransactions","currentDate","Set","expenseBalance","cur","overallBalance","day","TransactionsList","dates","TransactionCreateForm","onClickAddBtn","setOnClickAddBtn","newTransactionState","onChangeUserInput","onChangeSelectHandler","selector","getId","idItem","accountId","categoryId","classesDialog","classes","dialog","dialogFadeIn","dialogFadeOut","join","form","dialogWrapper","onSubmit","preventDefault","required","hidden","selected","dialogTypeWrapper","dialogType","htmlFor","Menu","classesAddBtn","menuAddBtn","close","menu","Form","wrapper","active","App","filteredTransactions","useEffect","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.627fc5db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"close\":\"Menu_close__3Wz-_\"};","import React from 'react';\n// import classes from './Layout.module.css';\n\nfunction Layout(props) {\n  return (\n    <div className=\"container\">\n      <main className=\"page-main\">\n        {props.children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import {nanoid} from 'nanoid';\n\nexport const categories = [\n  {id: 1, title: `Salary`},\n  {id: 2, title: `Rent`},\n  {id: 3, title: `Groceries`},\n  {id: 4, title: `Transportation & parking fees`},\n  {id: 5, title: `Clothing & shoes`},\n  {id: 6, title: `Family`},\n  {id: 7, title: `Coffee`},\n  {id: 8, title: `Health`},\n];\n\nexport const accounts = [\n  {id: 1, title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: 2, title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: 3, title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomSubarray = (items) => {\n  items = items.slice();\n  let count = 1;\n  const result = [];\n  while (count--) {\n    result.push(\n        ...items.splice(\n            getRandomInt(0, items.length - 1), 1)\n    );\n  }\n  return result[0];\n};\n\nconst getRandomDate = () => {\n  const startPoint = new Date().getTime();\n  const endPoint = startPoint - new Date(90 * (24 * 3600 * 1000)).getTime();\n  const date = new Date(endPoint + Math.random() * (startPoint - endPoint));\n\n  return date.toISOString().slice(0, -14);\n};\n\nconst MAX_ID_LENGTH = 6;\n\nconst generateTransactions = (count, accounts, categories) => (Array(count).fill({}).map(() => ({\n    id: nanoid(MAX_ID_LENGTH),\n    sum: getRandomInt(1, 500),\n    date: getRandomDate(),\n    outcome: Boolean(Math.round(Math.random())),\n    account: getRandomSubarray(accounts),\n    category: getRandomSubarray(categories),\n  }))\n);\n\nexport const transactions = generateTransactions(20, accounts, categories);\n","import {transactions} from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  // const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {nanoid} from 'nanoid';\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      id: nanoid(MAX_ID_LENGTH),\n      sum: ``,\n      date: new Date().toISOString().slice(0, -14),\n      outcome: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `outcome`) {\n        value = !state.newTransaction.outcome;\n      }\n      if (name === `sum`) {\n        value = +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: new Date().getTime(),\n          sum: ``,\n          date: new Date().toISOString().slice(0, -14),\n          outcome: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import {categories} from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  this.categories = categories;\n  }\n  async getAll() {\n    const json = this.categories;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {accounts} from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  this.accounts = accounts;\n  }\n  async getAll() {\n    const json = this.accounts;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    console.log(`🚀 ~ file: accounts-slice.js ~ line 17 ~ newAccount`, newAccount);\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className=\"search\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className=\"search__close-btn\" onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","function Balance({transactions}) {\n  const sumOutcomes = transactions.map((transaction) => {\n      transaction.outcome ? transaction = +transaction.sum : transaction = null;\n      return transaction;\n    }).reduce((a, b) => a + b, 0);\n\n    const sumIncomes = transactions.map((item) => {\n      !item.outcome ? item = +item.sum : item = null;\n      return item;\n    }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className=\"balance\">\n      <div className=\"balance__container balance__balance\">\n        <div>\n          <p>Your balance</p>\n          <p className=\"balance__amount\">{sumIncomes - sumOutcomes} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../reducers/transactions/transactions-slice';\n\nfunction TransactionsItem({categoryTitle, accountTitle, outcome, sum, id}) {\n  const dispatch = useDispatch();\n\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    const isShowDeleteBtn = (showDeleteBtn === true) ? false : true;\n    setShowDeleteBtn(isShowDeleteBtn)\n  };\n\n  return (\n    <li\n      className=\"transactions__item\"\n      onMouseOver={handleDeleteButtonToggle}\n      onMouseOut={handleDeleteButtonToggle}\n      >\n      <div className=\"transactions__item-wrapper\">\n        <p>{categoryTitle}</p>\n        <p className=\"transactions__item--expense\">{outcome ? `-` : `+`}{sum} €</p>\n      </div>\n      <div className=\"transactions__item-wrapper\">\n        <p className=\"transactions__item--account\">{accountTitle}</p>\n        <p\n          className={`transactions__item--edit ${showDeleteBtn ? \"\" : \"hidden\"}`}\n          id={id}\n          onClick={onClickDeleteButton}\n          >\n        delete</p>\n      </div>\n    </li>\n  );\n}\n\nexport default TransactionsItem;\n","// import {formatDate} from \"../../../utils/utils\";\nimport TransactionItem from \"./Item\";\n\nfunction TransactionsItemsContainer({date, transactions}) {\n  const dayTransactions = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    dayTransactions.map((transaction, index) => (\n      <div key={index}>\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          outcome={transaction.outcome}\n          sum={transaction.sum}\n          id={transaction.id}\n          />\n      </div>\n    ))\n  );\n}\n\nexport default TransactionsItemsContainer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {formatDay, formatMonth, formatWeekday} from \"../../../utils/utils\";\n\nfunction TransactionsItemHeader({date, transactions}) {\n  const currentTransactions = transactions.filter((transaction) => transaction.date === date);\n  const currentDate = [...new Set(currentTransactions.map((transaction) => transaction.date))];\n  const expenseBalance = currentTransactions.filter((transaction) => transaction.outcome === true).map((transaction) => transaction.sum).reduce((cur, transaction) => cur + transaction, 0);\n  const incomeBalance = currentTransactions.filter((transaction) => transaction.outcome === false).map((transaction) => transaction.sum).reduce((cur, transaction) => cur + transaction, 0);\n  const overallBalance = incomeBalance - expenseBalance;\n\n  return (\n    <div className=\"transactions__header\">\n      <div className=\"transactions__date-content\">\n          <p>{formatDay(currentDate)}</p>\n          <div className=\"transactions__date-wrapper\">\n            <p>{formatWeekday(currentDate)}</p>\n            <p>{formatMonth(currentDate)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsItemHeader;\n","import TransactionItemsContainer from \"./Items/ItemsContainer\";\nimport TransactionsItemHeader from \"./Items/ItemHeader\";\n// import {formatDate} from \"../../utils/utils\";\n\nfunction TransactionsList({transactions}) {\n  const dates = [...new Set(transactions\n    .map(date => date.date))];\n  return (\n    <section className=\"transactions\">\n      {/* <h2>Transactions List</h2> */}\n      {dates.map((date, index) => (\n        <ul className=\"transactions__list\" key={index}>\n          <TransactionsItemHeader date={date} transactions={transactions} />\n          <TransactionItemsContainer date={date} transactions={transactions} />\n        </ul>\n      ))}\n    </section>\n  );\n}\n\nexport default TransactionsList;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, setOnClickAddBtn}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const onChangeUserInput = ({target}) => {\n    const {name, value} = target;\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n    if (selector === \"category\") {\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    setOnClickAddBtn(false);\n  };\n\n  const classesDialog = [\n    classes.dialog,\n    onClickAddBtn ? classes.dialogFadeIn : classes.dialogFadeOut\n  ].join(' ');\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <div\n            className={classesDialog}>\n            <input\n              type=\"number\"\n              name=\"sum\"\n              placeholder=\"0.00\"\n              value={sum}\n              onChange={onChangeUserInput}\n              required\n              />\n\n            <select\n              aria-label=\"Default select example\"\n              onChange={onChangeSelectHandler(\"category\")}\n              required\n              >\n              <option value=\"\" hidden>Choose a category</option>\n              {categories &&\n                categories.map((category) => (\n                  <option\n                    key={category.id}\n                    value={category.title}\n                    selected={category.id ===  newTransactionState.category.id ? true: false}\n                  >\n                  {category.title}\n                  </option>\n                ))}\n            </select>\n\n            <select\n              aria-label=\"Default select example\"\n              onChange={onChangeSelectHandler(\"account\")}\n              required\n              >\n              <option value=\"\" hidden>Choose an account</option>\n              {accounts &&\n                accounts.map((account) => (\n                  <option\n                    key={account.id}\n                    value={account.title}\n                    selected={account.id ===  newTransactionState.account.id ? true: false}\n                  >\n                  {account.title}\n                  </option>\n                ))}\n            </select>\n\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={date}\n              onChange={onChangeUserInput}\n              required\n              />\n\n            <div className={classes.dialogTypeWrapper}>\n              <div className={classes.dialogType}>\n                <input\n                  type=\"checkbox\"\n                  id=\"type\"\n                  name=\"outcome\"\n                  onChange={onChangeUserInput} />\n                <label htmlFor=\"type\">Income</label>\n              </div>\n            </div>\n\n            <button className=\"button\" type=\"submit\">Create</button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts}) {\n  const [onClickAddBtn, setOnClickAddBtn] = useState(false);\n  const dispatch = useDispatch();\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    onClickAddBtn ? 'fa-times' : 'fa-plus',\n    onClickAddBtn ? classes.close : ''\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    setOnClickAddBtn(!onClickAddBtn);\n\n    if (onClickAddBtn) {\n      dispatch(resetState());\n    }\n  };\n\n  return (\n    <nav className={classes.menu}>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        onClickAddBtn={onClickAddBtn}\n        setOnClickAddBtn={setOnClickAddBtn}\n      />\n      <div className={classes.wrapper}>\n        <i\n          className={classesAddBtn}\n          onClick={onClickAddButton}\n        />\n        <p className={classes.active}>Transactions</p>\n        <p>Budget</p>\n        <p>Settings</p>\n      </div>\n    </nav>\n  )\n}\n\nexport default Menu;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Layout from '../src/hoc/Layout/Layout'\n\nimport {loadTransactions, selectFilteredTransactions, selectAllTransactionsState} from './reducers/transactions/transactions-slice'\nimport {loadCategories, selectAllCategoriesState} from './reducers/categories/categories-slice'\nimport {loadAccounts, selectAllAccountsState} from './reducers/accounts/accounts-slice'\n\nimport Search from './components/Search/Search';\nimport Balance from './components/Balance/Balance';\nimport TransactionsList from './components/Transactions/List';\nimport Menu from './components/Navigation/Menu/Menu';\n\nfunction App() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadTransactions());\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n  }, [dispatch]);\n\n  return (\n    <Layout>\n      <Search />\n      <Balance transactions={allTransactions} />\n      <TransactionsList transactions={filteredTransactions} />\n      <Menu\n        categories={allCategories}\n        accounts={allAccounts}\n      />\n    </Layout>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"dialogFadeIn\":\"Form_dialogFadeIn__2edSn\",\"dialogFadeOut\":\"Form_dialogFadeOut__L5NES\"};"],"sourceRoot":""}