{"version":3,"sources":["components/Transactions/CreateForm/Form.module.css","components/Navigation/Menu/Menu.module.css","services/mocks/mocks.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","reducers/transactions/transactions-slice.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","hoc/Layout/Layout.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/Items/Item.js","components/Transactions/Items/ItemsContainer.js","utils/utils.js","components/Transactions/Items/ItemHeader.js","components/Transactions/List.js","containers/Transactions/Transactions.js","containers/Budget/Budget.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","accounts","categories","id","title","balance","startBalance","archive","getRandomInt","min","max","Math","ceil","floor","random","getRandomSubarray","items","slice","count","result","push","splice","length","getRandomDate","startPoint","Date","getTime","endPoint","toISOString","transactions","Array","fill","map","nanoid","sum","date","outcome","Boolean","round","account","category","CategoryDataService","this","a","json","loadCategories","createAsyncThunk","getAll","data","postCategories","newCategory","create","categoriesSlice","createSlice","name","initialState","allCategories","isLoading","hasError","isPending","isFailedToCreate","reducers","addCategory","state","action","payload","extraReducers","pending","fulfilled","rejected","selectAllCategoriesState","actions","AccountDataService","loadAccounts","postAccounts","newAccount","console","log","accountsSlice","allAccounts","addAccount","selectAllAccountsState","TransactionDataService","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","loadTransactions","transactionsSlice","allTransactions","newTransaction","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","filter","transaction","showDelete","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","TransactionCreateForm","onClickAddBtn","setOnClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","onChangeUserInput","target","onChangeSelectHandler","selector","e","getId","idItem","item","accountId","categoryId","classesDialog","classes","dialog","dialogFadeIn","dialogFadeOut","join","className","form","dialogWrapper","onSubmit","preventDefault","type","placeholder","onChange","required","hidden","selected","dialogTypeWrapper","dialogType","htmlFor","Menu","useState","classesAddBtn","menuAddBtn","close","isActiveLink","isActive","active","menu","Form","wrapper","onClick","to","Layout","props","children","Search","userInput","Balance","sumOutcomes","reduce","sumIncomes","TransactionsItem","categoryTitle","accountTitle","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","onMouseOver","onMouseOut","TransactionsItemsContainer","index","formatWeekday","dateString","toLocaleString","weekday","formatMonth","month","year","TransactionsItemHeader","currentTransactions","currentDate","Set","expenseBalance","cur","overallBalance","day","TransactionsList","dates","Transactions","filteredTransactions","useEffect","Budget","Settings","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2425fcd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"dialogFadeIn\":\"Form_dialogFadeIn__2edSn\",\"dialogFadeOut\":\"Form_dialogFadeOut__L5NES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"close\":\"Menu_close__3Wz-_\"};","import {nanoid} from 'nanoid';\n\nexport const categories = [\n  {id: 1, title: `Salary`},\n  {id: 2, title: `Rent`},\n  {id: 3, title: `Groceries`},\n  {id: 4, title: `Transportation & parking fees`},\n  {id: 5, title: `Clothing & shoes`},\n  {id: 6, title: `Family`},\n  {id: 7, title: `Coffee`},\n  {id: 8, title: `Health`},\n];\n\nexport const accounts = [\n  {id: 1, title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: 2, title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: 3, title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomSubarray = (items) => {\n  items = items.slice();\n  let count = 1;\n  const result = [];\n  while (count--) {\n    result.push(\n        ...items.splice(\n            getRandomInt(0, items.length - 1), 1)\n    );\n  }\n  return result[0];\n};\n\nconst getRandomDate = () => {\n  const startPoint = new Date().getTime();\n  const endPoint = startPoint - new Date(90 * (24 * 3600 * 1000)).getTime();\n  const date = new Date(endPoint + Math.random() * (startPoint - endPoint));\n\n  return date.toISOString().slice(0, -14);\n};\n\nconst MAX_ID_LENGTH = 6;\n\nconst generateTransactions = (count, accounts, categories) => (Array(count).fill({}).map(() => ({\n    id: nanoid(MAX_ID_LENGTH),\n    sum: getRandomInt(1, 500),\n    date: getRandomDate(),\n    outcome: Boolean(Math.round(Math.random())),\n    account: getRandomSubarray(accounts),\n    category: getRandomSubarray(categories),\n  }))\n);\n\nexport const transactions = generateTransactions(20, accounts, categories);\n","import {categories} from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  this.categories = categories;\n  }\n  async getAll() {\n    const json = this.categories;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {accounts} from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  this.accounts = accounts;\n  }\n  async getAll() {\n    const json = this.accounts;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    console.log(`🚀 ~ file: accounts-slice.js ~ line 17 ~ newAccount`, newAccount);\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {transactions} from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  // const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {nanoid} from 'nanoid';\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      id: nanoid(MAX_ID_LENGTH),\n      sum: ``,\n      date: new Date().toISOString().slice(0, -14),\n      outcome: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `outcome`) {\n        value = !state.newTransaction.outcome;\n      }\n      if (name === `sum`) {\n        value = +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: new Date().getTime(),\n          sum: ``,\n          date: new Date().toISOString().slice(0, -14),\n          outcome: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, setOnClickAddBtn}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const onChangeUserInput = ({target}) => {\n    const {name, value} = target;\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n    if (selector === \"category\") {\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    setOnClickAddBtn(false);\n  };\n\n  const classesDialog = [\n    classes.dialog,\n    onClickAddBtn ? classes.dialogFadeIn : classes.dialogFadeOut\n  ].join(' ');\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <div\n            className={classesDialog}>\n            <input\n              type=\"number\"\n              name=\"sum\"\n              placeholder=\"0.00\"\n              value={sum}\n              onChange={onChangeUserInput}\n              required\n              />\n\n            <select\n              aria-label=\"Default select example\"\n              onChange={onChangeSelectHandler(\"category\")}\n              required\n              >\n              <option value=\"\" hidden>Choose a category</option>\n              {categories &&\n                categories.map((category) => (\n                  <option\n                    key={category.id}\n                    value={category.title}\n                    selected={category.id ===  newTransactionState.category.id ? true: false}\n                  >\n                  {category.title}\n                  </option>\n                ))}\n            </select>\n\n            <select\n              aria-label=\"Default select example\"\n              onChange={onChangeSelectHandler(\"account\")}\n              required\n              >\n              <option value=\"\" hidden>Choose an account</option>\n              {accounts &&\n                accounts.map((account) => (\n                  <option\n                    key={account.id}\n                    value={account.title}\n                    selected={account.id ===  newTransactionState.account.id ? true: false}\n                  >\n                  {account.title}\n                  </option>\n                ))}\n            </select>\n\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={date}\n              onChange={onChangeUserInput}\n              required\n              />\n\n            <div className={classes.dialogTypeWrapper}>\n              <div className={classes.dialogType}>\n                <input\n                  type=\"checkbox\"\n                  id=\"type\"\n                  name=\"outcome\"\n                  onChange={onChangeUserInput} />\n                <label htmlFor=\"type\">Income</label>\n              </div>\n            </div>\n\n            <button className=\"button\" type=\"submit\">Create</button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts}) {\n  const [onClickAddBtn, setOnClickAddBtn] = useState(false);\n  const dispatch = useDispatch();\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    onClickAddBtn ? 'fa-times' : 'fa-plus',\n    onClickAddBtn ? classes.close : ''\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    setOnClickAddBtn(!onClickAddBtn);\n\n    if (onClickAddBtn) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n\n  return (\n    <nav className={classes.menu}>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        onClickAddBtn={onClickAddBtn}\n        setOnClickAddBtn={setOnClickAddBtn}\n      />\n      <div className={classes.wrapper}>\n        <i\n          className={classesAddBtn}\n          onClick={onClickAddButton}\n        />\n        <NavLink\n            to={'/'}\n            className={isActiveLink}\n        >\n          Transactions\n        </NavLink>\n\n        <NavLink\n            to={'/budget'}\n            className={isActiveLink}\n        >\n          Budget\n        </NavLink>\n\n        <NavLink\n            to={'/settings'}\n            className={isActiveLink}\n        >\n          Settings\n        </NavLink>\n      </div>\n    </nav>\n  )\n}\n\nexport default Menu;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\n// import classes from './Layout.module.css';\nimport {selectAllCategoriesState} from '../../reducers/categories/categories-slice'\nimport {selectAllAccountsState} from '../../reducers/accounts/accounts-slice'\nimport Menu from '../../components/Navigation/Menu/Menu';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n\n  return (\n    <div className=\"container\">\n      <main className=\"page-main\">\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className=\"search\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className=\"search__close-btn\" onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","function Balance({transactions}) {\n  const sumOutcomes = transactions.map((transaction) => {\n      transaction.outcome ? transaction = +transaction.sum : transaction = null;\n      return transaction;\n    }).reduce((a, b) => a + b, 0);\n\n    const sumIncomes = transactions.map((item) => {\n      !item.outcome ? item = +item.sum : item = null;\n      return item;\n    }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className=\"balance\">\n      <div className=\"balance__container balance__balance\">\n        <div>\n          <p>Your balance</p>\n          <p className=\"balance__amount\">{sumIncomes - sumOutcomes} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../reducers/transactions/transactions-slice';\n\nfunction TransactionsItem({categoryTitle, accountTitle, outcome, sum, id}) {\n  const dispatch = useDispatch();\n\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  return (\n    <li\n      className=\"transactions__item\"\n      onMouseOver={handleDeleteButtonToggle}\n      onMouseOut={handleDeleteButtonToggle}\n      >\n      <div className=\"transactions__item-wrapper\">\n        <p>{categoryTitle}</p>\n        <p className=\"transactions__item--expense\">{outcome ? `-` : `+`}{sum} €</p>\n      </div>\n      <div className=\"transactions__item-wrapper\">\n        <p className=\"transactions__item--account\">{accountTitle}</p>\n        <p\n          className={`transactions__item--edit ${showDeleteBtn ? \"\" : \"hidden\"}`}\n          id={id}\n          onClick={onClickDeleteButton}\n          >\n        delete</p>\n      </div>\n    </li>\n  );\n}\n\nexport default TransactionsItem;\n","// import {formatDate} from \"../../../utils/utils\";\nimport TransactionItem from \"./Item\";\n\nfunction TransactionsItemsContainer({date, transactions}) {\n  const dayTransactions = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    dayTransactions.map((transaction, index) => (\n      <div key={index}>\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          outcome={transaction.outcome}\n          sum={transaction.sum}\n          id={transaction.id}\n          />\n      </div>\n    ))\n  );\n}\n\nexport default TransactionsItemsContainer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {formatDay, formatMonth, formatWeekday} from \"../../../utils/utils\";\n\nfunction TransactionsItemHeader({date, transactions}) {\n  const currentTransactions = transactions.filter((transaction) => transaction.date === date);\n  const currentDate = [...new Set(currentTransactions.map((transaction) => transaction.date))];\n  const expenseBalance = currentTransactions.filter((transaction) => transaction.outcome === true).map((transaction) => transaction.sum).reduce((cur, transaction) => cur + transaction, 0);\n  const incomeBalance = currentTransactions.filter((transaction) => transaction.outcome === false).map((transaction) => transaction.sum).reduce((cur, transaction) => cur + transaction, 0);\n  const overallBalance = incomeBalance - expenseBalance;\n\n  return (\n    <div className=\"transactions__header\">\n      <div className=\"transactions__date-content\">\n          <p>{formatDay(currentDate)}</p>\n          <div className=\"transactions__date-wrapper\">\n            <p>{formatWeekday(currentDate)}</p>\n            <p>{formatMonth(currentDate)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsItemHeader;\n","import TransactionItemsContainer from \"./Items/ItemsContainer\";\nimport TransactionsItemHeader from \"./Items/ItemHeader\";\n// import {formatDate} from \"../../utils/utils\";\n\nfunction TransactionsList({transactions}) {\n  const dates = [...new Set(transactions\n    .map(date => date.date))];\n  return (\n    <section className=\"transactions\">\n      {/* <h2>Transactions List</h2> */}\n      {dates.map((date, index) => (\n        <ul className=\"transactions__list\" key={index}>\n          <TransactionsItemHeader date={date} transactions={transactions} />\n          <TransactionItemsContainer date={date} transactions={transactions} />\n        </ul>\n      ))}\n    </section>\n  );\n}\n\nexport default TransactionsList;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n// import Layout from '../../hoc/Layout/Layout'\n\nimport {loadTransactions, selectFilteredTransactions, selectAllTransactionsState} from '../../reducers/transactions/transactions-slice'\nimport {loadCategories} from '../../reducers/categories/categories-slice'\nimport {loadAccounts} from '../../reducers/accounts/accounts-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsList from '../../components/Transactions/List';\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadTransactions());\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n  }, [dispatch]);\n  return (\n    <>\n      <Search />\n      <Balance transactions={allTransactions} />\n      <TransactionsList transactions={filteredTransactions} />\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\n\nfunction Budget() {\n  return (\n    <div>\n      <h1>Budget</h1>\n    </div>\n  )\n}\n\nexport default Budget;\n","import React from 'react';\n\nfunction Settings() {\n  return (\n    <div>\n      <h1>Settings</h1>\n    </div>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Budget from './containers/Budget/Budget';\nimport Settings from './containers/Settings/Settings';\n\nfunction App() {\n    return (\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<Transactions />} />\n          <Route path=\"/budget\" element={<Budget />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Layout>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}