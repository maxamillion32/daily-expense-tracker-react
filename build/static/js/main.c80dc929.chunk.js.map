{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/Items/Indicator/Indicator.module.css","components/Widgets/MonthExpenses/Items/Item.module.css","components/Balance/Balance.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/Widgets/Budget/Items/Item.module.css","components/UI/Input/Input.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","components/Widgets/Budget/Budget.module.css","components/Settings/Items/Item.module.css","components/Settings/Settings.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/Widgets/YearExpenses/Indicator/Indicator.module.css","components/UI/Select/Select.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","services/mocks/mocks.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","hoc/Layout/Layout.js","hoc/ScrollToTop/ScrollToTop.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/Items/Indicator/Indicator.js","components/Widgets/MonthExpenses/utils.js","components/Widgets/MonthExpenses/Items/Item.js","components/Widgets/MonthExpenses/const.js","components/Widgets/MonthExpenses/Statistics.js","reducers/budget/budget-slice.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/constant.js","components/Widgets/YearExpenses/Indicator/Indicator.js","components/Widgets/YearExpenses/YearExpenses.js","components/Widgets/Budget/Items/Item.js","components/Widgets/Budget/Budget.js","containers/Statistics/Statistics.js","components/Settings/Items/Item.js","components/Settings/Blocks/Block.js","components/Settings/Settings.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","accounts","categories","id","nanoid","title","balance","startBalance","archive","getRandomInt","min","max","Math","ceil","floor","random","getRandomSubarray","items","slice","count","result","push","splice","length","getRandomDate","startPoint","Date","getTime","endPoint","toISOString","transactions","Array","fill","map","sum","date","expense","Boolean","round","account","category","CategoryDataService","this","a","json","loadCategories","createAsyncThunk","getAll","data","postCategories","newCategory","create","categoriesSlice","createSlice","name","initialState","allCategories","isLoading","hasError","isPending","isFailedToCreate","reducers","addCategory","state","action","payload","editCategory","newCategories","createCategory","deleteCategory","filter","item","extraReducers","pending","fulfilled","rejected","selectAllCategoriesState","actions","AccountDataService","loadAccounts","postAccounts","newAccount","accountsSlice","allAccounts","addAccount","editAccount","newAccounts","createAccount","deleteAccount","selectAllAccountsState","TransactionDataService","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatWeekday","dateString","toLocaleString","weekday","formatMonthYear","month","year","formatMonth","loadTransactions","transactionsSlice","allTransactions","newTransaction","currentMonth","isButtonClick","isButtonShow","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","transaction","updateMonth","showButton","clickButton","showDelete","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","newTransactionState","setOnClickAddBtn","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","accountId","categoryId","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","clickAddButton","showAddButton","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Layout","LayoutContainer","LayoutMain","ScrollToTop","pathname","useLocation","window","scrollTo","Search","userInput","SearchCloseBtn","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","TransactionsItemsDateGroup","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","day","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","TransactionsContext","createContext","Transactions","filteredTransactions","Provider","WidgetsMonthBalance","MonthBalance","List","Wrapper","WidgetsMonthExpensesIndicator","excessPercent","balanceOfCurrent","totalPercent","transactionsSum","IndicatorWrapper","TotalExpenses","style","width","IndicatorTotal","IndicatorIncomes","IndicatorExpenses","TotalTitle","CategoryTitle","TotalSumWrapper","TotalSumAverage","TotalSum","getSum","toFixed","getBalance","getMonthAverageSum","getTotalPercentPerMonth","WidgetsMonthExpensesItem","excessCategoryPercent","totalCategoryPercent","balanceCategoryOfCurrent","categoryPercent","monthTransactions","daysAmount","getFullYear","getMonth","getDate","currentDay","currentDayStep","isShow","MonthExpensesItem","DayIndicatorWrapper","DayIndicator","left","DayIndicatorDate","Left","Right","Indicator","TRANSACTION_TYPE","Statistics","budget","_getExcessPercent","percent","_getExcessBudgetPercent","balancePerCategory","transactionsSumPerCategory","averageValue","abs","expensesPercent","toUpperCase","averageSum","_getTotalPercent","budgetSlice","January","expenses","incomes","February","March","April","May","June","July","August","September","October","November","December","updateBudget","nameUpperCase","currentType","overall","Object","keys","upperCase","balanceTotal","balanceBudget","values","getOverall","selectBudgetState","WidgetsMonthExpenses","percentCategory","MONTH_EXPENSES","WidgetsYearExpensesIndicator","getPercent","Expenses","Incomes","height","WidgetsYearExpenses","incomesPercent","monthHandler","YearExpenses","Active","WidgetsBudgetItem","isHeader","Block","Title","SubTitle","Description","WidgetsBudget","BudgetWrapper","Header","Content","SettingsItem","onClickSubmitButton","submitTitle","onClickButton","ItemWrapper","ButtonWrapper","SettingsBlock","onClickCreateButton","onClickDeleteButton","Settings","inputCategory","setInputCategory","inputAccount","setInputAccount","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","budgetTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c80dc929.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndicatorWrapper\":\"Indicator_IndicatorWrapper__3q_mt\",\"IndicatorTotal\":\"Indicator_IndicatorTotal__1Y7TP\",\"IndicatorExpenses\":\"Indicator_IndicatorExpenses__12-8R\",\"IndicatorIncomes\":\"Indicator_IndicatorIncomes__9rMe6\",\"Expense\":\"Indicator_Expense__22TSw\",\"TotalExpenses\":\"Indicator_TotalExpenses__1Dw4H\",\"TotalTitle\":\"Indicator_TotalTitle__xlfB6\",\"TotalSumWrapper\":\"Indicator_TotalSumWrapper__mgUZc\",\"TotalSumAverage\":\"Indicator_TotalSumAverage__PGk5u\",\"TotalSum\":\"Indicator_TotalSum__16pCE\",\"Balance\":\"Indicator_Balance__3Hw51\",\"CategoryTitle\":\"Indicator_CategoryTitle__1lw9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpensesItem\":\"Item_MonthExpensesItem__YjU-v\",\"IndicatorWrapper\":\"Item_IndicatorWrapper__2mppw\",\"Indicator\":\"Item_Indicator__1tgmw\",\"DayIndicatorWrapper\":\"Item_DayIndicatorWrapper__1EIsj\",\"DayIndicator\":\"Item_DayIndicator__13Cg7\",\"DayIndicatorDate\":\"Item_DayIndicatorDate__3kWwy\",\"Right\":\"Item_Right__2f5Fi\",\"Left\":\"Item_Left__2pD6l\",\"List\":\"Item_List__3zSXB\",\"Wrapper\":\"Item_Wrapper__2aB6H\",\"CategoryTitle\":\"Item_CategoryTitle__1JliW\",\"Balance\":\"Item_Balance__1vv4s\",\"IndicatorTotal\":\"Item_IndicatorTotal__26IWg\",\"IndicatorExpenses\":\"Item_IndicatorExpenses__2n_83\",\"IndicatorIncomes\":\"Item_IndicatorIncomes__1nQzk\",\"TotalTitle\":\"Item_TotalTitle__akr9c\",\"TotalSumWrapper\":\"Item_TotalSumWrapper__2_RW5\",\"TotalSumAverage\":\"Item_TotalSumAverage__1WQ-t\",\"TotalSum\":\"Item_TotalSum__37VIa\",\"AverageWrapper\":\"Item_AverageWrapper__T8i9X\",\"TotalExpenses\":\"Item_TotalExpenses__de84n\",\"Expense\":\"Item_Expense__1uT9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Item_BudgetWrapper__3V_CQ\",\"Header\":\"Item_Header__3N3pa\",\"Block\":\"Item_Block__2m7Qg\",\"Description\":\"Item_Description__2TYyv\",\"Title\":\"Item_Title__3RCdl\",\"SubTitle\":\"Item_SubTitle__3sJSk\",\"Input\":\"Item_Input__2vqP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Budget_BudgetWrapper__2eRq_\",\"Header\":\"Budget_Header__xvghW\",\"Content\":\"Budget_Content__11etz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemWrapper\":\"Item_ItemWrapper__36lCx\",\"Input\":\"Item_Input__2LKUT\",\"ButtonWrapper\":\"Item_ButtonWrapper__275w9\",\"Button\":\"Item_Button__1YbUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__S2_BS\",\"Header\":\"Settings_Header__1GgmN\",\"Content\":\"Settings_Content__2vl7u\",\"ItemWrapper\":\"Settings_ItemWrapper__1JUDg\",\"Input\":\"Settings_Input__nrbt0\",\"ButtonWrapper\":\"Settings_ButtonWrapper__2lcW-\",\"Button\":\"Settings_Button__1aSBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchCloseBtn\":\"Search_SearchCloseBtn__dEG1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Indicator_Incomes__3bIeI\",\"Expenses\":\"Indicator_Expenses__1JIA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {nanoid} from 'nanoid';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const categories = [\n  {id: nanoid(MAX_ID_LENGTH), title: `Salary`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Rent`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Groceries`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Parking fees`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Clothing & shoes`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Family`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Coffee`},\n  {id: nanoid(MAX_ID_LENGTH), title: `Health`},\n];\n\nexport const accounts = [\n  {id: nanoid(MAX_ID_LENGTH), title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: nanoid(MAX_ID_LENGTH), title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: nanoid(MAX_ID_LENGTH), title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst getRandomSubarray = (items) => {\n  items = items.slice();\n  let count = 1;\n  const result = [];\n  while (count--) {\n    result.push(\n        ...items.splice(\n            getRandomInt(0, items.length - 1), 1)\n    );\n  }\n  return result[0];\n};\n\nconst getRandomDate = () => {\n  const startPoint = new Date().getTime();\n  const endPoint = startPoint - new Date(360 * (24 * 3600 * 1000)).getTime();\n  const date = new Date(endPoint + Math.random() * (startPoint - endPoint));\n\n  return date.toISOString().slice(0, -14);\n};\n\nconst generateTransactions = (count, accounts, categories) => (Array(count).fill({}).map(() => ({\n    id: nanoid(MAX_ID_LENGTH),\n    sum: getRandomInt(1, 500),\n    date: getRandomDate(),\n    expense: Boolean(Math.round(Math.random())),\n    account: getRandomSubarray(accounts),\n    category: getRandomSubarray(categories),\n  }))\n);\n\nexport const transactions = generateTransactions(100, accounts, categories);\n","import {categories} from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  this.categories = categories;\n  }\n  async getAll() {\n    const json = this.categories;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\nimport {categories} from '../../services/mocks/mocks';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: categories,\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    },\n    editCategory: (state, action) => {\n      const categories = [...state.allCategories];\n      const newCategories = categories.map(category => {\n          if (category.id === action.payload.id) {\n            return action.payload;\n          }\n          return category;\n        })\n\n      return {\n        ...state,\n        allCategories: newCategories\n      };\n    },\n    createCategory: (state, action) => {\n      return {\n        ...state,\n        allCategories: [\n          ...state.allCategories,\n          ...action.payload\n        ]\n      };\n    },\n    deleteCategory: (state, action) => {\n      const id = action.payload;\n      const newCategories = [...state.allCategories].filter((item) => item.id !== id)\n      return {\n        ...state,\n        allCategories: [\n          ...newCategories\n        ]\n      };\n    },\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory, editCategory, createCategory, deleteCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {accounts} from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  this.accounts = accounts;\n  }\n  async getAll() {\n    const json = this.accounts;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\nimport {accounts} from '../../services/mocks/mocks';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: accounts,\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    },\n    editAccount: (state, action) => {\n      const accounts = [...state.allAccounts];\n      const newAccounts = accounts.map(account => {\n          if (account.id === action.payload.id) {\n            return action.payload;\n          }\n          return account;\n        })\n\n      return {\n        ...state,\n        allAccounts: newAccounts\n      };\n    },\n    createAccount: (state, action) => {\n      return {\n        ...state,\n        allAccounts: [\n          ...state.allAccounts,\n          ...action.payload\n        ]\n      };\n    },\n    deleteAccount: (state, action) => {\n      const id = action.payload;\n      const newAccounts = [...state.allAccounts].filter((item) => item.id !== id)\n      return {\n        ...state,\n        allAccounts: [\n          ...newAccounts\n        ]\n      };\n    },\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount, editAccount, createAccount, deleteAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {transactions} from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  // const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {nanoid} from 'nanoid';\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {formatMonth} from '../../utils/utils'\nimport {transactions} from '../../services/mocks/mocks';\n\nconst MAX_ID_LENGTH = 6;\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: transactions,\n    newTransaction: {\n      id: nanoid(MAX_ID_LENGTH),\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date()),\n    isButtonClick: false,\n    isButtonShow: false\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n    showButton: (state, action) => {\n      return {\n        ...state,\n        isButtonShow: !state.isButtonShow,\n      };\n    },\n    clickButton: (state, action) => {\n      return {\n        ...state,\n        isButtonClick: !state.isButtonClick,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\nexport const isButtonClick = (state) => state.transactions.isButtonClick;\nexport const isButtonShow = (state) => state.transactions.isButtonShow;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n  updateMonth,\n  clickButton,\n  showButton,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState,\n  clickButton\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, setOnClickAddBtn}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    // setOnClickAddBtn(false);\n    dispatch(clickButton());\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState, isButtonShow, isButtonClick, clickButton} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts}) {\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n  const showAddButton = useSelector(isButtonShow);\n\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    clickAddButton ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    dispatch(clickButton());\n\n    if (clickAddButton) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        onClickAddBtn={clickAddButton}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          {showAddButton && <CSSTransition\n              in={clickAddButton}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>}\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/statistics'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState} from '../../reducers/categories/categories-slice'\nimport {selectAllAccountsState} from '../../reducers/accounts/accounts-slice'\nimport Menu from '../../components/Navigation/Menu/Menu';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {clickButton, isButtonClick} from '../../reducers/transactions/transactions-slice'\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (clickAddButton) {\n      dispatch(clickButton());\n    }\n    // eslint-disable-next-line\n  }, [pathname]);\n\n  return null;\n}\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className={classes.SearchCloseBtn} onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsDateGroup({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsDateGroup;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport classes from '../ListContainer.module.css';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, ...rest}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {TransitionGroup} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport {useSelector} from 'react-redux';\n\nimport {selectFilteredTransactions} from '../../../reducers/transactions/transactions-slice'\nimport {formatMonth} from \"../../../utils/utils\";\n\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\n\nfunction TransactionsListContainer() {\n  const transactions = useSelector(selectFilteredTransactions);\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n  // loadTransactions,\n  selectFilteredTransactions,\n  selectAllTransactionsState,\n  showButton\n} from '../../reducers/transactions/transactions-slice'\n// import {loadCategories} from '../../reducers/categories/categories-slice'\n// import {loadAccounts} from '../../reducers/accounts/accounts-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\n// import { transactions } from '../../services/mocks/mocks';\n\nexport const TransactionsContext = React.createContext();\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(showButton());\n    return () => {\n      dispatch(showButton());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Balance transactions={allTransactions} />\n      <Search />\n      <TransactionsContext.Provider value={filteredTransactions}>\n        <TransactionsListContainer />\n      </TransactionsContext.Provider>\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction WidgetsMonthBalance({currentMonth, transactions}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2 >{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthBalance;\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsMonthExpensesIndicator({\n  excessPercent,\n  balanceOfCurrent,\n  totalPercent,\n  transactionsSum,\n  type,\n  title\n  }) {\n  return (\n    <>\n      <div className={classes.IndicatorWrapper}>\n\n        {/* Indicator */}\n        <div\n          className={classes.TotalExpenses}\n          style={{width: `${totalPercent}%`}}\n        ></div>\n        <div\n          className={classes.IndicatorTotal}\n          style={{width: `${100 - totalPercent}%`}}\n        ></div>\n        <div\n          className={\n              `${\n                type === 'incomes'\n                  ? classes.IndicatorIncomes\n                  : classes.IndicatorExpenses\n              }`\n            }\n          style={{width: `${excessPercent}%`}}\n        ></div>\n\n        {/* Contents */}\n        <p className={\n            title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalTitle\n              : classes.CategoryTitle\n          }>\n          {title}\n        </p>\n        <div className={classes.TotalSumWrapper}>\n          <p className={classes.TotalSumAverage}>{balanceOfCurrent}</p>\n          <p className={\n              title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalSum\n              : classes.Balance\n            }>\n            {type === 'incomes' ? '+' : '-'}\n            {transactionsSum}€\n          </p>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsMonthExpensesIndicator;\n","export const getSum = (transactions, type) => {\n    return transactions\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0).toFixed(2);\n}\n\nexport const getBalance = (category, type, transactions) => {\n  const balance = transactions\n    .filter((transaction) => transaction.category.title === category)\n    .map((transaction) => (type === 'incomes' ? !transaction.expense : transaction.expense) ? transaction = +transaction.sum : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    return balance.toFixed(2);\n}\n\nexport const MOTH_COUNT = 12;\n\nexport const getMonthAverageSum = (sum) => (sum / MOTH_COUNT).toFixed(2);\nexport const getTotalPercentPerMonth = (balance, sum) => (balance / getMonthAverageSum(sum) * 100).toFixed(2);\n","import React from 'react';\nimport Indicator from './Indicator/Indicator';\nimport classes from './Item.module.css';\nimport {getBalance} from '../utils';\nimport {formatMonth} from '../../../../utils/utils';\n\nfunction WidgetsMonthExpensesItem(\n    {\n      categories, excessPercent,\n      excessCategoryPercent, totalPercent,\n      totalCategoryPercent, balanceOfCurrent,\n      balanceCategoryOfCurrent, categoryPercent,\n      transactionsSum, type, title,\n      monthTransactions,\n      month\n    }\n  ) {\n\n  const daysAmount = new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n  const currentDay = new Date().getDate();\n  const currentMonth = formatMonth(new Date());\n  const currentDayStep = (currentDay / daysAmount * 100).toFixed(2);\n  const isShow = month === currentMonth;\n\n  return (\n    <section className={classes.MonthExpensesItem}>\n      {\n        isShow &&\n          <div className={classes.DayIndicatorWrapper}>\n            <div className={classes.DayIndicator} style={{left: `${currentDayStep}%`}}>\n              <p className={\n                `${classes.DayIndicatorDate} ${currentDay > 15 ? classes.Left : classes.Right}`\n                }>Today is  {currentMonth} {currentDay}th</p>\n            </div>\n          </div>\n      }\n      <Indicator\n        excessPercent={excessPercent}\n        balanceOfCurrent={balanceOfCurrent}\n        totalPercent={totalPercent}\n        transactionsSum={transactionsSum}\n        type={type}\n        title={title}\n      />\n\n      <ul className={classes.List}>\n        {categories.map((category) => (\n            <li className={classes.Wrapper} key={category}>\n              <Indicator\n                excessPercent={excessCategoryPercent(category, type)}\n                balanceOfCurrent={balanceCategoryOfCurrent(category, type)}\n                totalPercent={totalCategoryPercent(category, type)}\n                transactionsSum={getBalance(category, type, monthTransactions)}\n                type={type}\n                title={`${categoryPercent(getBalance(category, type, monthTransactions), transactionsSum)}%\n                  ${category}`}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthExpensesItem;\n","export const TRANSACTION_TYPE = {\n    EXPENSES: 'expenses',\n    INCOMES: 'incomes',\n  }\n","import {\n  getMonthAverageSum,\n  getSum,\n  getTotalPercentPerMonth,\n  getBalance,\n  MOTH_COUNT\n} from \"./utils\";\nimport {TRANSACTION_TYPE} from './const';\n\nexport class Statistics {\n  constructor(transactions, type, budget, monthTransactions, currentMonth) {\n    this.transactions = transactions;\n    this.type = type;\n    this.budget = budget;\n    this.monthTransactions = monthTransactions;\n    this.currentMonth = currentMonth;\n    this.category = this.type[0].toUpperCase() + this.type.slice(1);\n  }\n\n  _getExcessPercent = (balance, sum) => {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getExcessBudgetPercent = (balance, sum) => {\n    const percent = balance / sum * 100;\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getTotalPercent(balance, sum) {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  categories(type) {\n    return [...new Set(this.monthTransactions\n    .filter((transaction) => (type === TRANSACTION_TYPE.EXPENSES ? transaction.expense : !transaction.expense)\n      ? transaction.sum !== 0\n      : transaction = null)\n    .map(transaction => transaction.category.title))];\n  }\n\n  sum() {\n    return getSum(this.monthTransactions, this.type);\n  }\n\n  averageSum() {\n    return !this.budget[this.currentMonth][this.type][this.category]\n    ? (getMonthAverageSum(getSum(this.transactions, this.type)))\n    : this.budget[this.currentMonth][this.type][this.category];\n  }\n\n  excessPercent() {\n    return this.budget[this.currentMonth][this.type][this.category]\n    ? this._getExcessBudgetPercent(getSum(this.monthTransactions, this.type), this.averageSum())\n    : this._getExcessPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  balanceOfCurrent() {\n    const averageValue =  (this.averageSum() - getSum(this.monthTransactions, this.type)).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${this.budget[this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${this.budget[this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`;\n  }\n\n  totalPercent() {\n    return this.budget[this.currentMonth][this.type][this.category]\n    ? (((getSum(this.monthTransactions, this.type) / this.averageSum()) * 100) >= 100\n      ? 100\n      : (getSum(this.monthTransactions, this.type) / this.averageSum()) * 100)\n    : this._getTotalPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  percentCategory(balance, sum) {\n    let percent = (balance / sum * 100).toFixed(2);\n    const expensesPercent = percent > 99.9 ? 100 : percent;\n\n    return expensesPercent;\n  }\n\n  excessCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  balanceCategoryOfCurrent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const transactionsSumPerCategory = getBalance(category, type, this.monthTransactions)\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const averageValue = budget\n      ? (budget - transactionsSumPerCategory).toFixed(2)\n      : ((balancePerCategory / MOTH_COUNT) - transactionsSumPerCategory).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${budget ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${budget ? \"budget\" : \"typical\"}`;\n  }\n\n  totalCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 0 : expensesPercent;\n  }\n}\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst getOverall = (budget, type, currentMonth) => {\n    if (Object.keys(budget[currentMonth][type]).length === 0) {\n      return;\n    };\n    const upperCase = type[0].toUpperCase() + type.slice(1);\n    const balanceTotal = budget[currentMonth][type][upperCase];\n    const balanceBudget = Object.values(budget[currentMonth][type]).reduce((a, b) => +a + +b);\n\n    const overall = Math.abs((!balanceTotal ? 0 : balanceTotal) - balanceBudget);\n\n    return overall;\n  }\n\n  const getBalance = (budget, type, currentMonth) => {\n    if (Object.keys(budget[currentMonth][type]).length === 0) {\n      return;\n    };\n    const upperCase = type[0].toUpperCase() + type.slice(1);\n    const balanceTotal = budget[currentMonth][type][upperCase];\n\n    return !balanceTotal ? 0 : balanceTotal;\n  }\n\nexport const budgetSlice = createSlice({\n  name: \"budget\",\n  initialState: {\n    January: {\n      expenses: {},\n      incomes: {}\n    },\n    February: {\n      expenses: {},\n      incomes: {}\n    },\n    March: {\n      expenses: {},\n      incomes: {}\n    },\n    April: {\n      expenses: {},\n      incomes: {}\n    },\n    May: {\n      expenses: {},\n      incomes: {}\n    },\n    June: {\n      expenses: {},\n      incomes: {}\n    },\n    July: {\n      expenses: {},\n      incomes: {}\n    },\n    August: {\n      expenses: {},\n      incomes: {}\n    },\n    September: {\n      expenses: {},\n      incomes: {}\n    },\n    October: {\n      expenses: {},\n      incomes: {}\n    },\n    November: {\n      expenses: {},\n      incomes: {}\n    },\n    December: {\n      expenses: {},\n      incomes: {}\n    },\n  },\n  reducers: {\n    updateBudget: (state, action) => {\n      const type = action.payload.type;\n      const name = action.payload.name;\n      const nameUpperCase = action.payload.nameUpperCase;\n      const value = action.payload.value;\n      const month = action.payload.month;\n\n      const budget = {...state};\n      const currentMonth = {...budget[month]};\n      const currentType = {...currentMonth[type]};\n      currentType[name] = value;\n      currentMonth[type] = currentType;\n\n      budget[month] = currentMonth;\n\n      const overall = getOverall(budget, type, month);\n      const balance = getBalance(budget, type, month);\n\n      if (overall > balance) {\n        const currentMonth = {...budget[month]};\n        const currentType = {...currentMonth[type]};\n        currentType[nameUpperCase] = overall;\n        currentMonth[type] = currentType;\n\n        budget[month] = currentMonth;\n      }\n\n      return {\n        ...budget,\n      };\n    },\n  },\n});\n\nexport const selectBudgetState = (state) => state.budget;\n\nexport const {\n  updateBudget,\n} = budgetSlice.actions;\n\nexport default budgetSlice.reducer;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport WidgetsMonthExpensesItem from './Items/Item'\nimport {formatMonth} from '../../../utils/utils'\nimport {Statistics} from './Statistics';\nimport {TRANSACTION_TYPE} from './const';\nimport {selectBudgetState} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsMonthExpenses({currentMonth, transactions}) {\n  const budget = useSelector(selectBudgetState);\n\n  const monthTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const expenses = new Statistics(transactions, TRANSACTION_TYPE.EXPENSES, budget, monthTransactions, currentMonth);\n  const incomes = new Statistics(transactions, TRANSACTION_TYPE.INCOMES, budget, monthTransactions, currentMonth);\n\n  return (\n    <>\n      <WidgetsMonthExpensesItem\n        categories={expenses.categories(TRANSACTION_TYPE.EXPENSES)}\n\n        categoryPercent={expenses.percentCategory}\n        excessCategoryPercent={expenses.excessCategoryPercent}\n        balanceCategoryOfCurrent={expenses.balanceCategoryOfCurrent}\n        totalCategoryPercent={expenses.totalCategoryPercent}\n\n        excessPercent={expenses.excessPercent()}\n        balanceOfCurrent={expenses.balanceOfCurrent()}\n        totalPercent={expenses.totalPercent()}\n        transactionsSum={expenses.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.EXPENSES}\n        title={\"Expenses\"}\n        month={currentMonth}\n      />\n\n      <WidgetsMonthExpensesItem\n        categories={incomes.categories(TRANSACTION_TYPE.INCOMES)}\n\n        categoryPercent={incomes.percentCategory}\n        excessCategoryPercent={incomes.excessCategoryPercent}\n        balanceCategoryOfCurrent={incomes.balanceCategoryOfCurrent}\n        totalCategoryPercent={incomes.totalCategoryPercent}\n\n        excessPercent={incomes.excessPercent()}\n        balanceOfCurrent={incomes.balanceOfCurrent()}\n        totalPercent={incomes.totalPercent()}\n        transactionsSum={incomes.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.INCOMES}\n        title={\"Incomes\"}\n        month={currentMonth}\n      />\n    </>\n  )\n}\n\nexport default WidgetsMonthExpenses;\n","// export const MONTH_EXPENSES = {\n//   JANUARY: 'January',\n//   FEBRUARY: 'February',\n//   MARCH: 'March',\n//   APRIL: 'April',\n//   MAY: 'May',\n//   JUNE: 'June',\n//   JULY: 'July',\n//   AUGUST: 'August',\n//   SEPTEMBER: 'September',\n//   OCTOBER: 'October',\n//   NOVEMBER: 'November',\n//   DECEMBER: 'December'\n// }\n\nexport const MONTH_EXPENSES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'\n]\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsYearExpensesIndicator({month, getPercent, type}) {\n  let cls = [];\n\n  type === \"expenses\" ? cls.push(classes.Expenses) : cls.push(classes.Incomes);\n\n  return (\n    <div\n      className={cls.join(' ')}\n      id={month}\n      style={{height: `${getPercent(month, type)}%`}}\n    ></div>\n  )\n}\n\nexport default WidgetsYearExpensesIndicator;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateMonth} from '../../../reducers/transactions/transactions-slice';\n\nimport {formatMonth} from '../../../utils/utils';\nimport classes from './YearExpenses.module.css';\nimport {MONTH_EXPENSES} from './constant';\n\nimport Indicator from './Indicator/Indicator';\n\nfunction WidgetsYearExpenses({currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const maxMonthExpense = 3000; // temporary value\n\n  const getPercent = (month, type) => {\n    const incomes = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthExpense * 100);\n    let incomesPercent = percent >= 100 ? 100 : percent;\n\n    return incomesPercent === 0 ? 1 : incomesPercent;\n  }\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <div className={classes.Wrapper}>\n          {MONTH_EXPENSES.map((month) => (\n            <div\n              className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n              key={month}\n              id={month}\n              onClick={monthHandler}\n            >\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"incomes\"}\n              />\n\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"expenses\"}\n              />\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WidgetsYearExpenses;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction WidgetsBudgetItem({title, value, onChange, id}) {\n  const isHeader = title === \"Expenses\" || title === \"Incomes\"\n  return (\n    <div className={classes.Block}>\n      <p className={isHeader ? classes.Title : classes.SubTitle}>{title}</p>\n      {isHeader ? <p className={classes.Description}>Plan</p> : ''}\n      <input\n        className={classes.Input}\n        type=\"number\"\n        id={id}\n        name={title}\n        placeholder={\"0.00\"}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default WidgetsBudgetItem;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport classes from './Budget.module.css';\nimport WidgetsBudgetItem from './Items/Item';\nimport {selectBudgetState, updateBudget} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsBudget({currentMonth}) {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const budget = useSelector(selectBudgetState);\n\n  const onChange = ({target}) => {\n    const type = target.id;\n    const name = target.name;\n    const nameUpperCase = type[0].toUpperCase() + type.slice(1);\n    const value = target.value;\n    const month = currentMonth;\n\n    dispatch(updateBudget({type, name, nameUpperCase, value, month}));\n  }\n\n  return (\n    <section className={classes.BudgetWrapper}>\n      <p className={classes.Header}>Budget</p>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Expenses\"}\n          id={\"expenses\"}\n          value={budget[currentMonth][\"expenses\"][\"Expenses\"] || ''}\n          onChange={onChange}\n        />\n\n        {categories.map((category) => (\n          <WidgetsBudgetItem\n            key={category.id}\n            title={category.title}\n            id={\"expenses\"}\n            value={budget[currentMonth][\"expenses\"][category.title] || ''}\n            onChange={onChange}\n          />\n          ))\n        }\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Incomes\"}\n          id={\"incomes\"}\n          value={budget[currentMonth][\"incomes\"][\"Incomes\"] || ''}\n          onChange={onChange}\n        />\n\n        {categories.map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              id={\"incomes\"}\n              value={budget[currentMonth][\"incomes\"][category.title] || ''}\n              onChange={onChange}\n            />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default WidgetsBudget;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport WidgetsMonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport WidgetsMonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport WidgetsYearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport WidgetsBudget from '../../components/Widgets/Budget/Budget'\nimport classes from './Statistics.module.css';\nimport {currentMonth} from '../../reducers/transactions/transactions-slice';\nimport {\n  // loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice'\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const month = useSelector(currentMonth);\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(loadTransactions());\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <section className={classes.Statistics}>\n      <WidgetsMonthBalance currentMonth={month} transactions={allTransactions} />\n      <WidgetsYearExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsMonthExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsBudget currentMonth={month} />\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction SettingsItem({id, onChange, onClickSubmitButton, value, submitTitle, onClickButton}) {\n  return (\n    <form\n      className={classes.ItemWrapper}\n      onSubmit={onClickSubmitButton}\n    >\n      <input\n        className={classes.Input}\n        type=\"text\"\n        name={value}\n        value={value}\n        id={id}\n        onChange={onChange}\n      />\n      <div className={classes.ButtonWrapper}>\n        <button\n          className={classes.Button}\n          id={id}\n          type=\"submit\"\n          onClick={onClickButton}\n        >\n          {submitTitle}\n        </button>\n        {/* {onClickDeleteBtn && <button\n          className={classes.Button}\n          type=\"button\"\n          onClick={onClickDeleteBtn}\n        >\n          Delete\n        </button>} */}\n      </div>\n    </form>\n  )\n}\n\nexport default SettingsItem;\n","import React from 'react';\nimport classes from '../Settings.module.css';\nimport SettingsItem from '../Items/Item';\n\nfunction SettingsBlock({onClickSubmitButton, onClickCreateButton, value, onChange, onClickDeleteButton, items, title}) {\n  return (\n    <section className={classes.Wrapper}>\n      <div className={classes.Content}>\n        <p className={classes.Header}>{title}</p>\n        <SettingsItem\n          onClickSubmitButton={onClickSubmitButton}\n          onClickButton={onClickCreateButton}\n          value={value}\n          submitTitle={\"Create\"}\n          onChange={onChange}\n        />\n\n        {items.map((category) => (\n          <SettingsItem\n            onClickSubmitButton={onClickSubmitButton}\n            value={category.title}\n            submitTitle={\"Delete\"}\n            onClickButton={onClickDeleteButton}\n            onChange={onChange}\n            id={category.id}\n            key={category.id}\n          />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default SettingsBlock;\n","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState, editCategory, createCategory, deleteCategory} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, editAccount, createAccount, deleteAccount} from '../../reducers/accounts/accounts-slice';\n// import classes from './Settings.module.css';\n// import SettingsItem from './Items/Item';\nimport {nanoid} from 'nanoid';\nimport SettingsBlock from './Blocks/Block';\n\nconst MAX_ID_LENGTH = 6;\n\nfunction Settings() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const accounts = useSelector(selectAllAccountsState);\n\n  const [inputCategory, setInputCategory] = useState('');\n  const [inputAccount, setInputAccount] = useState('');\n\n  const onChangeCategory = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(editCategory({id, title}));\n    } else {\n      setInputCategory(title);\n    }\n  }\n\n  const onChangeAccount = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(editAccount({id, title}));\n    } else {\n      setInputAccount(title);\n    }\n  }\n\n  const onClickCreateCategoryButton = () => {\n    dispatch(createCategory([{id: nanoid(MAX_ID_LENGTH), title: inputCategory}]));\n    setInputCategory('');\n  };\n\n  const onClickCreateAccountButton = () => {\n    dispatch(createAccount([{id: nanoid(MAX_ID_LENGTH), title: inputAccount}]));\n    setInputAccount('');\n  };\n\n  function onClickDeleteCategoryButton({target}) {\n    dispatch(deleteCategory(target.id));\n  };\n\n  function onClickDeleteAccountButton({target}) {\n    dispatch(deleteAccount(target.id));\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateCategoryButton}\n        onClickDeleteButton={onClickDeleteCategoryButton}\n        value={inputCategory}\n        submitTitle={\"Create\"}\n        onChange={onChangeCategory}\n        items={categories}\n        title={\"Categories\"}\n      />\n\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateAccountButton}\n        onClickDeleteButton={onClickDeleteAccountButton}\n        value={inputAccount}\n        submitTitle={\"Create\"}\n        onChange={onChangeAccount}\n        items={accounts}\n        title={\"Accounts\"}\n      />\n    </>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport SettingsScreen from '../../components/Settings/Settings'\nimport classes from './Settings.module.css';\n\nfunction Settings() {\n  return (\n    <section className={classes.Settings}>\n      <SettingsScreen />\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\nimport ScrollToTop from './hoc/ScrollToTop/ScrollToTop';\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\n\nfunction App() {\n    return (\n      <Layout>\n        <ScrollToTop />\n        <Routes>\n          <Route path=\"/\" element={<Transactions />} />\n          <Route path=\"/statistics\" element={<Statistics />} />\n          <Route path=\"/settings\" element={<Settings />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </Layout>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\nimport budgetTermReducer from '../reducers/budget/budget-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n    budget: budgetTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}