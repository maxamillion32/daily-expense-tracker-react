{"version":3,"sources":["services/mocks/mocks.js","services/transaction.service.js","reducers/search/search-slice.js","reducers/transactions/transactions-slice.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","components/Search/Search.js","components/Transactions/CreateForm/Form.js","components/Balance/Balance.js","utils/utils.js","components/Transactions/Items/Item.js","components/Transactions/Items/ItemsContainer.js","components/Transactions/List.js","App.js","store/store.js","index.js"],"names":["module","exports","category","id","title","account","balance","startBalance","archive","transactions","sum","date","outcome","TransactionDataService","mocks","this","a","json","searchTermSlice","createSlice","name","initialState","reducers","setSearchTerm","state","action","payload","clearSearchTerm","selectSearchTerm","searchTerm","actions","loadTransactions","createAsyncThunk","getAll","data","transactionsSlice","allTransactions","newTransaction","Date","getTime","toISOString","slice","isLoading","hasError","setUserInput","value","setCategory","setAccount","addTransaction","resetState","deleteTransaction","newTransactions","filter","transaction","extraReducers","pending","fulfilled","showDelete","rejected","selectAllTransactionsState","selectNewTransactionState","selectFilteredTransactions","toLowerCase","includes","sort","b","setTransactionId","CategoryDataService","loadCategories","postCategories","newCategory","create","categoriesSlice","allCategories","isPending","isFailedToCreate","addCategory","selectAllCategoriesState","categories","AccountDataService","loadAccounts","postAccounts","newAccount","console","log","accountsSlice","allAccounts","addAccount","selectAllAccountsState","accounts","Search","useSelector","dispatch","useDispatch","className","type","placeholder","onChange","e","userInput","target","length","onClick","TransactionCreateForm","newTransactionState","useState","onClickAddBtn","setOnClickAddBtn","isHidden","setIsHidden","onChangeUserInput","onChangeSelectHandler","selector","getId","idItem","map","item","accountId","categoryId","hiddenToggle","setTimeout","hidden","selected","htmlFor","Balance","sumOutcomes","reduce","sumIncomes","formatDate","dateString","toLocaleString","day","month","year","TransactionsItem","categoryTitle","accountTitle","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","onMouseOver","onMouseOut","TransactionsItemsContainer","index","TransactionsList","dates","Set","App","filteredTransactions","useEffect","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5ad8a372.chunk.js","sourcesContent":["const category = [\n  {id: 1, title: `Salary`},\n  {id: 2, title: `Rent`},\n  {id: 3, title: `Groceries`},\n  {id: 4, title: `Transportation & parking fees`},\n  {id: 5, title: `Clothing & shoes`},\n  {id: 6, title: `Family`},\n  {id: 7, title: `Coffee`},\n  {id: 8, title: `Health`},\n];\n\nconst account = [\n  {id: 1, title: `Cash`, balance: 2000, startBalance: 0, archive: false},\n  {id: 2, title: `Postbank`, balance: 55000, startBalance: 0, archive: false},\n  {id: 3, title: `N26`, balance: 550000, startBalance: 0, archive: false},\n];\n\nconst transactions = [\n  {\n    id: 1,\n    sum: 70,\n    date: `2021-11-02`,\n    outcome: true,\n    account: {id: 1, title: `N26`},\n    category: {id: 1, title: `Health`},\n  },\n  {\n    id: 2,\n    sum: 11.50,\n    date: `2021-11-02`,\n    outcome: true,\n    account: {id: 1, title: `Cash`},\n    category: {id: 1, title: `Coffee`},\n  },\n  {\n    id: 3,\n    sum: 350,\n    date: `2021-11-02`,\n    outcome: true,\n    account: {id: 1, title: `Postbank`},\n    category: {id: 1, title: `Clothing & shoes`},\n  },\n  {\n    id: 4,\n    sum: 120,\n    date: `2021-11-01`,\n    outcome: true,\n    account: {id: 1, title: `N26`},\n    category: {id: 1, title: `Groceries`},\n  },\n  {\n    id: 5,\n    sum: 3500,\n    date: `2021-11-01`,\n    outcome: false,\n    account: {id: 1, title: `N26`},\n    category: {id: 1, title: `Salary`},\n  },\n  {\n    id: 5,\n    sum: 47.3,\n    date: `2021-11-03`,\n    outcome: true,\n    account: {id: 1, title: `N26`},\n    category: {id: 1, title: `Family`},\n  },\n];\n\nmodule.exports = {\n  category,\n  account,\n  transactions,\n};\n","import mocks from \"./mocks/mocks\";\n\nclass TransactionDataService {\n  constructor() {\n  const {transactions} = mocks;\n  this.transactions = transactions;\n  }\n  async getAll() {\n    const json = this.transactions;\n    return json;\n  }\n}\n\nexport default new TransactionDataService();\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport TransactionDataService from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\n\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    const data = await TransactionDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      id: new Date().getTime(),\n      sum: ``,\n      date: new Date().toISOString().slice(0, -14),\n      outcome: true,\n      account: [],\n      category: [],\n    },\n    isLoading: false,\n    hasError: false,\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `outcome`) {\n        value = (state.newTransaction.outcome === true) ? false : true;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          category: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          account: action.payload,\n        }\n      };\n    },\n    addTransaction: (state, action) => {\n      return {\n        ...state,\n        allTransactions: [\n          ...state.allTransactions,\n          ...action.payload,\n        ],\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          id: new Date().getTime(),\n          sum: ``,\n          date: new Date().toISOString().slice(0, -14),\n          outcome: true,\n          account: [],\n          category: [],\n        },\n      };\n    },\n    deleteTransaction: (state, action) => {\n      const id = action.payload;\n      const newTransactions = state.allTransactions.filter(transaction => transaction.id !== +id)\n      return {\n        ...state,\n        allTransactions: newTransactions,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const selectAllTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  deleteTransaction,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import mocks from \"./mocks/mocks\";\n\nclass CategoryDataService {\n  constructor() {\n  const {category} = mocks;\n  this.category = category;\n  }\n  async getAll() {\n    const json = this.category;\n    return json;\n  }\n}\n\nexport default new CategoryDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport CategoryDataService from '../../services/category.service';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    const data = await CategoryDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postCategories = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    const data = await CategoryDataService.create(newCategory);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addCategory: (state, action) => {\n      return {\n        ...state,\n        newCategory: {\n          ...state.newCategory,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postCategories.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.fulfilled]: (state) => {\n      state.newCategory = {\n        title: ``,\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postCategories.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const {addCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import mocks from \"./mocks/mocks\";\n\nclass AccountDataService {\n  constructor() {\n  const {account} = mocks;\n  this.account = account;\n  }\n  async getAll() {\n    const json = this.account;\n    return json;\n  }\n}\n\nexport default new AccountDataService();\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport AccountDataService from '../../services/account.service';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    const data = await AccountDataService.getAll();\n    const json = await data;\n    return json;\n  }\n)\n\nexport const postAccounts = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    console.log(`🚀 ~ file: accounts-slice.js ~ line 17 ~ newAccount`, newAccount);\n    const data = await AccountDataService.create(newAccount);\n    const json = await data;\n    return json;\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {\n    addAccount: (state, action) => {\n      return {\n        ...state,\n        newAccount: {\n          ...state.newAccount,\n          title: action.payload,\n        }\n      };\n    }\n  },\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n\n    [postAccounts.pending]: (state) => {\n      state.isPending = true;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.fulfilled]: (state) => {\n      state.newAccount = {\n        title: ``,\n        balance: 0,\n        startBalance: 0,\n        archive: false\n      }\n      state.isPending = false;\n      state.isFailedToCreate = false;\n    },\n    [postAccounts.rejected]: (state) => {\n      state.isPending = false;\n      state.isFailedToCreate = true;\n    }\n  },\n});\n\nexport const selectAllAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const {addAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className=\"search\">\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className=\"search__close-btn\" onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  addTransaction,\n  resetState\n} from '../../../reducers/transactions/transactions-slice';\n\nfunction TransactionCreateForm({categories, accounts}){\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const dispatch = useDispatch();\n\n  const [onClickAddBtn, setOnClickAddBtn] = useState(false);\n  const [isHidden, setIsHidden] = useState(true);\n\n  const {sum, date} = newTransactionState;\n\n  const onChangeUserInput = ({target}) => {\n    const {name, value} = target;\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount({id: accountId, title: e.target.value}));\n    }\n    if (selector === \"category\") {\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory({id: categoryId, title: e.target.value}));\n    }\n  };\n\n  const onClickSubmitButton = () => {\n    dispatch(addTransaction([newTransactionState]));\n    dispatch(resetState());\n    setOnClickAddBtn(false);\n\n    setTimeout(function () {\n      setIsHidden(true);\n    }, 500)\n  };\n\n  const onClickAddButton = () => {\n    const isAddBtnClick = (onClickAddBtn === true) ? false : true;\n    const hiddenToggle = (isHidden === true) ? false : true;\n\n    setOnClickAddBtn(isAddBtnClick);\n\n    if (hiddenToggle === false) {\n      setIsHidden(hiddenToggle);\n    } else {\n      setTimeout(function () {\n        setIsHidden(hiddenToggle);\n      }, 500)\n    }\n  };\n\n  return (\n    <section className=\"transactions\">\n      <div className=\"transactions__title\">\n        <h2>Transactions</h2>\n        <p\n          className={`transaction-add__btn ${onClickAddBtn ? \"transaction-add__btn--click\" : \"\"}`}\n          onClick={onClickAddButton}\n          >\n          Add\n        </p>\n      </div>\n      <div className=\"transactions__wrapper\">\n        <div\n          className={`transaction-add ${isHidden ? \"transaction-add__hidden\" : \"\"} ${onClickAddBtn ? \"transaction-add__fade-in\" : \"transaction-add__fade-out\"}`}>\n          <input\n            type=\"number\"\n            name=\"sum\"\n            placeholder=\"Enter an amount\"\n            value={sum}\n            onChange={onChangeUserInput}\n            />\n\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            onChange={onChangeSelectHandler(\"category\")}\n            >\n            <option value=\"\" hidden>Choose a category</option>\n            {categories &&\n              categories.map((category) => (\n                <option\n                  key={category.id}\n                  value={category.title}\n                  selected={category.id ===  newTransactionState.category.id ? true: false}\n                >\n                {category.title}\n                </option>\n              ))}\n          </select>\n\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            onChange={onChangeSelectHandler(\"account\")}\n            >\n            <option value=\"\" hidden>Choose an account</option>\n            {accounts &&\n              accounts.map((account) => (\n                <option\n                  key={account.id}\n                  value={account.title}\n                  selected={account.id ===  newTransactionState.account.id ? true: false}\n                >\n                {account.title}\n                </option>\n              ))}\n          </select>\n\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={onChangeUserInput}\n            />\n\n          <div className=\"transaction-add__wrapper\">\n            <div className=\"transaction-add__type\">\n              <input\n                type=\"checkbox\"\n                id=\"type\"\n                name=\"outcome\"\n                onChange={onChangeUserInput} />\n              <label htmlFor=\"type\">Income</label>\n            </div>\n          </div>\n\n          <button className=\"button\" onClick={onClickSubmitButton}>Create</button>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","function Balance({transactions}) {\n  const sumOutcomes = transactions.map((transaction) => {\n      transaction.outcome ? transaction = +transaction.sum : transaction = null;\n      return transaction;\n    }).reduce((a, b) => a + b, 0);\n\n    const sumIncomes = transactions.map((item) => {\n      !item.outcome ? item = +item.sum : item = null;\n      return item;\n    }).reduce((a, b) => a + b, 0);\n\n  return (\n    <section className=\"balance\">\n      <div className=\"balance__container balance__balance\">\n        <div>\n          <p>Your balance</p>\n          <p className=\"balance__amount\">{sumIncomes - sumOutcomes} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","export function formatDate (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n    month: `short`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction} from '../../../reducers/transactions/transactions-slice';\n\nfunction TransactionsItem({categoryTitle, accountTitle, outcome, sum, id}) {\n  const dispatch = useDispatch();\n\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n    dispatch(deleteTransaction(id));\n  };\n\n  const handleDeleteButtonToggle = () => {\n    const isShowDeleteBtn = (showDeleteBtn === true) ? false : true;\n    setShowDeleteBtn(isShowDeleteBtn)\n  };\n\n  return (\n    <li\n      className=\"transactions-list__item\"\n      onMouseOver={handleDeleteButtonToggle}\n      onMouseOut={handleDeleteButtonToggle}\n      >\n      <div className=\"transactions-list__item-wrapper\">\n        <p>{categoryTitle}</p>\n        <p className=\"transactions-list__item--expense\">{outcome ? `- ` : `+ `}{sum} €</p>\n      </div>\n      <div className=\"transactions-list__item-wrapper\">\n        <p className=\"transactions-list__item--account\">{accountTitle}</p>\n        <p\n          className={`transactions-list__item--edit ${showDeleteBtn ? \"\" : \"hidden\"}`}\n          id={id}\n          onClick={onClickDeleteButton}\n          >\n        delete</p>\n      </div>\n    </li>\n  );\n}\n\nexport default TransactionsItem;\n","import {formatDate} from \"../../../utils/utils\";\nimport TransactionItem from \"./Item\";\n\nfunction TransactionsItemsContainer({date, transactions}) {\n  const dayTransactions = transactions.filter((transaction) => formatDate(transaction.date) === date);\n\n  return (\n    dayTransactions.map((transaction, index) => (\n      <div key={index}>\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          outcome={transaction.outcome}\n          sum={transaction.sum}\n          id={transaction.id}\n          />\n      </div>\n    ))\n  );\n}\n\nexport default TransactionsItemsContainer;\n","import TransactionItemsContainer from \"./Items/ItemsContainer\";\nimport {formatDate} from \"../../utils/utils\";\n\nfunction TransactionsList({transactions}) {\n  const dates = [...new Set(transactions\n    .map(date => formatDate(date.date)))];\n  return (\n    <section className=\"transactions-list\">\n      <h2>Transactions List</h2>\n      {dates.map((date, index) => (\n        <ul className=\"transactions-list__list\" key={index}>\n          <div className=\"transactions-list__day\">\n            <p>{date}</p>\n          </div>\n          <TransactionItemsContainer date={date} transactions={transactions} />\n        </ul>\n      ))}\n    </section>\n  );\n}\n\nexport default TransactionsList;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {loadTransactions, selectFilteredTransactions, selectAllTransactionsState} from './reducers/transactions/transactions-slice'\nimport {loadCategories, selectAllCategoriesState} from './reducers/categories/categories-slice'\nimport {loadAccounts, selectAllAccountsState} from './reducers/accounts/accounts-slice'\n\nimport Search from './components/Search/Search';\nimport TransactionCreateForm from './components/Transactions/CreateForm/Form';\nimport Balance from './components/Balance/Balance';\nimport TransactionsList from './components/Transactions/List';\n\nfunction App() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadTransactions());\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <main className=\"page-main\">\n        <Search />\n        <TransactionCreateForm\n          categories={allCategories}\n          accounts={allAccounts}\n          />\n        <Balance transactions={allTransactions} />\n        <TransactionsList transactions={filteredTransactions} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}