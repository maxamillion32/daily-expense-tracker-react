{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/Items/Indicator/Indicator.module.css","components/Widgets/MonthExpenses/Items/Item.module.css","components/Balance/Balance.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/Widgets/Budget/Items/Item.module.css","components/Settings/Items/Item.module.css","components/UI/Input/Input.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","components/Widgets/Budget/Budget.module.css","components/Auth/Auth.module.css","components/Settings/Settings.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/Widgets/YearExpenses/Indicator/Indicator.module.css","components/UI/Select/Select.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","reducers/user/user-slice.js","services/firebase.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","components/Auth/Auth.js","hoc/Layout/Layout.js","hoc/ScrollToTop/ScrollToTop.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/Items/Indicator/Indicator.js","components/Widgets/MonthExpenses/utils.js","components/Widgets/MonthExpenses/Items/Item.js","components/Widgets/MonthExpenses/const.js","components/Widgets/MonthExpenses/Statistics.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/constant.js","components/Widgets/YearExpenses/Indicator/Indicator.js","components/Widgets/YearExpenses/YearExpenses.js","components/Widgets/Budget/Items/Item.js","services/budget.service.js","reducers/budget/budget-slice.js","components/Widgets/Budget/Budget.js","containers/Statistics/Statistics.js","components/Settings/Items/Item.js","components/Settings/Blocks/Block.js","components/Settings/Settings.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","userSlice","createSlice","name","initialState","userId","reducers","setUserId","state","action","payload","extraReducers","selectUserId","user","actions","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","categoriesRef","collection","db","getAll","a","getDocs","snapshot","results","docs","map","doc","data","id","create","category","addDoc","deleteId","docRef","deleteDoc","update","title","setDoc","loadCategories","createAsyncThunk","postCategory","newCategory","updateCategory","deleteCategory","categoryId","categoriesSlice","allCategories","isLoading","hasError","isPending","isFailedToCreate","pending","fulfilled","rejected","selectAllCategoriesState","categories","allCategoriesState","filter","transaction","addCategory","editCategory","createCategory","accountsRef","account","updateDoc","loadAccounts","postAccount","newAccount","updateAccount","deleteAccount","accountId","accountsSlice","allAccounts","balance","startBalance","archive","selectAllAccountsState","accounts","allAccountsState","addAccount","editAccount","createAccount","transactionsRef","snapshotTransactions","snapshotCategories","snapshotAccounts","transactions","find","sum","expense","date","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatWeekday","dateString","Date","toLocaleString","weekday","formatMonthYear","month","year","formatMonth","loadTransactions","postTransaction","console","log","deleteTransaction","transactionId","transactionsSlice","allTransactions","newTransaction","toISOString","slice","currentMonth","isButtonClick","isButtonShow","setUserInput","value","setCategory","setAccount","resetState","updateMonth","showButton","clickButton","showDelete","selectNewTransactionState","selectAllTransactionsState","allTransactionsState","selectFilteredTransactions","toLowerCase","includes","sort","b","getTime","setTransactionId","addTransaction","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","Math","random","push","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","item","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","clickAddButton","showAddButton","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Auth","loading","setLoading","currentUser","setCurrentUser","onAuthStateChanged","uid","useAuth","emailRef","passwordRef","handleSignup","email","current","password","createUserWithEmailAndPassword","then","December","expenses","incomes","merge","catch","err","alert","handleLogin","signInWithEmailAndPassword","handleLogout","signOut","Main","Header","Fields","Layout","LayoutContainer","LayoutMain","ScrollToTop","pathname","useLocation","window","scrollTo","Search","userInput","length","SearchCloseBtn","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","round","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","TransactionsItemsDateGroup","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","day","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","TransactionsContext","createContext","Transactions","filteredTransactions","Provider","WidgetsMonthBalance","toFixed","MonthBalance","List","Wrapper","WidgetsMonthExpensesIndicator","excessPercent","balanceOfCurrent","totalPercent","transactionsSum","IndicatorWrapper","TotalExpenses","style","width","IndicatorTotal","IndicatorIncomes","IndicatorExpenses","TotalTitle","CategoryTitle","TotalSumWrapper","TotalSumAverage","TotalSum","getSum","getBalance","getMonthAverageSum","getTotalPercentPerMonth","WidgetsMonthExpensesItem","excessCategoryPercent","totalCategoryPercent","balanceCategoryOfCurrent","categoryPercent","monthTransactions","daysAmount","getFullYear","getMonth","getDate","currentDay","currentDayStep","isShow","MonthExpensesItem","DayIndicatorWrapper","DayIndicator","left","DayIndicatorDate","Left","Right","Indicator","TRANSACTION_TYPE","Statistics","budget","_getExcessPercent","percent","_getExcessBudgetPercent","balancePerCategory","transactionsSumPerCategory","averageValue","abs","expensesPercent","this","toUpperCase","averageSum","_getTotalPercent","WidgetsMonthExpenses","percentCategory","MONTH_EXPENSES","WidgetsYearExpensesIndicator","getPercent","Expenses","Incomes","height","WidgetsYearExpenses","incomesPercent","monthHandler","YearExpenses","Active","WidgetsBudgetItem","isHeader","Block","Title","SubTitle","Description","budgetRef","loadBudgets","postBudget","currentType","budgetSlice","updateBudget","selectAllBudgetState","allBudget","allBudgetState","WidgetsBudget","nameUpperCase","BudgetWrapper","Content","newBudget","SettingsItem","onClickSubmitButton","submitTitle","onClickButton","onClickDeleteButton","ItemWrapper","ButtonWrapper","SettingsBlock","onClickCreateButton","items","onClickEditButton","Settings","inputCategory","setInputCategory","inputAccount","setInputAccount","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","budgetReducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.733a5038.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndicatorWrapper\":\"Indicator_IndicatorWrapper__3q_mt\",\"IndicatorTotal\":\"Indicator_IndicatorTotal__1Y7TP\",\"IndicatorExpenses\":\"Indicator_IndicatorExpenses__12-8R\",\"IndicatorIncomes\":\"Indicator_IndicatorIncomes__9rMe6\",\"Expense\":\"Indicator_Expense__22TSw\",\"TotalExpenses\":\"Indicator_TotalExpenses__1Dw4H\",\"TotalTitle\":\"Indicator_TotalTitle__xlfB6\",\"TotalSumWrapper\":\"Indicator_TotalSumWrapper__mgUZc\",\"TotalSumAverage\":\"Indicator_TotalSumAverage__PGk5u\",\"TotalSum\":\"Indicator_TotalSum__16pCE\",\"Balance\":\"Indicator_Balance__3Hw51\",\"CategoryTitle\":\"Indicator_CategoryTitle__1lw9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpensesItem\":\"Item_MonthExpensesItem__YjU-v\",\"IndicatorWrapper\":\"Item_IndicatorWrapper__2mppw\",\"Indicator\":\"Item_Indicator__1tgmw\",\"DayIndicatorWrapper\":\"Item_DayIndicatorWrapper__1EIsj\",\"DayIndicator\":\"Item_DayIndicator__13Cg7\",\"DayIndicatorDate\":\"Item_DayIndicatorDate__3kWwy\",\"Right\":\"Item_Right__2f5Fi\",\"Left\":\"Item_Left__2pD6l\",\"List\":\"Item_List__3zSXB\",\"Wrapper\":\"Item_Wrapper__2aB6H\",\"CategoryTitle\":\"Item_CategoryTitle__1JliW\",\"Balance\":\"Item_Balance__1vv4s\",\"IndicatorTotal\":\"Item_IndicatorTotal__26IWg\",\"IndicatorExpenses\":\"Item_IndicatorExpenses__2n_83\",\"IndicatorIncomes\":\"Item_IndicatorIncomes__1nQzk\",\"TotalTitle\":\"Item_TotalTitle__akr9c\",\"TotalSumWrapper\":\"Item_TotalSumWrapper__2_RW5\",\"TotalSumAverage\":\"Item_TotalSumAverage__1WQ-t\",\"TotalSum\":\"Item_TotalSum__37VIa\",\"AverageWrapper\":\"Item_AverageWrapper__T8i9X\",\"TotalExpenses\":\"Item_TotalExpenses__de84n\",\"Expense\":\"Item_Expense__1uT9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Item_BudgetWrapper__3V_CQ\",\"Header\":\"Item_Header__3N3pa\",\"Block\":\"Item_Block__2m7Qg\",\"Description\":\"Item_Description__2TYyv\",\"Title\":\"Item_Title__3RCdl\",\"SubTitle\":\"Item_SubTitle__3sJSk\",\"Input\":\"Item_Input__2vqP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemWrapper\":\"Item_ItemWrapper__36lCx\",\"Input\":\"Item_Input__2LKUT\",\"ButtonWrapper\":\"Item_ButtonWrapper__275w9\",\"Button\":\"Item_Button__1YbUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Budget_BudgetWrapper__2eRq_\",\"Header\":\"Budget_Header__xvghW\",\"Content\":\"Budget_Content__11etz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Auth_Main__11kSo\",\"Header\":\"Auth_Header__1VwbD\",\"Fields\":\"Auth_Fields__3NQ_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__S2_BS\",\"Header\":\"Settings_Header__1GgmN\",\"Content\":\"Settings_Content__2vl7u\",\"ItemWrapper\":\"Settings_ItemWrapper__1JUDg\",\"Input\":\"Settings_Input__nrbt0\",\"ButtonWrapper\":\"Settings_ButtonWrapper__2lcW-\",\"Button\":\"Settings_Button__1aSBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchCloseBtn\":\"Search_SearchCloseBtn__dEG1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Indicator_Incomes__3bIeI\",\"Expenses\":\"Indicator_Expenses__1JIA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {createSlice} from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userId: '',\n  },\n  reducers: {\n    setUserId: (state, action) => {\n      return {\n        userId: action.payload,\n      };\n    },\n  },\n  extraReducers: {},\n});\n\nexport const selectUserId = (state) => state.user.userId;\n\nexport const {setUserId} = userSlice.actions;\nexport default userSlice.reducer;\n","import { useEffect, useState } from \"react\";\nimport {useDispatch} from 'react-redux';\nimport { setUserId } from \"../reducers/user/user-slice\";\nimport {\n  addDoc, collection,\n  // updateDoc,\n  setDoc, doc, deleteDoc, getDocs\n} from \"@firebase/firestore\";\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA-jcEb53c4muML3hfX3HA7WYvqCSwBNNY\",\n  authDomain: \"expense-tracker-4e13a.firebaseapp.com\",\n  projectId: \"expense-tracker-4e13a\",\n  storageBucket: \"expense-tracker-4e13a.appspot.com\",\n  messagingSenderId: \"65016479636\",\n  appId: \"1:65016479636:web:8b455fad8e8c1b1c791981\"\n};\n\n// Initialize Firebase\n// eslint-disable-next-line\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\n\nexport function singUp(email, password) {\n    createUserWithEmailAndPassword(auth, email, password)\n    .then(data => {\n      const id = data.user.uid;\n\n      const docRef = doc(getFirestore(), \"budgets\", id);\n      const payload = {December: {expenses:{}, incomes:{}}};\n\n      setDoc(docRef, payload, {merge:true});\n    })\n    .catch(err => {\n      alert(err);\n    })\n}\n\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n\n//Custom Hook\nexport function useAuth() {\n  const [currentUser, setCurrentUser] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n      if (user) {\n      dispatch(setUserId(user.uid))\n    }\n    setCurrentUser(user)\n    });\n    return unsub;\n  }, [])\n\n  return currentUser;\n}\nexport default getFirestore();\n","import {\n  addDoc, collection,\n  // updateDoc,\n  setDoc, doc, deleteDoc, getDocs\n} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst categoriesRef = collection(db, \"categories\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(categoriesRef);\n  const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  return results;\n}\n\nexport const create = async (category) => {\n  const payload = {...category};\n  await addDoc(categoriesRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(categoriesRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title) => {\n  const docRef = doc(db, \"categories\", id);\n  const payload = {title};\n\n  setDoc(docRef, payload);\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport {getAll, create, deleteId, update} from '../../services/category.service';\nimport {selectUserId} from '../user/user-slice';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postCategory = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    return await create(newCategory);\n  }\n)\n\nexport const updateCategory = createAsyncThunk(\n  'categories/updateData',\n  async ({id, title}) => {\n    return await update(id, title);\n  }\n)\n\nexport const deleteCategory = createAsyncThunk(\n  'categories/deleteData',\n  async (categoryId) => {\n    return await deleteId(categoryId);\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {},\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const allCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const selectAllCategoriesState = (state) => {\n  const allCategories = allCategoriesState(state);\n  const userId = selectUserId(state);\n\n  return allCategories\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const {addCategory, editCategory, createCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {addDoc, collection, updateDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst accountsRef = collection(db, \"accounts\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(accountsRef);\n  const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  return results;\n}\n\nexport const create = async (account) => {\n  const payload = {...account};\n  await addDoc(accountsRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(accountsRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title) => {\n  const docRef = doc(accountsRef, id);\n  const payload = {title};\n\n  updateDoc(docRef, payload);\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport {getAll, create, update, deleteId} from '../../services/account.service';\nimport {selectUserId} from '../user/user-slice';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postAccount = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    return await create(newAccount);\n  }\n)\n\nexport const updateAccount = createAsyncThunk(\n  'accounts/updateData',\n  async ({id, title}) => {\n    return await update(id, title);\n  }\n)\n\nexport const deleteAccount = createAsyncThunk(\n  'accounts/deleteData',\n  async (accountId) => {\n    return await deleteId(accountId);\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {},\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const allAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const selectAllAccountsState = (state) => {\n  const allAccounts = allAccountsState(state);\n  const userId = selectUserId(state);\n\n  return allAccounts\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const {addAccount, editAccount, createAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {addDoc, collection, updateDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\nimport {getAuth, onAuthStateChanged} from 'firebase/auth';\n\nconst auth = getAuth();\n// let userId = '';\n// console.log(`🚀 ~ file: transaction.service.js ~ line 7 ~ userId`, auth.currentUser);\n// onAuthStateChanged(auth, (user) => {\n//   if (user) {\n//     userId = user.uid;\n//   }\n//   return userId\n// })\n\nconst transactionsRef = collection(db, \"transactions\");\nconst categoriesRef = collection(db, \"categories\");\nconst accountsRef = collection(db, \"accounts\");\n\nexport const getAll = async () => {\n  const snapshotTransactions = await getDocs(transactionsRef);\n  const snapshotCategories = await getDocs(categoriesRef);\n  const snapshotAccounts = await getDocs(accountsRef);\n\n  let transactions = {};\n  const categories = snapshotCategories.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  const accounts = snapshotAccounts.docs.map((doc) => ({...doc.data(), id: doc.id}));\n\n  transactions = snapshotTransactions.docs.map((doc) => {\n    transactions = {id: doc.id, ...doc.data()}\n    transactions.category = categories.find((category) => category.id === transactions.categoryId);\n    transactions.account = accounts.find((account) => account.id === transactions.accountId);\n    return transactions;\n  });\n  return transactions;\n}\n\n// export const getAll = async () => {\n//   const snapshotTransactions = await getDocs(transactionsRef);\n//   const snapshotCategories = await getDocs(categoriesRef);\n//   const snapshotAccounts = await getDocs(accountsRef);\n\n//   let transactions = {};\n//   const categories = snapshotCategories.docs.map((doc) => ({...doc.data(), id: doc.id}));\n//   const accounts = snapshotAccounts.docs.map((doc) => ({...doc.data(), id: doc.id}));\n\n//   transactions = snapshotTransactions.docs.map((doc) => {\n//     transactions = {id: doc.id, ...doc.data()}\n//     transactions.category = categories.find((category) => category.id === transactions.categoryId);\n//     transactions.account = accounts.find((account) => account.id === transactions.accountId);\n//     return transactions;\n//   });\n//   return transactions;\n// }\n\nexport const create = async (data) => {\n  const {sum, expense, date, categoryId, accountId, userId} = data;\n  const payload = {sum, expense, date, categoryId, accountId, userId};\n  await addDoc(transactionsRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(transactionsRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title) => {\n  const docRef = doc(transactionsRef, id);\n  const payload = {title};\n\n  updateDoc(docRef, payload);\n}\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getAll, create, deleteId} from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {selectUserId} from '../user/user-slice';\nimport {formatMonth} from '../../utils/utils'\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postTransaction = createAsyncThunk(\n  'transactions/postData',\n  async (data) => {\n    console.log(`🚀 ~ file: transactions-slice.js ~ line 16 ~ data`, data);\n    return await create(data);\n  }\n)\n\nexport const deleteTransaction = createAsyncThunk(\n  'transactions/deleteData',\n  async (transactionId) => {\n    return await deleteId(transactionId);\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date()),\n    isButtonClick: false,\n    isButtonShow: false\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          categoryId: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          accountId: action.payload,\n        }\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          // id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n        },\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n    showButton: (state, action) => {\n      return {\n        ...state,\n        isButtonShow: !state.isButtonShow,\n      };\n    },\n    clickButton: (state, action) => {\n      return {\n        ...state,\n        isButtonClick: !state.isButtonClick,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nconst allTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\nexport const isButtonClick = (state) => state.transactions.isButtonClick;\nexport const isButtonShow = (state) => state.transactions.isButtonShow;\n\nexport const selectAllTransactionsState = (state) => {\n  const allTransactions = allTransactionsState(state);\n  const userId = selectUserId(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n  const userId = selectUserId(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.userId === userId)\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  updateMonth,\n  clickButton,\n  showButton,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  postTransaction,\n  resetState,\n  clickButton,\n  loadTransactions\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, userId}){\n  // console.log(`🚀 ~ file: Form.js ~ line 21 ~ TransactionCreateForm ~ userId`, userId);\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount(accountId));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory(categoryId));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(postTransaction({...newTransactionState, userId}));\n    dispatch(resetState());\n    dispatch(clickButton());\n    dispatch(loadTransactions());\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState, isButtonShow, isButtonClick, clickButton} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts, userId}) {\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n  const showAddButton = useSelector(isButtonShow);\n\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    clickAddButton ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    dispatch(clickButton());\n\n    if (clickAddButton) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        userId={userId}\n        onClickAddBtn={clickAddButton}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          {showAddButton && <CSSTransition\n              in={clickAddButton}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>}\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/statistics'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import { useRef, useState } from 'react';\nimport classes from './Auth.module.css';\nimport { singUp, logout, login, useAuth } from '../../services/firebase';\n\nfunction Auth() {\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSignup = async () => {\n    setLoading(true);\n    try {\n      await singUp(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Email already in use!\");\n    }\n    setLoading(false);\n  }\n\n  const handleLogin = async () => {\n    setLoading(true);\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Wrong email or password\");\n    }\n    setLoading(false);\n  }\n\n  const handleLogout = async () => {\n    setLoading(true);\n    try {\n      await logout();\n    } catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <section className={classes.Main}>\n      <p className={classes.Header}>Currently logged in as: <strong>{currentUser?.email}</strong></p>\n      {!currentUser && <div className={classes.Fields}>\n        <input ref={emailRef} placeholder=\"Email\" />\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n      </div>}\n\n      {!currentUser && <button disabled={loading || currentUser} onClick={handleSignup}>Sing Up</button>}\n      {!currentUser && <button disabled={loading || currentUser} onClick={handleLogin}>Log In</button>}\n      {currentUser && <button disabled={loading || !currentUser} onClick={handleLogout}>Log Out</button>}\n\n    </section>\n  );\n}\n\nexport default Auth;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState, loadCategories} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, loadAccounts} from '../../reducers/accounts/accounts-slice';\nimport { selectUserId } from '../../reducers/user/user-slice';\nimport Menu from '../../components/Navigation/Menu/Menu';\nimport Auth from '../../components/Auth/Auth';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n  }, [dispatch]);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        <Auth />\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n          userId={userId}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {clickButton, isButtonClick} from '../../reducers/transactions/transactions-slice'\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (clickAddButton) {\n      dispatch(clickButton());\n    }\n    // eslint-disable-next-line\n  }, [pathname]);\n\n  return null;\n}\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className={classes.SearchCloseBtn} onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction, loadTransactions} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    dispatch(deleteTransaction(id));\n    dispatch(loadTransactions());\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsDateGroup({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsDateGroup;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport classes from '../ListContainer.module.css';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, ...rest}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {TransitionGroup} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport {useSelector} from 'react-redux';\n\nimport {selectFilteredTransactions} from '../../../reducers/transactions/transactions-slice'\nimport {formatMonth} from \"../../../utils/utils\";\n\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\n\nfunction TransactionsListContainer() {\n  const transactions = useSelector(selectFilteredTransactions);\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n  // loadTransactions,\n  selectFilteredTransactions,\n  selectAllTransactionsState,\n  showButton,\n  loadTransactions\n} from '../../reducers/transactions/transactions-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\n// import { transactions } from '../../services/mocks/mocks';\n\n// import { addDoc, collection, onSnapshot, updateDoc, doc, deleteDoc, query, where, getDocs, serverTimestamp, orderBy } from \"@firebase/firestore\";\n// import db from \"../../services/firebase\";\n\nexport const TransactionsContext = React.createContext();\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const filteredTransactions = useSelector(selectFilteredTransactions);\n  const dispatch = useDispatch();\n  //\n  // let [loadedTransactions, setLoadedTransactions] = useState([{sum: \"Loading...\"}]);\n  // let [loadedCategories, setCategories] = useState([{sum: \"Loading...\"}]);\n  // const [transactions, setTransactions] = useState([{sum: \"Loading...\"}]);\n  // const [categories, setCategories] = useState([{sum: \"Loading...\"}]);\n  // const [newTransactions, setNewTransactions] = useState([{sum: \"Loading...\"}]);\n  // console.log(`🚀 ~ file: Transactions.js ~ line 32 ~ Transactions ~ newTransactions`, newTransactions);\n  // console.log(`🚀 ~ file: Transactions.js ~ line 31 ~ Transactions ~ categories`, categories);\n  // console.log(`🚀 ~ file: App.js ~ line 18 ~ App ~ transactions`, transactions);\n\n  // useEffect(() => {\n    // const collectionRef = collection(db, \"transactions\");\n    // const categoriesRef = collection(db, \"categories\");\n    // const q = query(collectionRef, orderBy(\"timestamp\", \"desc\"));\n\n    // const unSub = onSnapshot(q, (snapshot) => {\n    //   setTransactions(snapshot.docs.map((doc) => ({...doc.data(), id: doc.id})));\n    // })\n\n    // const categories = onSnapshot(categoriesRef, (snapshot) => {\n    //   setCategories(snapshot.docs.map((doc) => ({...doc.data(), id: doc.id})));\n    // })\n\n    // const q1 = query(collectionRef, where(\"categoryId\", \"==\", \"5CYunawkGh4ooEy5yis6\"));\n    // // const snapshot = await getDocs(q1);\n\n    // const categories1 = onSnapshot(q1, (snapshot) => {\n    //   setNewTransactions(snapshot.docs.map((doc) => ({...doc.data(), id: doc.id, category: {id: \"5CYunawkGh4ooEy5yis6\", title: \"Salary\"}})));\n    // })\n\n  //   let transactions = []\n  //   let categories = {}\n  //   const unSub = onSnapshot(collection(db, 'categories'), async (results) => {\n  //     results.forEach((doc) => {\n  //       categories = {...doc.data(), id: doc.id};\n  //       return categories;\n  //     });\n  //     onSnapshot(collection(db, 'transactions'), orderBy('timestamp', 'desc'), async (docSnaps) => {\n  //       docSnaps.forEach((doc) => {\n  //         transactions[doc.id] = {...doc.data(), id: doc.id};\n  //         const category = categories.id === doc.data().categoryId ? categories : null\n  //         transactions[doc.id].category = category;\n  //         return transactions;\n  //       });\n  //       return setLoadedTransactions(transactions);\n  //     });\n  //   })\n\n  //   return [unSub];\n  // }, []);\n\n  // const handleNew = async () => {\n  //   const sum = +prompt('Enter a sum');\n  //   const categoryId = +prompt('Enter a category id');\n\n  //   const collectionRef = collection(db, \"transactions\");\n  //   const payload = { sum, expense: true, categoryId, timestamp: serverTimestamp()};\n  //   await addDoc(collectionRef, payload);\n  // }\n\n  // const handleEdit = async (id) => {\n  //   const sum = +prompt('Enter a sum');\n  //   const categoryId = +prompt('Enter a category id');\n\n  //   const docRef = doc(db, \"transactions\", id);\n  //   const payload = { sum, expense: true, categoryId, timestamp: serverTimestamp()};\n\n  //   updateDoc(docRef, payload);\n  // }\n\n  // const handleDelete = async (id) => {\n  //   const docRef = doc(db, \"transactions\", id);\n\n  //   deleteDoc(docRef);\n  // }\n\n  // const handleQueryDelete = async () => {\n  //   const userInputSum = +prompt('Enter a userInputName');\n\n  //   const collectionRef = collection(db, \"transactions\");\n  //   const q = query(collectionRef, where(\"sum\", \"==\", userInputSum));\n  //   const snapshot = await getDocs(q);\n\n  //   const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n\n  //   results.forEach(async (result) => {\n  //     const docRef = doc(db, \"transactions\", result.id);\n  //     await deleteDoc(docRef);\n  //   })\n  // }\n  //\n\n  useEffect(() => {\n    dispatch(showButton());\n    dispatch(loadTransactions());\n    return () => {\n      dispatch(showButton());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {/* <ul style={{zIndex: 1000}}>\n        <button onClick={handleNew}>\n          New\n        </button>\n        <button onClick={handleQueryDelete}>\n          Multiplay delete\n        </button>\n          {transactions.map((transaction) => (\n            <li key={transaction.id}>\n              <button onClick={() => handleEdit(transaction.id)}>\n                Edit\n              </button>\n              <button onClick={() => handleDelete(transaction.id)}>\n                Delete\n              </button>\n              <p>{transaction.sum}</p>\n              <p>{transaction.categoryId}</p>\n            </li>\n          ))}\n      </ul> */}\n      <Balance transactions={allTransactions} />\n      <Search />\n      <TransactionsContext.Provider value={filteredTransactions}>\n        <TransactionsListContainer />\n      </TransactionsContext.Provider>\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction WidgetsMonthBalance({currentMonth, transactions}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0).toFixed(2);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0).toFixed(2);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2 >{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthBalance;\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsMonthExpensesIndicator({\n  excessPercent,\n  balanceOfCurrent,\n  totalPercent,\n  transactionsSum,\n  type,\n  title\n  }) {\n  return (\n    <>\n      <div className={classes.IndicatorWrapper}>\n\n        {/* Indicator */}\n        <div\n          className={classes.TotalExpenses}\n          style={{width: `${totalPercent}%`}}\n        ></div>\n        <div\n          className={classes.IndicatorTotal}\n          style={{width: `${100 - totalPercent}%`}}\n        ></div>\n        <div\n          className={\n              `${\n                type === 'incomes'\n                  ? classes.IndicatorIncomes\n                  : classes.IndicatorExpenses\n              }`\n            }\n          style={{width: `${excessPercent}%`}}\n        ></div>\n\n        {/* Contents */}\n        <p className={\n            title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalTitle\n              : classes.CategoryTitle\n          }>\n          {title}\n        </p>\n        <div className={classes.TotalSumWrapper}>\n          <p className={classes.TotalSumAverage}>{balanceOfCurrent}</p>\n          <p className={\n              title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalSum\n              : classes.Balance\n            }>\n            {type === 'incomes' ? '+' : '-'}\n            {transactionsSum}€\n          </p>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsMonthExpensesIndicator;\n","export const getSum = (transactions, type) => {\n    return transactions\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0).toFixed(2);\n}\n\nexport const getBalance = (category, type, transactions) => {\n  const balance = transactions\n    .filter((transaction) => transaction.category.title === category)\n    .map((transaction) => (type === 'incomes' ? !transaction.expense : transaction.expense) ? transaction = +transaction.sum : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    return balance.toFixed(2);\n}\n\nexport const MOTH_COUNT = 12;\n\nexport const getMonthAverageSum = (sum) => (sum / MOTH_COUNT).toFixed(2);\nexport const getTotalPercentPerMonth = (balance, sum) => (balance / getMonthAverageSum(sum) * 100).toFixed(2);\n","import React from 'react';\nimport Indicator from './Indicator/Indicator';\nimport classes from './Item.module.css';\nimport {getBalance} from '../utils';\nimport {formatMonth} from '../../../../utils/utils';\n\nfunction WidgetsMonthExpensesItem(\n    {\n      categories, excessPercent,\n      excessCategoryPercent, totalPercent,\n      totalCategoryPercent, balanceOfCurrent,\n      balanceCategoryOfCurrent, categoryPercent,\n      transactionsSum, type, title,\n      monthTransactions,\n      month\n    }\n  ) {\n\n  const daysAmount = new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n  const currentDay = new Date().getDate();\n  const currentMonth = formatMonth(new Date());\n  const currentDayStep = (currentDay / daysAmount * 100).toFixed(2);\n  const isShow = month === currentMonth;\n\n  return (\n    <section className={classes.MonthExpensesItem}>\n      {\n        isShow &&\n          <div className={classes.DayIndicatorWrapper}>\n            <div className={classes.DayIndicator} style={{left: `${currentDayStep}%`}}>\n              <p className={\n                `${classes.DayIndicatorDate} ${currentDay > 15 ? classes.Left : classes.Right}`\n                }>Today is  {currentMonth} {currentDay}th</p>\n            </div>\n          </div>\n      }\n      <Indicator\n        excessPercent={excessPercent}\n        balanceOfCurrent={balanceOfCurrent}\n        totalPercent={totalPercent}\n        transactionsSum={transactionsSum}\n        type={type}\n        title={title}\n      />\n\n      <ul className={classes.List}>\n        {categories.map((category) => (\n            <li className={classes.Wrapper} key={category}>\n              <Indicator\n                excessPercent={excessCategoryPercent(category, type)}\n                balanceOfCurrent={balanceCategoryOfCurrent(category, type)}\n                totalPercent={totalCategoryPercent(category, type)}\n                transactionsSum={getBalance(category, type, monthTransactions)}\n                type={type}\n                title={`${categoryPercent(getBalance(category, type, monthTransactions), transactionsSum)}%\n                  ${category}`}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthExpensesItem;\n","export const TRANSACTION_TYPE = {\n    EXPENSES: 'expenses',\n    INCOMES: 'incomes',\n  }\n","import {\n  getMonthAverageSum,\n  getSum,\n  getTotalPercentPerMonth,\n  getBalance,\n  MOTH_COUNT\n} from \"./utils\";\nimport {TRANSACTION_TYPE} from './const';\n\nexport class Statistics {\n  constructor(transactions, type, budget, monthTransactions, currentMonth, userId) {\n    this.transactions = transactions;\n    this.type = type;\n    this.budget = budget;\n    this.monthTransactions = monthTransactions;\n    this.currentMonth = currentMonth;\n    this.category = this.type[0].toUpperCase() + this.type.slice(1);\n    this.userId = userId;\n  }\n\n  _getExcessPercent = (balance, sum) => {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getExcessBudgetPercent = (balance, sum) => {\n    const percent = balance / sum * 100;\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getTotalPercent(balance, sum) {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  categories(type) {\n    return [...new Set(this.monthTransactions\n    .filter((transaction) => (type === TRANSACTION_TYPE.EXPENSES ? transaction.expense : !transaction.expense)\n      ? transaction.sum !== 0\n      : transaction = null)\n    .sort((a, b) => b.sum - a.sum)\n    .map(transaction => transaction.category.title))];\n  }\n\n  sum() {\n    return getSum(this.monthTransactions, this.type);\n  }\n\n  averageSum() {\n    return !this.budget[this.userId][this.currentMonth][this.type][this.category]\n    ? (getMonthAverageSum(getSum(this.transactions, this.type)))\n    : this.budget[this.userId][this.currentMonth][this.type][this.category];\n  }\n\n  excessPercent() {\n    return this.budget[this.userId][this.currentMonth][this.type][this.category]\n    ? this._getExcessBudgetPercent(getSum(this.monthTransactions, this.type), this.averageSum())\n    : this._getExcessPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  balanceOfCurrent() {\n    const averageValue =  (this.averageSum() - getSum(this.monthTransactions, this.type)).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${this.budget[this.userId][this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${this.budget[this.userId][this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`;\n  }\n\n  totalPercent() {\n    return this.budget[this.userId][this.currentMonth][this.type][this.category]\n    ? (((getSum(this.monthTransactions, this.type) / this.averageSum()) * 100) >= 100\n      ? 100\n      : (getSum(this.monthTransactions, this.type) / this.averageSum()) * 100)\n    : this._getTotalPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  percentCategory(balance, sum) {\n    let percent = (balance / sum * 100).toFixed(2);\n    const expensesPercent = percent > 99.9 ? 100 : percent;\n\n    return expensesPercent;\n  }\n\n  excessCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.userId][this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  balanceCategoryOfCurrent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const transactionsSumPerCategory = getBalance(category, type, this.monthTransactions)\n\n    const budget = this.budget[this.userId][this.currentMonth][this.type][category];\n\n    const averageValue = budget\n      ? (budget - transactionsSumPerCategory).toFixed(2)\n      : ((balancePerCategory / MOTH_COUNT) - transactionsSumPerCategory).toFixed(2);\n\n    return averageValue >= 0\n      ? `${averageValue}€ below ${budget ? \"budget\" : \"typical\"}`\n      : `${Math.abs(averageValue)}€ above ${budget ? \"budget\" : \"typical\"}`;\n  }\n\n  totalCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.userId][this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 0 : expensesPercent;\n  }\n}\n","import React from 'react';\n// import {useSelector} from 'react-redux';\nimport WidgetsMonthExpensesItem from './Items/Item'\nimport {formatMonth} from '../../../utils/utils'\nimport {Statistics} from './Statistics';\nimport {TRANSACTION_TYPE} from './const';\n// import {selectBudgetState} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsMonthExpenses({currentMonth, transactions, budget, userId}) {\n  // const budget = useSelector(selectBudgetState);\n\n  if (!budget) {\n    return (<p>Loading...</p>)\n  }\n\n  const monthTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const expenses = new Statistics(transactions, TRANSACTION_TYPE.EXPENSES, budget, monthTransactions, currentMonth, userId);\n  const incomes = new Statistics(transactions, TRANSACTION_TYPE.INCOMES, budget, monthTransactions, currentMonth, userId);\n\n  return (\n    <>\n      <WidgetsMonthExpensesItem\n        categories={expenses.categories(TRANSACTION_TYPE.EXPENSES)}\n\n        categoryPercent={expenses.percentCategory}\n        excessCategoryPercent={expenses.excessCategoryPercent}\n        balanceCategoryOfCurrent={expenses.balanceCategoryOfCurrent}\n        totalCategoryPercent={expenses.totalCategoryPercent}\n\n        excessPercent={expenses.excessPercent()}\n        balanceOfCurrent={expenses.balanceOfCurrent()}\n        totalPercent={expenses.totalPercent()}\n        transactionsSum={expenses.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.EXPENSES}\n        title={\"Expenses\"}\n        month={currentMonth}\n      />\n\n      <WidgetsMonthExpensesItem\n        categories={incomes.categories(TRANSACTION_TYPE.INCOMES)}\n\n        categoryPercent={incomes.percentCategory}\n        excessCategoryPercent={incomes.excessCategoryPercent}\n        balanceCategoryOfCurrent={incomes.balanceCategoryOfCurrent}\n        totalCategoryPercent={incomes.totalCategoryPercent}\n\n        excessPercent={incomes.excessPercent()}\n        balanceOfCurrent={incomes.balanceOfCurrent()}\n        totalPercent={incomes.totalPercent()}\n        transactionsSum={incomes.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.INCOMES}\n        title={\"Incomes\"}\n        month={currentMonth}\n      />\n    </>\n  )\n}\n\nexport default WidgetsMonthExpenses;\n","// export const MONTH_EXPENSES = {\n//   JANUARY: 'January',\n//   FEBRUARY: 'February',\n//   MARCH: 'March',\n//   APRIL: 'April',\n//   MAY: 'May',\n//   JUNE: 'June',\n//   JULY: 'July',\n//   AUGUST: 'August',\n//   SEPTEMBER: 'September',\n//   OCTOBER: 'October',\n//   NOVEMBER: 'November',\n//   DECEMBER: 'December'\n// }\n\nexport const MONTH_EXPENSES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'\n]\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsYearExpensesIndicator({month, getPercent, type}) {\n  let cls = [];\n\n  type === \"expenses\" ? cls.push(classes.Expenses) : cls.push(classes.Incomes);\n\n  return (\n    <div\n      className={cls.join(' ')}\n      id={month}\n      style={{height: `${getPercent(month, type)}%`}}\n    ></div>\n  )\n}\n\nexport default WidgetsYearExpensesIndicator;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateMonth} from '../../../reducers/transactions/transactions-slice';\n\nimport {formatMonth} from '../../../utils/utils';\nimport classes from './YearExpenses.module.css';\nimport {MONTH_EXPENSES} from './constant';\n\nimport Indicator from './Indicator/Indicator';\n\nfunction WidgetsYearExpenses({currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const maxMonthExpense = 3000; // temporary value\n\n  const getPercent = (month, type) => {\n    const incomes = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthExpense * 100);\n    let incomesPercent = percent >= 100 ? 100 : percent;\n\n    return incomesPercent === 0 ? 1 : incomesPercent;\n  }\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <div className={classes.Wrapper}>\n          {MONTH_EXPENSES.map((month) => (\n            <div\n              className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n              key={month}\n              id={month}\n              onClick={monthHandler}\n            >\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"incomes\"}\n              />\n\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"expenses\"}\n              />\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WidgetsYearExpenses;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction WidgetsBudgetItem({title, value, onChange, id}) {\n  const isHeader = title === \"Expenses\" || title === \"Incomes\"\n  return (\n    <div className={classes.Block}>\n      <p className={isHeader ? classes.Title : classes.SubTitle}>{title}</p>\n      {isHeader ? <p className={classes.Description}>Plan</p> : ''}\n      <input\n        className={classes.Input}\n        type=\"number\"\n        id={id}\n        name={title}\n        placeholder={\"0.00\"}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default WidgetsBudgetItem;\n","import {\n  addDoc, collection,\n  // updateDoc,\n  setDoc, doc, deleteDoc, getDocs\n} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst budgetRef = collection(db, \"budgets\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(budgetRef);\n  const results = snapshot.docs.map((doc) => ({[doc.id]: {...doc.data()}}));\n  return results;\n}\n\nexport const create = async (data) => {\n  const {sum, expense, date, categoryId, accountId} = data;\n  const payload = {sum, expense, date, categoryId, accountId};\n  await addDoc(budgetRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(budgetRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, budget) => {\n  const docRef = doc(db, \"budgets\", id);\n  const payload = {...budget};\n\n  setDoc(docRef, payload, {merge:true});\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {selectUserId} from '../user/user-slice';\n// import {useSelector} from 'react-redux';\nimport {\n  getAll,\n  // create, deleteId,\n  update\n} from '../../services/budget.service';\n\n// const getOverall = (budget, type, currentMonth) => {\n//     if (Object.keys(budget[currentMonth][type]).length === 0) {\n//       return;\n//     };\n//     const upperCase = type[0].toUpperCase() + type.slice(1);\n//     const balanceTotal = budget[currentMonth][type][upperCase];\n//     const balanceBudget = Object.values(budget[currentMonth][type]).reduce((a, b) => +a + +b);\n\n//     const overall = Math.abs((!balanceTotal ? 0 : balanceTotal) - balanceBudget);\n\n//     return overall;\n//   }\n\n//   const getBalance = (budget, type, currentMonth) => {\n//     if (Object.keys(budget[currentMonth][type]).length === 0) {\n//       return;\n//     };\n//     const upperCase = type[0].toUpperCase() + type.slice(1);\n//     const balanceTotal = budget[currentMonth][type][upperCase];\n\n//     return !balanceTotal ? 0 : balanceTotal;\n//   }\n\nexport const loadBudgets = createAsyncThunk(\n  'budgets/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n// const userId = 'userId';\n\nexport const postBudget = createAsyncThunk(\n  'budgets/addData',\n  async (action) => {\n    const type = action.type;\n    const name = action.name;\n    // const nameUpperCase = action.nameUpperCase;\n    const value = action.value;\n    const month = action.month;\n    // const budget = action.budget;\n    const id = action.userId;\n\n    const budget = {};\n    let currentUser = {...budget[id]};\n    const currentMonth = {...currentUser[month]};\n    const currentType = {...currentMonth[type]};\n    currentType[name] = value;\n    currentMonth[type] = currentType;\n\n    currentUser[month] = currentMonth;\n\n    // const overall = getOverall(budget, type, month);\n    // console.log(`🚀 ~ file: budget-slice.js ~ line 58 ~ overall`, overall);\n    // const balance = getBalance(budget, type, month);\n    // console.log(`🚀 ~ file: budget-slice.js ~ line 60 ~ balance`, balance);\n\n    // if (overall > balance) {\n    //   const currentMonth = {...currentUser[month]};\n    //   const currentType = {...currentMonth[type]};\n    //   currentType[nameUpperCase] = overall;\n    //   currentMonth[type] = currentType;\n\n    //   currentUser[month] = currentMonth;\n    // }\n\n    return await update(id, currentUser);\n  }\n)\n\nexport const budgetSlice = createSlice({\n  name: \"budget\",\n  initialState: {\n    budget: []\n  },\n  reducers: {\n    updateBudget: (state, action) => {\n      const type = action.payload.type;\n      const name = action.payload.name;\n      // const nameUpperCase = action.payload.nameUpperCase;\n      const value = action.payload.value;\n      const month = action.payload.month;\n      const id = 'userId';\n\n      const budget = {...state};\n      let currentUser = {...budget[id]};\n      const currentMonth = {...currentUser[month]};\n      const currentType = {...currentMonth[type]};\n      currentType[name] = value;\n      currentMonth[type] = currentType;\n\n      currentUser[month] = currentMonth;\n\n      // const overall = getOverall(budget, type, month);\n      // const balance = getBalance(budget, type, month);\n\n      // if (overall > balance) {\n      //   const currentMonth = {...currentUser[month]};\n      //   const currentType = {...currentMonth[type]};\n      //   currentType[nameUpperCase] = overall;\n      //   currentMonth[type] = currentType;\n\n      //   currentUser[month] = currentMonth;\n      // }\n      currentUser = {[id]: currentUser};\n      return {\n        ...currentUser,\n      };\n    },\n  },\n\n  extraReducers: {\n    [loadBudgets.pending]: (state) => {\n    },\n    [loadBudgets.fulfilled]: (state, action) => {\n      state.budget = action.payload;\n    },\n    [loadBudgets.rejected]: (state) => {\n    },\n\n    // [postBudget.pending]: (state) => {\n    //   state.isLoading = true;\n    //   state.hasError = false;\n    // },\n    // [postBudget.fulfilled]: (state, action) => {\n    //   state.isLoading = false;\n    //   state.hasError = false;\n    // },\n    // [postBudget.rejected]: (state) => {\n    //   state.isLoading = false;\n    //   state.hasError = true;\n    // },\n  },\n});\n\nexport const allBudgetState = (state) => state.budget.budget;\n\nexport const selectAllBudgetState = (state) => {\n  const allBudget = allBudgetState(state);\n  const userId = selectUserId(state);\n\n  return allBudget\n          .find((item) => item[userId])\n};\n\nexport const {\n  updateBudget,\n} = budgetSlice.actions;\n\nexport default budgetSlice.reducer;\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport classes from './Budget.module.css';\nimport WidgetsBudgetItem from './Items/Item';\nimport {\n  // selectBudgetState, updateBudget,\n  postBudget, loadBudgets,\n  // selectAllBudgetState\n} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsBudget({currentMonth, budget, userId}) {\n  // console.log(`🚀 ~ file: Budget.js ~ line 9 ~ WidgetsBudget ~ budget`, budget);\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  // const budget = useSelector(selectBudgetState);\n  // const userId = 'userId';\n\n  // useEffect(() => {\n    //   dispatch(loadBudgets());\n    //   // eslint-disable-next-line\n    // }, []);\n\n\n    if (!budget) {\n      return (<p>Loading...</p>)\n    }\n    // console.log(`🚀 ~ file: Budget.js ~ line 9 ~ WidgetsBudget ~ budget`, !Object.keys(budget[userId]).length);\n\n  // const isBudget = Object.keys(budget[userId]).length !== 0;\n\n  const onChange = ({target}) => {\n    const type = target.id;\n    const name = target.name;\n    const nameUpperCase = type[0].toUpperCase() + type.slice(1);\n    const value = target.value;\n    const month = currentMonth;\n\n    // dispatch(updateBudget({type, name, nameUpperCase, value, month, budget}));\n    dispatch(postBudget({type, name, nameUpperCase, value, month, userId}));\n    dispatch(loadBudgets());\n  }\n\n  return (\n    <section className={classes.BudgetWrapper}>\n      <p className={classes.Header}>Budget</p>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Expenses\"}\n          id={\"expenses\"}\n          value={budget[userId][currentMonth][\"expenses\"][\"Expenses\"] || ''}\n          onChange={onChange}\n        />\n\n        {categories.map((category) => (\n          <WidgetsBudgetItem\n            key={category.id}\n            title={category.title}\n            id={\"expenses\"}\n            value={budget[userId][currentMonth][\"expenses\"][category.title] || ''}\n            onChange={onChange}\n          />\n          ))\n        }\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Incomes\"}\n          id={\"incomes\"}\n          value={budget[userId][currentMonth][\"incomes\"][\"Incomes\"]  || ''}\n          onChange={onChange}\n        />\n\n        {categories.map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              id={\"incomes\"}\n              value={budget[userId][currentMonth][\"incomes\"][category.title]  || ''}\n              onChange={onChange}\n            />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default WidgetsBudget;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport WidgetsMonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport WidgetsMonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport WidgetsYearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport WidgetsBudget from '../../components/Widgets/Budget/Budget';\nimport {selectUserId} from '../../reducers/user/user-slice';\nimport classes from './Statistics.module.css';\nimport {currentMonth} from '../../reducers/transactions/transactions-slice';\nimport {\n  loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice';\nimport {selectAllBudgetState, loadBudgets} from '../../reducers/budget/budget-slice';\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const month = useSelector(currentMonth);\n  const budget = useSelector(selectAllBudgetState);\n  // console.log(`🚀 ~ file: Statistics.js ~ line 19 ~ Statistics ~ budget`, budget);\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n  const newBudget = budget && budget;\n  // console.log(`🚀 ~ file: Statistics.js ~ line 23 ~ Statistics ~ newBudget`, {...newBudget});\n\n  useEffect(() => {\n    dispatch(loadBudgets());\n    dispatch(loadTransactions());\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  return (\n    <section className={classes.Statistics}>\n      <WidgetsMonthBalance currentMonth={month} transactions={allTransactions} />\n      <WidgetsYearExpenses currentMonth={month} transactions={allTransactions} />\n      <WidgetsMonthExpenses currentMonth={month} transactions={allTransactions} budget={newBudget} userId={userId} />\n      <WidgetsBudget currentMonth={month} budget={newBudget} userId={userId} />\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction SettingsItem({id, onChange, onClickSubmitButton, value, submitTitle, onClickButton, placeholder, onClickDeleteButton}) {\n  return (\n    <form\n      className={classes.ItemWrapper}\n      onSubmit={onClickSubmitButton}\n    >\n      <input\n        className={classes.Input}\n        type=\"text\"\n        name={value}\n        value={value}\n        id={id}\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n      <div className={classes.ButtonWrapper}>\n        <button\n          className={classes.Button}\n          id={id}\n          type=\"submit\"\n          onClick={onClickButton}\n          disabled={!value}\n        >\n          {submitTitle}\n        </button>\n        {onClickDeleteButton && <button\n          id={id}\n          className={classes.Button}\n          type=\"button\"\n          onClick={onClickDeleteButton}\n        >\n          Delete\n        </button>}\n      </div>\n    </form>\n  )\n}\n\nexport default SettingsItem;\n","import React from 'react';\nimport classes from '../Settings.module.css';\nimport SettingsItem from '../Items/Item';\n\nfunction SettingsBlock({\n  onClickSubmitButton, onClickCreateButton,\n  value, onChange, onClickDeleteButton,\n  items, title, placeholder, onClickEditButton\n}) {\n  return (\n    <section className={classes.Wrapper}>\n      <div className={classes.Content}>\n        <p className={classes.Header}>{title}</p>\n        <SettingsItem\n          onClickSubmitButton={onClickSubmitButton}\n          onClickButton={onClickCreateButton}\n          value={value}\n          submitTitle={\"Create\"}\n          onChange={onChange}\n          placeholder={placeholder}\n        />\n\n        {items.map((category) => (\n          <SettingsItem\n            onClickSubmitButton={onClickSubmitButton}\n            value={category.title}\n            submitTitle={\"Edit\"}\n            onClickButton={onClickEditButton}\n            onChange={onChange}\n            id={category.id}\n            key={category.id}\n            onClickDeleteButton={onClickDeleteButton}\n          />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default SettingsBlock;\n","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState, deleteCategory, postCategory, loadCategories, updateCategory} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, updateAccount, deleteAccount, postAccount, loadAccounts} from '../../reducers/accounts/accounts-slice';\nimport { selectUserId } from '../../reducers/user/user-slice';\nimport SettingsBlock from './Blocks/Block';\n\nfunction Settings() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const accounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n\n  const [inputCategory, setInputCategory] = useState('');\n  const [inputAccount, setInputAccount] = useState('');\n\n  const onChangeCategory = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(updateCategory({id, title}));\n      dispatch(loadCategories());\n    } else {\n      setInputCategory(title);\n    }\n  }\n\n  const onChangeAccount = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(updateAccount({id, title}));\n      dispatch(loadAccounts());\n    } else {\n      setInputAccount(title);\n    }\n  }\n\n  const onClickCreateCategoryButton = () => {\n    dispatch(postCategory({title: inputCategory, userId}));\n    setInputCategory('');\n    dispatch(loadCategories());\n  };\n\n  const onClickCreateAccountButton = () => {\n    dispatch(postAccount({title: inputAccount, userId}));\n    setInputAccount('');\n    dispatch(loadAccounts());\n  };\n\n  const onClickEditCategoryButton = ({target}) => {\n    // inputCategory !== '' && dispatch(updateCategory(target.id, inputCategory));\n    // setInputCategory('');\n    dispatch(loadCategories());\n  };\n\n  const onClickEditAccountButton = ({target}) => {\n    // dispatch(updateCategory(inputCategory));\n    // setInputCategory('');\n    // dispatch(loadCategories());\n  };\n\n  function onClickDeleteCategoryButton({target}) {\n    dispatch(deleteCategory(target.id));\n    dispatch(loadCategories());\n  };\n\n  function onClickDeleteAccountButton({target}) {\n    dispatch(deleteAccount(target.id));\n    dispatch(loadAccounts());\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateCategoryButton}\n        onClickDeleteButton={onClickDeleteCategoryButton}\n        onClickEditButton={onClickEditCategoryButton}\n        value={inputCategory}\n        submitTitle={\"Create\"}\n        onChange={onChangeCategory}\n        items={categories}\n        title={\"Categories\"}\n        placeholder={\"Type the new name for the category\"}\n      />\n\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateAccountButton}\n        onClickDeleteButton={onClickDeleteAccountButton}\n        onClickEditButton={onClickEditAccountButton}\n        value={inputAccount}\n        submitTitle={\"Create\"}\n        onChange={onChangeAccount}\n        items={accounts}\n        title={\"Accounts\"}\n        placeholder={\"Type the new name for the account\"}\n      />\n    </>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport SettingsScreen from '../../components/Settings/Settings'\nimport classes from './Settings.module.css';\n\nfunction Settings() {\n  return (\n    <section className={classes.Settings}>\n      <SettingsScreen />\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\nimport ScrollToTop from './hoc/ScrollToTop/ScrollToTop';\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\nfunction App() {\n  return (\n    <Layout>\n      <ScrollToTop />\n      <Routes>\n        <Route path=\"/\" element={<Transactions />} />\n        <Route path=\"/statistics\" element={<Statistics />} />\n        <Route path=\"/settings\" element={<Settings />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\nimport budgetReducer from '../reducers/budget/budget-slice';\nimport userReducer from '../reducers/user/user-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n    budget: budgetReducer,\n    user: userReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}