{"version":3,"sources":["components/Transactions/List/ListContainer.module.css","components/Widgets/MonthExpenses/Items/Indicator/Indicator.module.css","components/Widgets/MonthExpenses/Items/Item.module.css","components/Balance/Balance.module.css","components/Navigation/Menu/Menu.module.css","components/Transactions/CreateForm/Form.module.css","components/Auth/Auth.module.css","components/Widgets/MonthBalance/MonthBalance.module.css","components/Widgets/Budget/Budget.module.css","components/Widgets/Budget/Items/Item.module.css","components/Settings/Items/Item.module.css","components/UI/Input/Input.module.css","components/Widgets/YearExpenses/YearExpenses.module.css","components/Settings/Settings.module.css","hoc/Layout/Layout.module.css","components/UI/Button/Button.module.css","components/Search/Search.module.css","components/Widgets/YearExpenses/Indicator/Indicator.module.css","components/UI/Select/Select.module.css","containers/Statistics/Statistics.module.css","containers/Settings/Settings.module.css","reducers/user/user-slice.js","services/firebase.js","services/category.service.js","reducers/categories/categories-slice.js","services/account.service.js","reducers/accounts/accounts-slice.js","services/transaction.service.js","reducers/search/search-slice.js","utils/utils.js","reducers/transactions/transactions-slice.js","components/UI/Input/Input.js","components/UI/Select/Select.js","components/UI/Button/Button.js","components/Transactions/CreateForm/utils.js","components/Transactions/CreateForm/Form.js","components/Navigation/Menu/Menu.js","components/Auth/Auth.js","hoc/Layout/Layout.js","hoc/ScrollToTop/ScrollToTop.js","components/Search/Search.js","components/Balance/Balance.js","components/Transactions/List/Items/Item.js","components/Transactions/List/Items/DateGroup.js","components/Transactions/List/Items/DateHeader.js","components/Transactions/List/Items/DateGroupWrapper.js","components/Transactions/List/Items/MonthGroup.js","components/Transactions/List/ListContainer.js","containers/Transactions/Transactions.js","components/Widgets/MonthBalance/MonthBalance.js","components/Widgets/MonthExpenses/Items/Indicator/Indicator.js","components/Widgets/MonthExpenses/utils.js","components/Widgets/MonthExpenses/Items/Item.js","components/Widgets/MonthExpenses/const.js","components/Widgets/MonthExpenses/Statistics.js","components/Widgets/MonthExpenses/MonthExpenses.js","components/Widgets/YearExpenses/constant.js","components/Widgets/YearExpenses/Indicator/Indicator.js","components/Widgets/YearExpenses/YearExpenses.js","services/budget.service.js","reducers/budget/budget-slice.js","components/Widgets/Budget/Items/Item.js","components/Widgets/Budget/Budget.js","containers/Statistics/Statistics.js","components/Settings/Items/Item.js","components/Settings/Blocks/Block.js","components/Settings/Settings.js","containers/Settings/Settings.js","App.js","store/store.js","index.js"],"names":["module","exports","userSlice","createSlice","name","initialState","userId","reducers","setUserId","state","action","payload","extraReducers","selectUserId","user","actions","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","categoriesRef","collection","db","getAll","a","getDocs","snapshot","results","docs","map","doc","data","id","create","category","addDoc","deleteId","docRef","deleteDoc","update","setDoc","merge","loadCategories","createAsyncThunk","postCategory","newCategory","updateCategory","deleteCategory","categoryId","categoriesSlice","allCategories","title","isLoading","hasError","isPending","isFailedToCreate","pending","fulfilled","rejected","selectAllCategoriesState","categories","allCategoriesState","filter","transaction","addCategory","editCategory","createCategory","accountsRef","account","updateDoc","loadAccounts","postAccount","newAccount","updateAccount","deleteAccount","accountId","accountsSlice","allAccounts","balance","startBalance","archive","selectAllAccountsState","accounts","allAccountsState","addAccount","editAccount","createAccount","transactionsRef","snapshotTransactions","snapshotCategories","snapshotAccounts","transactions","find","sum","expense","date","searchTermSlice","setSearchTerm","clearSearchTerm","selectSearchTerm","searchTerm","formatDay","dateString","Date","toLocaleString","day","formatWeekday","weekday","formatMonthYear","month","year","formatMonth","loadTransactions","postTransaction","deleteTransaction","transactionId","transactionsSlice","allTransactions","newTransaction","toISOString","slice","currentMonth","currentYear","isButtonClick","isButtonShow","setUserInput","value","setCategory","setAccount","resetState","updateMonth","updateYear","showButton","clickButton","showDelete","selectNewTransactionState","selectAllTransactionsState","allTransactionsState","selectFilteredTransactions","toLowerCase","includes","sort","b","getTime","setTransactionId","addTransaction","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","classes","htmlFor","Math","random","push","InputTypeCheckbox","InputType","invalid","className","join","placeholder","onChange","label","errorMessage","Select","hidden","defaultOption","options","option","Button","onClick","disabled","children","createControl","config","validation","validateForm","formControls","isFormValid","control","hasOwnProperty","updateFormControls","isValid","required","trim","validate","createFormControls","TransactionCreateForm","onClickAddBtn","newTransactionState","useSelector","dispatch","useDispatch","useState","setState","useEffect","onChangeUserInput","onChangeSelectHandler","selector","e","getId","target","idItem","item","nodeRef","React","useRef","form","dialogWrapper","onSubmit","preventDefault","CSSTransition","in","timeout","classNames","enterActive","addFormEnterActive","exitActive","addFormExitActive","unmountOnExit","dialog","ref","event","dialogType","Menu","clickAddButton","showAddButton","classesAddBtn","menuAddBtn","isActiveLink","isActive","active","Form","menu","wrapper","addBtnEnterActive","enterDone","addBtnEnterDone","to","Auth","loading","setLoading","currentUser","setCurrentUser","onAuthStateChanged","uid","useAuth","emailRef","passwordRef","handleSignup","email","current","password","createUserWithEmailAndPassword","then","December","expenses","incomes","catch","err","alert","handleLogin","signInWithEmailAndPassword","handleLogout","signOut","Main","Header","Fields","Layout","LayoutContainer","LayoutMain","ScrollToTop","pathname","useLocation","window","scrollTo","Search","userInput","length","SearchCloseBtn","Balance","BalanceContainer","balanceContainer","setBalanceContainer","setBalance","listenScrollEvent","scrollY","BalanceContainerScroll","BalanceScroll","addEventListener","removeEventListener","sumExpenses","reduce","sumIncomes","currentBalance","round","BalanceAmount","TransactionsItem","categoryTitle","accountTitle","rest","showDeleteBtn","setShowDeleteBtn","handleDeleteButtonToggle","enter","exit","exitDone","onMouseOver","onMouseOut","TransactionsItemWrapper","TransactionsItemAccount","TransactionsItemEdit","TransactionsHidden","TransactionsItemsDateGroup","transactionsDay","TransitionGroup","component","TransactionsDateHeader","expenseBalance","acc","incomeBalance","overallBalance","TransactionsHeader","TransactionsDateContent","TransactionsDateWrapper","TransactionsItemsDateGroupWrapper","key","TransactionsItemsMonthGroup","transactionsDates","TransactionsMonth","transactionDate","TransactionsListContainer","months","Set","Transactions","WidgetsMonthBalance","filteredTransactions","toFixed","MonthBalance","List","Wrapper","WidgetsMonthExpensesIndicator","excessPercent","balanceOfCurrent","totalPercent","transactionsSum","IndicatorWrapper","TotalExpenses","style","width","IndicatorTotal","IndicatorIncomes","IndicatorExpenses","TotalTitle","CategoryTitle","TotalSumWrapper","TotalSumAverage","TotalSum","getSum","getBalance","getMonthAverageSum","getTotalPercentPerMonth","WidgetsMonthExpensesItem","excessCategoryPercent","totalCategoryPercent","balanceCategoryOfCurrent","categoryPercent","monthTransactions","daysAmount","getFullYear","getMonth","getDate","currentDay","currentDayStep","isShow","MonthExpensesItem","DayIndicatorWrapper","DayIndicator","left","DayIndicatorDate","Left","Right","Indicator","TRANSACTION_TYPE","Statistics","budget","_getExcessPercent","percent","_getExcessBudgetPercent","balancePerCategory","transactionsSumPerCategory","averageValue","abs","expensesPercent","this","toUpperCase","averageSum","_getTotalPercent","WidgetsMonthExpenses","percentCategory","MONTH_EXPENSES","WidgetsYearExpensesIndicator","getPercent","Expenses","Incomes","height","WidgetsYearExpenses","incomesPercent","monthHandler","YearExpenses","Active","budgetRef","loadBudgets","postBudget","updatedBudget","budgetSlice","budgetUpdated","updateBudget","nameUpperCase","currentType","overall","Object","keys","upperCase","balanceTotal","balanceBudget","values","getOverall","selectAllBudgetState","selectUpdatedBudgetState","WidgetsBudgetItem","isHeader","Block","Title","SubTitle","Description","InputDisabled","step","WidgetsBudget","prevBudget","JSON","stringify","usePrevious","onInputChange","onEditClick","BudgetWrapper","HeaderWrapper","Content","newBudget","newUpdatedBudget","SettingsItem","onClickSubmitButton","submitTitle","onClickButton","onClickDeleteButton","transactionType","onChangeType","ItemWrapper","Type","checked","ButtonWrapper","SettingsBlock","onClickCreateButton","items","onClickEditButton","Settings","inputCategory","setInputCategory","setInputType","inputAccount","setInputAccount","undefined","App","path","element","configureStore","reducer","transactionsReducer","categoriesReducer","accountsReducer","searchTermReducer","budgetReducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b940e544.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionsMonth\":\"ListContainer_TransactionsMonth__VTwQk\",\"TransactionsHeader\":\"ListContainer_TransactionsHeader__1Nwh7\",\"TransactionsDateContent\":\"ListContainer_TransactionsDateContent__3_Wg_\",\"TransactionsDateWrapper\":\"ListContainer_TransactionsDateWrapper__3_hm9\",\"TransactionsItem\":\"ListContainer_TransactionsItem__2Ekf6\",\"TransactionsItemAccount\":\"ListContainer_TransactionsItemAccount__2gWdH\",\"TransactionsItemEdit\":\"ListContainer_TransactionsItemEdit__1Uj3y\",\"TransactionsItemClose\":\"ListContainer_TransactionsItemClose__112_0\",\"TransactionsItemOnClick\":\"ListContainer_TransactionsItemOnClick__20z0S\",\"TransactionsItemWrapper\":\"ListContainer_TransactionsItemWrapper__A5w7n\",\"TransactionsHidden\":\"ListContainer_TransactionsHidden__32C68\",\"enter\":\"ListContainer_enter__fpkFx\",\"enterActive\":\"ListContainer_enterActive__16sdh\",\"exit\":\"ListContainer_exit__1PACa\",\"exitActive\":\"ListContainer_exitActive__Mnq44\",\"exitDone\":\"ListContainer_exitDone__32oW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IndicatorWrapper\":\"Indicator_IndicatorWrapper__3q_mt\",\"IndicatorTotal\":\"Indicator_IndicatorTotal__1Y7TP\",\"IndicatorExpenses\":\"Indicator_IndicatorExpenses__12-8R\",\"IndicatorIncomes\":\"Indicator_IndicatorIncomes__9rMe6\",\"Expense\":\"Indicator_Expense__22TSw\",\"TotalExpenses\":\"Indicator_TotalExpenses__1Dw4H\",\"TotalTitle\":\"Indicator_TotalTitle__xlfB6\",\"TotalSumWrapper\":\"Indicator_TotalSumWrapper__mgUZc\",\"TotalSumAverage\":\"Indicator_TotalSumAverage__PGk5u\",\"TotalSum\":\"Indicator_TotalSum__16pCE\",\"Balance\":\"Indicator_Balance__3Hw51\",\"CategoryTitle\":\"Indicator_CategoryTitle__1lw9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthExpensesItem\":\"Item_MonthExpensesItem__YjU-v\",\"IndicatorWrapper\":\"Item_IndicatorWrapper__2mppw\",\"Indicator\":\"Item_Indicator__1tgmw\",\"DayIndicatorWrapper\":\"Item_DayIndicatorWrapper__1EIsj\",\"DayIndicator\":\"Item_DayIndicator__13Cg7\",\"DayIndicatorDate\":\"Item_DayIndicatorDate__3kWwy\",\"Right\":\"Item_Right__2f5Fi\",\"Left\":\"Item_Left__2pD6l\",\"List\":\"Item_List__3zSXB\",\"Wrapper\":\"Item_Wrapper__2aB6H\",\"CategoryTitle\":\"Item_CategoryTitle__1JliW\",\"Balance\":\"Item_Balance__1vv4s\",\"IndicatorTotal\":\"Item_IndicatorTotal__26IWg\",\"IndicatorExpenses\":\"Item_IndicatorExpenses__2n_83\",\"IndicatorIncomes\":\"Item_IndicatorIncomes__1nQzk\",\"TotalTitle\":\"Item_TotalTitle__akr9c\",\"TotalSumWrapper\":\"Item_TotalSumWrapper__2_RW5\",\"TotalSumAverage\":\"Item_TotalSumAverage__1WQ-t\",\"TotalSum\":\"Item_TotalSum__37VIa\",\"AverageWrapper\":\"Item_AverageWrapper__T8i9X\",\"TotalExpenses\":\"Item_TotalExpenses__de84n\",\"Expense\":\"Item_Expense__1uT9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Balance\":\"Balance_Balance__23Avx\",\"BalanceScroll\":\"Balance_BalanceScroll__ah868\",\"BalanceContainer\":\"Balance_BalanceContainer__j86A2\",\"BalanceContainerScroll\":\"Balance_BalanceContainerScroll__2NjjY\",\"BalanceAmount\":\"Balance_BalanceAmount__2Q1J2\",\"BalanceWrapper\":\"Balance_BalanceWrapper__176bo\",\"BalanceIncome\":\"Balance_BalanceIncome__2vRM2\",\"BalanceExpense\":\"Balance_BalanceExpense__2eTJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__g1b0Y\",\"wrapper\":\"Menu_wrapper__2i6Q0\",\"active\":\"Menu_active__1T3aC\",\"menuAddBtn\":\"Menu_menuAddBtn__1bjf1\",\"addBtnEnterActive\":\"Menu_addBtnEnterActive__2oVJa\",\"addBtnEnterDone\":\"Menu_addBtnEnterDone__1MBUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2wVGg\",\"dialogWrapper\":\"Form_dialogWrapper__Asoa1\",\"dialog\":\"Form_dialog__3K11j\",\"dialogTypeWrapper\":\"Form_dialogTypeWrapper__3UED0\",\"dialogType\":\"Form_dialogType___T7YX\",\"addFormEnterActive\":\"Form_addFormEnterActive__3ky2w\",\"showForm\":\"Form_showForm__3Ut7i\",\"addFormExitActive\":\"Form_addFormExitActive__3REkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Auth_Main__11kSo\",\"Header\":\"Auth_Header__1VwbD\",\"Fields\":\"Auth_Fields__3NQ_O\",\"Button\":\"Auth_Button__tzrL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBalance\":\"MonthBalance_MonthBalance__3PLio\",\"List\":\"MonthBalance_List__XbgNn\",\"Wrapper\":\"MonthBalance_Wrapper__3s-LA\",\"Balance\":\"MonthBalance_Balance__KixWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Budget_BudgetWrapper__2eRq_\",\"HeaderWrapper\":\"Budget_HeaderWrapper__2QyV8\",\"Header\":\"Budget_Header__xvghW\",\"Content\":\"Budget_Content__11etz\",\"Button\":\"Budget_Button__JsHlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BudgetWrapper\":\"Item_BudgetWrapper__3V_CQ\",\"Header\":\"Item_Header__3N3pa\",\"Block\":\"Item_Block__2m7Qg\",\"Description\":\"Item_Description__2TYyv\",\"Title\":\"Item_Title__3RCdl\",\"SubTitle\":\"Item_SubTitle__3sJSk\",\"Input\":\"Item_Input__2vqP4\",\"InputDisabled\":\"Item_InputDisabled__fpU2l\",\"Button\":\"Item_Button__1Bpmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemWrapper\":\"Item_ItemWrapper__36lCx\",\"Input\":\"Item_Input__2LKUT\",\"ButtonWrapper\":\"Item_ButtonWrapper__275w9\",\"Button\":\"Item_Button__1YbUK\",\"Type\":\"Item_Type__1KQTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"InputType\":\"Input_InputType__20xp5\",\"InputTypeCheckbox\":\"Input_InputTypeCheckbox__2WwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YearExpenses\":\"YearExpenses_YearExpenses__1Jmci\",\"Wrapper\":\"YearExpenses_Wrapper__qpM9Y\",\"List\":\"YearExpenses_List__2q1Fm\",\"Expenses\":\"YearExpenses_Expenses__3SbWC\",\"Incomes\":\"YearExpenses_Incomes__2hXLw\",\"Active\":\"YearExpenses_Active__2DlKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Settings_Wrapper__S2_BS\",\"Header\":\"Settings_Header__1GgmN\",\"Content\":\"Settings_Content__2vl7u\",\"ItemWrapper\":\"Settings_ItemWrapper__1JUDg\",\"Input\":\"Settings_Input__nrbt0\",\"ButtonWrapper\":\"Settings_ButtonWrapper__2lcW-\",\"Button\":\"Settings_Button__1aSBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LayoutContainer\":\"Layout_LayoutContainer__19LML\",\"LayoutMain\":\"Layout_LayoutMain__2hglt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__2SQmI\",\"SearchCloseBtn\":\"Search_SearchCloseBtn__dEG1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Incomes\":\"Indicator_Incomes__3bIeI\",\"Expenses\":\"Indicator_Expenses__1JIA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2qylT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__1Ncpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__1zu8U\"};","import {createSlice} from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userId: '',\n  },\n  reducers: {\n    setUserId: (state, action) => {\n      return {\n        userId: action.payload,\n      };\n    },\n  },\n  extraReducers: {},\n});\n\nexport const selectUserId = (state) => state.user.userId;\n\nexport const {setUserId} = userSlice.actions;\nexport default userSlice.reducer;\n","import {useEffect, useState} from \"react\";\nimport {useDispatch} from 'react-redux';\nimport {setUserId} from \"../reducers/user/user-slice\";\n\nimport {initializeApp} from \"firebase/app\";\nimport {setDoc, doc, getFirestore} from \"@firebase/firestore\";\nimport {getAuth, createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut} from 'firebase/auth';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA-jcEb53c4muML3hfX3HA7WYvqCSwBNNY\",\n  authDomain: \"expense-tracker-4e13a.firebaseapp.com\",\n  projectId: \"expense-tracker-4e13a\",\n  storageBucket: \"expense-tracker-4e13a.appspot.com\",\n  messagingSenderId: \"65016479636\",\n  appId: \"1:65016479636:web:8b455fad8e8c1b1c791981\"\n};\n\n// Initialize Firebase\n// eslint-disable-next-line\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\n\nexport function singUp(email, password) {\n    createUserWithEmailAndPassword(auth, email, password)\n    .then(data => {\n      const id = data.user.uid;\n      const docRef = doc(getFirestore(), \"budgets\", id);\n      const payload = {December: {expenses:{}, incomes:{}}};\n\n      setDoc(docRef, payload, {merge:true});\n    })\n    .catch(err => {\n      alert(err);\n    })\n}\n\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n\n//Custom Hook\nexport function useAuth() {\n  const [currentUser, setCurrentUser] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n      if (user) {\n      dispatch(setUserId(user.uid));\n    } else {\n      dispatch(setUserId(null));\n    }\n      setCurrentUser(user)\n    });\n    return unsub;\n// eslint-disable-next-line\n  }, [])\n\n  return currentUser;\n}\n\nexport default getFirestore();\n","import {addDoc, collection, setDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst categoriesRef = collection(db, \"categories\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(categoriesRef);\n  const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  return results;\n}\n\nexport const create = async (category) => {\n  const payload = {...category};\n  await addDoc(categoriesRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(categoriesRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, data) => {\n  // const id = data.id\n  const docRef = doc(db, \"categories\", id);\n  const payload = {...data};\n\n  setDoc(docRef, payload, {merge:true});\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport {getAll, create, deleteId, update} from '../../services/category.service';\nimport {selectUserId} from '../user/user-slice';\n\nexport const loadCategories = createAsyncThunk(\n  'categories/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postCategory = createAsyncThunk(\n  'categories/addData',\n  async (newCategory) => {\n    return await create(newCategory);\n  }\n)\n\nexport const updateCategory = createAsyncThunk(\n  'categories/updateData',\n  async (data) => {\n    const {id} = data;\n    return await update(id, data);\n  }\n)\n\nexport const deleteCategory = createAsyncThunk(\n  'categories/deleteData',\n  async (categoryId) => {\n    return await deleteId(categoryId);\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    allCategories: [],\n    newCategory: {\n      title: ``,\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {},\n  extraReducers: {\n    [loadCategories.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadCategories.fulfilled]: (state, action) => {\n      state.allCategories = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadCategories.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const allCategoriesState = (state) => state.categories.allCategories;\nexport const selectNewCategoryState = (state) => state.categories.newCategory;\nexport const isLoading = (state) => state.categories.isLoading;\nexport const isPending = (state) => state.categories.isPending;\n\nexport const selectAllCategoriesState = (state) => {\n  const allCategories = allCategoriesState(state);\n  const userId = selectUserId(state);\n\n  return allCategories\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const {addCategory, editCategory, createCategory} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n","import {addDoc, collection, updateDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst accountsRef = collection(db, \"accounts\");\n\nexport const getAll = async () => {\n  const snapshot = await getDocs(accountsRef);\n  const results = snapshot.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  return results;\n}\n\nexport const create = async (account) => {\n  const payload = {...account};\n  await addDoc(accountsRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(accountsRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title, userId) => {\n  const docRef = doc(accountsRef, id);\n  const payload = {title, userId};\n\n  updateDoc(docRef, payload);\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\n\nimport {getAll, create, update, deleteId} from '../../services/account.service';\nimport {selectUserId} from '../user/user-slice';\n\nexport const loadAccounts = createAsyncThunk(\n  'accounts/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postAccount = createAsyncThunk(\n  'accounts/addData',\n  async (newAccount) => {\n    return await create(newAccount);\n  }\n)\n\nexport const updateAccount = createAsyncThunk(\n  'accounts/updateData',\n  async ({id, title, userId}) => {\n    return await update(id, title, userId);\n  }\n)\n\nexport const deleteAccount = createAsyncThunk(\n  'accounts/deleteData',\n  async (accountId) => {\n    return await deleteId(accountId);\n  }\n)\n\nexport const accountsSlice = createSlice({\n  name: \"accounts\",\n  initialState: {\n    allAccounts: [],\n    newAccount: {\n      title: ``,\n      balance: 0,\n      startBalance: 0,\n      archive: false\n    },\n    isLoading: false,\n    hasError: false,\n    isPending: false,\n    isFailedToCreate: false,\n  },\n  reducers: {},\n  extraReducers: {\n    [loadAccounts.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadAccounts.fulfilled]: (state, action) => {\n      state.allAccounts = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [loadAccounts.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nexport const allAccountsState = (state) => state.accounts.allAccounts;\nexport const selectNewAccountsState = (state) => state.accounts.newAccount;\nexport const isLoading = (state) => state.accounts.isLoading;\nexport const isPending = (state) => state.accounts.isPending;\n\nexport const selectAllAccountsState = (state) => {\n  const allAccounts = allAccountsState(state);\n  const userId = selectUserId(state);\n\n  return allAccounts\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const {addAccount, editAccount, createAccount} = accountsSlice.actions;\nexport default accountsSlice.reducer;\n","import {addDoc, collection, updateDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst transactionsRef = collection(db, \"transactions\");\nconst categoriesRef = collection(db, \"categories\");\nconst accountsRef = collection(db, \"accounts\");\n\nexport const getAll = async () => {\n  const snapshotTransactions = await getDocs(transactionsRef);\n  const snapshotCategories = await getDocs(categoriesRef);\n  const snapshotAccounts = await getDocs(accountsRef);\n\n  let transactions = {};\n  const categories = snapshotCategories.docs.map((doc) => ({...doc.data(), id: doc.id}));\n  const accounts = snapshotAccounts.docs.map((doc) => ({...doc.data(), id: doc.id}));\n\n  transactions = snapshotTransactions.docs.map((doc) => {\n    transactions = {id: doc.id, ...doc.data()}\n    transactions.category = categories.find((category) => category.id === transactions.categoryId);\n    transactions.account = accounts.find((account) => account.id === transactions.accountId);\n    return transactions;\n  });\n  return transactions;\n}\n\nexport const create = async (data) => {\n  const {sum, expense, date, categoryId, accountId, userId} = data;\n  const payload = {sum, expense, date, categoryId, accountId, userId};\n  await addDoc(transactionsRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(transactionsRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, title) => {\n  const docRef = doc(transactionsRef, id);\n  const payload = {title};\n\n  updateDoc(docRef, payload);\n}\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const searchTermSlice = createSlice({\n  name: \"searchTerm\",\n  initialState: '',\n  reducers: {\n    setSearchTerm: (state, action) => {\n      return action.payload;\n      },\n    clearSearchTerm: (state, action) => {\n      return '';\n      }\n    },\n});\n\nexport const selectSearchTerm = (state) => state.searchTerm;\n\nexport const {\n  setSearchTerm,\n  clearSearchTerm\n} = searchTermSlice.actions;\nexport default searchTermSlice.reducer;\n","export function formatDay (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    day: `2-digit`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatWeekday (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    weekday: `long`,\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`,\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonth (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `long`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatYear (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    year: `numeric`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n\nexport function formatMonthShort (dateString) {\n  const date = new Date(dateString);\n  const options = {\n    month: `short`\n  };\n  return date.toLocaleString(`en-EN`, options);\n};\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getAll, create, deleteId} from '../../services/transaction.service';\nimport {selectSearchTerm} from '../search/search-slice';\nimport {selectUserId} from '../user/user-slice';\nimport {formatMonth, formatYear} from '../../utils/utils'\n\nexport const loadTransactions = createAsyncThunk(\n  'transactions/loadData',\n  async () => {\n    return await getAll();\n  }\n)\n\nexport const postTransaction = createAsyncThunk(\n  'transactions/postData',\n  async (data) => {\n    return await create(data);\n  }\n)\n\nexport const deleteTransaction = createAsyncThunk(\n  'transactions/deleteData',\n  async (transactionId) => {\n    return await deleteId(transactionId);\n  }\n)\n\nexport const transactionsSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    allTransactions: [],\n    newTransaction: {\n      sum: '',\n      date: new Date().toISOString().slice(0, -14),\n      // date: '',\n      expense: true,\n    },\n    isLoading: false,\n    hasError: false,\n    currentMonth: formatMonth(new Date()),\n    currentYear: formatYear(new Date()),\n    isButtonClick: false,\n    isButtonShow: false\n  },\n  reducers: {\n    setUserInput: (state, action) => {\n      let {name, value} = action.payload;\n      if (name === `expense`) {\n        value = !state.newTransaction.expense;\n      }\n      if (name === `sum`) {\n        value = +value === 0 ? '' : +value;\n      }\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          [name]: value\n        }\n      };\n    },\n    setCategory: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          categoryId: action.payload,\n        }\n      };\n    },\n    setAccount: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          ...state.newTransaction,\n          accountId: action.payload,\n        }\n      };\n    },\n    resetState: (state, action) => {\n      return {\n        ...state,\n        newTransaction: {\n          // id: nanoid(MAX_ID_LENGTH),\n          sum: '',\n          date: new Date().toISOString().slice(0, -14),\n          expense: true,\n        },\n      };\n    },\n    updateMonth: (state, action) => {\n      return {\n        ...state,\n        currentMonth: action.payload,\n      };\n    },\n    updateYear: (state, action) => {\n      return {\n        ...state,\n        currentYear: action.payload,\n      };\n    },\n    showButton: (state, action) => {\n      return {\n        ...state,\n        isButtonShow: !state.isButtonShow,\n      };\n    },\n    clickButton: (state, action) => {\n      return {\n        ...state,\n        isButtonClick: !state.isButtonClick,\n      };\n    },\n  },\n  extraReducers: {\n    [loadTransactions.pending]: (state) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [loadTransactions.fulfilled]: (state, action) => {\n      state.allTransactions = action.payload;\n      state.newTransaction = {\n        ...state.newTransaction,\n      }\n      state.isLoading = false;\n      state.hasError = false;\n      state.showDelete = false;\n    },\n    [loadTransactions.rejected]: (state) => {\n      state.isLoading = false;\n      state.hasError = true;\n    },\n  },\n});\n\nconst allTransactionsState = (state) => state.transactions.allTransactions;\nexport const selectNewTransactionState = (state) => state.transactions.newTransaction;\nexport const isLoading = (state) => state.transactions.isLoading;\nexport const hasError = (state) => state.transactions.hasError;\nexport const currentMonth = (state) => state.transactions.currentMonth;\nexport const currentYear = (state) => state.transactions.currentYear;\nexport const isButtonClick = (state) => state.transactions.isButtonClick;\nexport const isButtonShow = (state) => state.transactions.isButtonShow;\n\nexport const selectAllTransactionsState = (state) => {\n  const allTransactions = allTransactionsState(state);\n  const userId = selectUserId(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.userId === userId)\n};\n\nexport const selectFilteredTransactions = (state) => {\n  const allTransactions = selectAllTransactionsState(state);\n  const searchTerm = selectSearchTerm(state);\n  const userId = selectUserId(state);\n\n  return allTransactions\n          .filter((transaction) => transaction.userId === userId)\n          .filter((transaction) => transaction.category.title.toLowerCase().includes(searchTerm.toLowerCase()))\n          .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n};\n\nexport const {\n  setUserInput,\n  setCategory,\n  setAccount,\n  setTransactionId,\n  addTransaction,\n  resetState,\n  updateMonth,\n  updateYear,\n  clickButton,\n  showButton,\n} = transactionsSlice.actions;\nexport default transactionsSlice.reducer;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  inputType === \"checkbox\" ? cls.push(classes.InputTypeCheckbox) : cls.push(classes.InputType)\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        name={props.name}\n        placeholder={props.placeholder}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <label htmlFor={htmlFor}>{props.label}</label>\n\n      {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport classes from './Select.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched\n}\n\nconst Select = (props) => {\n  // const value = props.options.length !== 0 && props.options[2].title;\n  const cls = [classes.Select];\n\n  return (\n    <div className={cls}>\n      <select\n        // value={value}\n        onChange={props.onChange}\n      >\n        <option value=\"\" hidden>{props.defaultOption}</option>\n        {props.options.map((option) => {\n          return (\n            <option\n              value={option.title}\n              key={option.id}\n            >\n              {option.title}\n            </option>\n          )\n        })}\n        {\n        isInvalid(props)\n        ? <span>{props.errorMessage || \"Enter correct value\"}</span>\n        : null\n      }\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  const cls = [\n    classes.Button,\n    classes[props.type]\n  ].join(' ')\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n\nexport function updateFormControls(name, value, state) {\n  const formControls = {...state};\n  const control = {...formControls[name]};\n\n  control.touched = true;\n  control.value = value;\n  control.valid = validate(control.value, control.validation);\n\n  formControls[name] = control;\n\n  return formControls;\n}\n\nexport function createFormControls() {\n  return {\n    sum: createControl({\n      errorMessage: 'Please fill out this field'\n    }, {required: true}),\n    date: createControl({\n      errorMessage: 'Choose a date please',\n    }, {required: true}),\n    category: createControl({\n      errorMessage: 'Choose a category please',\n    }, {required: true}),\n    account: createControl({\n      errorMessage: 'Choose an account please',\n    }, {required: true}),\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {\n  setUserInput,\n  setCategory,\n  setAccount,\n  selectNewTransactionState,\n  postTransaction,\n  resetState,\n  clickButton,\n  loadTransactions\n} from '../../../reducers/transactions/transactions-slice';\nimport classes from './Form.module.css'\nimport Input from '../../UI/Input/Input';\nimport Select from \"../../UI/Select/Select\";\nimport Button from \"../../UI/Button/Button\";\nimport {validateForm, updateFormControls, createFormControls} from \"./utils\";\n\nfunction TransactionCreateForm({categories, accounts, onClickAddBtn, userId}){\n  // console.log(`🚀 ~ file: Form.js ~ line 21 ~ TransactionCreateForm ~ userId`, userId);\n  const newTransactionState = useSelector(selectNewTransactionState);\n  const {sum, date} = newTransactionState;\n  const dispatch = useDispatch();\n\n  const [state, setState] = useState({\n    isFormValid: false,\n    formControls: createFormControls()\n  });\n\n  useEffect(() => {\n    const formControls = updateFormControls(\"date\", date, state.formControls);\n\n    setState({...state, formControls});\n    // eslint-disable-next-line\n  }, [])\n\n  const onChangeUserInput = (value, name) => {\n    const formControls = updateFormControls(name, value, state.formControls);\n\n    setState({\n      formControls,\n      isFormValid: validateForm(formControls)\n    });\n\n    dispatch(setUserInput({name: name, value: value}));\n  };\n\n  const onChangeSelectHandler = (selector) => (e) => {\n    const getId = (data, target) => {\n      let idItem;\n      data.map((item) => {\n        if (item.title === target) {\n          idItem = item.id;\n        }\n        return idItem;\n      });\n      return idItem;\n    }\n\n    if (selector === \"account\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const accountId = getId(accounts, e.target.value);\n      dispatch(setAccount(accountId));\n    }\n\n    if (selector === \"category\") {\n      const formControls = updateFormControls(selector, e.target.value, state.formControls);\n\n      setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n\n      const categoryId = getId(categories, e.target.value);\n      dispatch(setCategory(categoryId));\n    }\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  const addTransactionHandler = () => {\n    dispatch(postTransaction({...newTransactionState, userId}));\n    dispatch(resetState());\n    dispatch(clickButton());\n    dispatch(loadTransactions());\n\n    let formControls = createFormControls();\n    formControls = updateFormControls(\"date\", date, formControls);\n\n    setState({\n      formControls: formControls,\n      isFormValid: false\n    });\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <section className={classes.form} >\n      <div className={classes.dialogWrapper}>\n        <form onSubmit={onClickSubmitButton}>\n          <CSSTransition\n            in={onClickAddBtn}\n            timeout={300}\n            classNames={{\n              enterActive: `${classes.addFormEnterActive}`,\n              exitActive: `${classes.addFormExitActive}`,\n            }}\n            unmountOnExit\n            nodeRef={nodeRef}\n          >\n            <div className={classes.dialog} ref={nodeRef}>\n              <Input\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"0.00\"\n                value={sum}\n                valid={state.formControls.sum.valid}\n                shouldValidate={!!state.formControls.sum.validation}\n                touched={state.formControls.sum.touched}\n                errorMessage={state.formControls.sum.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <Select\n                options={categories}\n                defaultOption=\"Choose a category\"\n                onChange={onChangeSelectHandler(\"category\")}\n\n                valid={state.formControls.category.valid}\n                shouldValidate={!!state.formControls.category.validation}\n                touched={state.formControls.category.touched}\n                errorMessage={state.formControls.category.errorMessage}\n              />\n\n              <Select\n                options={accounts}\n                defaultOption=\"Choose an account\"\n                onChange={onChangeSelectHandler(\"account\")}\n\n                valid={state.formControls.account.valid}\n                shouldValidate={!!state.formControls.account.validation}\n                touched={state.formControls.account.touched}\n                errorMessage={state.formControls.account.errorMessage}\n              />\n\n              <Input\n                type=\"date\"\n                name=\"date\"\n                value={date}\n                valid={state.formControls.date.valid}\n                shouldValidate={!!state.formControls.date.validation}\n                touched={state.formControls.date.touched}\n                errorMessage={state.formControls.date.errorMessage}\n                onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n              />\n\n              <div className={classes.dialogType}>\n                <Input\n                  label={\"Income\"}\n                  type=\"checkbox\"\n                  name=\"expense\"\n                  onChange={(event) => onChangeUserInput(event.target.value, event.target.name)}\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                onClick={addTransactionHandler}\n                disabled={!state.isFormValid}\n              >\n                Create\n              </Button>\n            </div>\n          </CSSTransition>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default TransactionCreateForm;\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n\nimport classes from './Menu.module.css';\nimport Form from '../../Transactions/CreateForm/Form'\nimport {resetState, isButtonShow, isButtonClick, clickButton} from '../../../reducers/transactions/transactions-slice';\n\nfunction Menu({categories, accounts, userId}) {\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n  const showAddButton = useSelector(isButtonShow);\n\n  const classesAddBtn = [\n    classes.menuAddBtn,\n    'fa',\n    clickAddButton ? 'fa-times' : 'fa-plus',\n  ].join(' ');\n\n  const onClickAddButton = () => {\n    dispatch(clickButton());\n\n    if (clickAddButton) {\n      dispatch(resetState());\n    }\n  };\n\n  const isActiveLink = ({isActive}) => (isActive ? `${classes.active}` : '');\n  const nodeRef = React.useRef(null);\n\n  return (\n    <>\n      <Form\n        categories={categories}\n        accounts={accounts}\n        userId={userId}\n        onClickAddBtn={clickAddButton}\n      />\n\n      <nav className={classes.menu}>\n        <div className={classes.wrapper}>\n          {showAddButton && <CSSTransition\n              in={clickAddButton}\n              timeout={300}\n              classNames={{\n                enterActive: `${classes.addBtnEnterActive}`,\n                enterDone: `${classes.addBtnEnterDone}`,\n              }}\n              nodeRef={nodeRef}\n            >\n            <i\n              className={classesAddBtn}\n              onClick={onClickAddButton}\n              ref={nodeRef}\n            />\n          </CSSTransition>}\n\n          <NavLink\n              to={'/'}\n              className={isActiveLink}\n          >\n            Transactions\n          </NavLink>\n\n          <NavLink\n              to={'/statistics'}\n              className={isActiveLink}\n          >\n            Statistics\n          </NavLink>\n\n          <NavLink\n              to={'/settings'}\n              className={isActiveLink}\n          >\n            Settings\n          </NavLink>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default Menu;\n","import { useRef, useState } from 'react';\nimport classes from './Auth.module.css';\nimport { singUp, logout, login, useAuth } from '../../services/firebase';\n\nfunction Auth() {\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSignup = async () => {\n    setLoading(true);\n    try {\n      await singUp(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Email already in use!\");\n    }\n    setLoading(false);\n  }\n\n  const handleLogin = async () => {\n    setLoading(true);\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Wrong email or password\");\n    }\n    setLoading(false);\n  }\n\n  const handleLogout = async () => {\n    setLoading(true);\n    try {\n      await logout();\n    } catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <section className={classes.Main}>\n      {currentUser && <p className={classes.Header}>{currentUser?.email}</p>}\n      {!currentUser && <div className={classes.Fields}>\n        <input ref={emailRef} placeholder=\"Email\" />\n        <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n      </div>}\n\n      {!currentUser && <button className={classes.Button} disabled={loading || currentUser} onClick={handleSignup}>Sing Up</button>}\n      {!currentUser && <button className={classes.Button} disabled={loading || currentUser} onClick={handleLogin}>Log In</button>}\n      {currentUser && <button className={classes.Button} disabled={loading || !currentUser} onClick={handleLogout}>Log Out</button>}\n\n    </section>\n  );\n}\n\nexport default Auth;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport classes from './Layout.module.css';\nimport {selectAllCategoriesState, loadCategories} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, loadAccounts} from '../../reducers/accounts/accounts-slice';\nimport { selectUserId } from '../../reducers/user/user-slice';\nimport Menu from '../../components/Navigation/Menu/Menu';\nimport Auth from '../../components/Auth/Auth';\n\nfunction Layout(props) {\n  const allCategories = useSelector(selectAllCategoriesState);\n  const allAccounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(loadCategories());\n    dispatch(loadAccounts());\n  }, [dispatch]);\n\n  return (\n    <div className={classes.LayoutContainer}>\n      <main className={classes.LayoutMain}>\n        <Auth />\n        {props.children}\n        <Menu\n          categories={allCategories}\n          accounts={allAccounts}\n          userId={userId}\n        />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {clickButton, isButtonClick} from '../../reducers/transactions/transactions-slice'\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const clickAddButton = useSelector(isButtonClick);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (clickAddButton) {\n      dispatch(clickButton());\n    }\n    // eslint-disable-next-line\n  }, [pathname]);\n\n  return null;\n}\n","import {useSelector, useDispatch} from 'react-redux';\nimport {setSearchTerm, selectSearchTerm, clearSearchTerm} from '../../reducers/search/search-slice';\nimport classes from './Search.module.css';\n\nfunction Search() {\n  const searchTerm = useSelector(selectSearchTerm);\n  const dispatch = useDispatch();\n\n  const onSearchTermChangeHandler = (e) => {\n    const userInput = e.target.value;\n    dispatch(setSearchTerm(userInput));\n  };\n\n  const onClearSearchTermHandler = () => {\n    dispatch(clearSearchTerm());\n  };\n\n  return (\n    <section className={classes.Search}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search by category\"\n        value={searchTerm}\n        onChange={onSearchTermChangeHandler}\n      />\n      {searchTerm.length > 0 && (\n        <span className={classes.SearchCloseBtn} onClick={onClearSearchTermHandler}/>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport classes from './Balance.module.css';\n\nfunction Balance({transactions}) {\n\n  const [balanceContainer, setBalanceContainer] = useState(classes.BalanceContainer)\n  const [balance, setBalance] = useState(classes.Balance)\n\n  const listenScrollEvent = () => {\n    if (window.scrollY < 60) {\n      setBalanceContainer(classes.BalanceContainer);\n      setBalance(classes.Balance);\n    } else if (window.scrollY > 60) {\n      setBalanceContainer(classes.BalanceContainerScroll);\n      setBalance(classes.BalanceScroll)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  const sumExpenses = transactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0);\n\n  const sumIncomes = transactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0);\n\n  const currentBalance = Math.round((sumIncomes - sumExpenses) * 100) / 100;\n\n  return (\n    <section className={balance}>\n      <div className={`${balanceContainer}`}>\n        <div>\n          <p>Your balance:</p>\n          <p className={classes.BalanceAmount}>{currentBalance} €</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Balance;\n","import React from 'react';\nimport {useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {deleteTransaction, loadTransactions} from '../../../../reducers/transactions/transactions-slice';\nimport {CSSTransition} from 'react-transition-group';\nimport classes from '../ListContainer.module.css';\n\nfunction TransactionsItem({categoryTitle, accountTitle, expense, sum, id, ...rest}) {\n  const dispatch = useDispatch();\n  const [showDeleteBtn, setShowDeleteBtn] = useState(false);\n\n  const onClickDeleteButton = ({target}) => {\n    const id = target.id;\n\n    dispatch(deleteTransaction(id));\n    dispatch(loadTransactions());\n  };\n\n  const handleDeleteButtonToggle = () => {\n    setShowDeleteBtn(!showDeleteBtn)\n  };\n\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      nodeRef={nodeRef}\n    >\n      <li\n        className={classes.TransactionsItem}\n        onMouseOver={handleDeleteButtonToggle}\n        onMouseOut={handleDeleteButtonToggle}\n        ref={nodeRef}\n      >\n        <div className={classes.TransactionsItemWrapper}>\n          <p>{categoryTitle}</p>\n          <p>{expense ? `-` : `+`}{sum} €</p>\n        </div>\n        <div className={classes.TransactionsItemWrapper}>\n          <p className={classes.TransactionsItemAccount}>{accountTitle}</p>\n          <p\n            className={`${classes.TransactionsItemEdit} ${showDeleteBtn ? \"\" : classes.TransactionsHidden}`}\n            id={id}\n            onClick={onClickDeleteButton}\n            >\n          delete</p>\n        </div>\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItem;\n","import React from 'react';\nimport TransactionItem from \"./Item\";\nimport {TransitionGroup} from 'react-transition-group';\n\nfunction TransactionsItemsDateGroup({date, transactions}) {\n  const transactionsDay = transactions.filter((transaction) => transaction.date === date);\n\n  return (\n    <TransitionGroup component={'ul'}>\n      {transactionsDay.map((transaction) => (\n        <TransactionItem\n          categoryTitle={transaction.category.title}\n          accountTitle={transaction.account.title}\n          expense={transaction.expense}\n          sum={transaction.sum}\n          id={transaction.id}\n          key={transaction.id}\n        />\n      ))}\n    </TransitionGroup>\n  );\n}\n\nexport default TransactionsItemsDateGroup;\n","import React from 'react';\nimport {\n  formatDay,\n  formatMonthYear,\n  formatWeekday\n} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsDateHeader({date, transactions}) {\n  const transactionsDay = transactions\n    .filter((transaction) => transaction.date === date);\n  const expenseBalance = transactionsDay\n    .filter((transaction) => transaction.expense === true)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const incomeBalance = transactionsDay\n    .filter((transaction) => transaction.expense === false)\n    .map((transaction) => transaction.sum)\n    .reduce((acc, transaction) => acc + transaction, 0);\n  const overallBalance = Math.round((incomeBalance - expenseBalance) * 100) / 100;\n\n  return (\n    <div className={classes.TransactionsHeader}>\n      <div className={classes.TransactionsDateContent}>\n          <p>{formatDay(date)}</p>\n          <div className={classes.TransactionsDateWrapper}>\n            <p>{formatWeekday(date)}</p>\n            <p>{formatMonthYear(date)}</p>\n          </div>\n        </div>\n        <p>{overallBalance < 0 ? '' : '+'}{overallBalance} €</p>\n    </div>\n  );\n}\n\nexport default TransactionsDateHeader;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport classes from '../ListContainer.module.css';\n\nimport TransactionItemsDateGroup from './DateGroup';\nimport TransactionsDateHeader from './DateHeader';\n\nfunction TransactionsItemsDateGroupWrapper({date, ...rest}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <CSSTransition\n      {...rest}\n      classNames={{\n        enter: `${classes.enter}`,\n        enterActive: `${classes.enterActive}`,\n        exit: `${classes.exit}`,\n        exitActive: `${classes.exitActive}`,\n        exitDone: `${classes.exitDone}`,\n      }}\n      timeout={300}\n      key={date}\n      nodeRef={nodeRef}\n    >\n      <li ref={nodeRef}>\n        <TransactionsDateHeader\n          date={date}\n          transactions={transactions}\n        />\n\n        <TransactionItemsDateGroup\n          date={date}\n          transactions={transactions}\n        />\n      </li>\n    </CSSTransition>\n  );\n}\n\nexport default TransactionsItemsDateGroupWrapper;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {TransitionGroup} from 'react-transition-group';\n\nimport {selectFilteredTransactions} from '../../../../reducers/transactions/transactions-slice'\nimport TransactionsItemsDateGroupWrapper from './DateGroupWrapper';\nimport {formatMonth} from \"../../../../utils/utils\";\nimport classes from \"../ListContainer.module.css\";\n\nfunction TransactionsItemsMonthGroup({month}) {\n  const transactions = useSelector(selectFilteredTransactions);\n  const transactionsDates = transactions\n    .filter((transaction) => formatMonth(transaction.date) === month)\n    .map((transaction) => transaction.date);\n  const nodeRef = React.useRef(null);\n\n  return (\n    <ul className=\"transactions__list\">\n      <p className={classes.TransactionsMonth} ref={nodeRef}>{month}</p>\n      <TransitionGroup>\n        {transactionsDates.map((transactionDate) =>\n          (\n            <TransactionsItemsDateGroupWrapper\n              date={transactionDate}\n              key={transactionDate}\n            />\n          )\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n}\n\nexport default TransactionsItemsMonthGroup;\n","import React from \"react\";\nimport {useSelector} from 'react-redux';\n\nimport {selectFilteredTransactions} from '../../../reducers/transactions/transactions-slice'\nimport {formatMonth} from \"../../../utils/utils\";\n\nimport TransactionsItemsMonthGroup from \"./Items/MonthGroup\";\n\nfunction TransactionsListContainer() {\n  const transactions = useSelector(selectFilteredTransactions);\n  const months = [...new Set(transactions\n    .map(date => formatMonth(date.date)))];\n\n  return (\n    <section className=\"transactions\">\n      {months.map((month) =>\n        <TransactionsItemsMonthGroup month={month} key={month} />\n      )}\n    </section>\n  );\n}\n\nexport default TransactionsListContainer;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {\n  loadTransactions,\n  selectAllTransactionsState,\n  showButton,\n} from '../../reducers/transactions/transactions-slice'\n\nimport Search from '../../components/Search/Search';\nimport Balance from '../../components/Balance/Balance';\nimport TransactionsListContainer from '../../components/Transactions/List/ListContainer';\n\nfunction Transactions() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(showButton());\n    dispatch(loadTransactions());\n    return () => {\n      dispatch(showButton());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Balance transactions={allTransactions} />\n      {\n        !!allTransactions.length && <Search />\n      }\n      <TransactionsListContainer />\n    </>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport classes from './MonthBalance.module.css';\nimport {formatMonth} from '../../../utils/utils'\n\nfunction WidgetsMonthBalance({currentMonth, transactions, currentYear}) {\n  const filteredTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const sumExpenses = filteredTransactions.map((transaction) => {\n      return transaction.expense ? transaction = +transaction.sum : transaction = null;\n    }).reduce((a, b) => a + b, 0).toFixed(2);\n\n  const sumIncomes = filteredTransactions.map((item) => {\n    return !item.expense ? item = +item.sum : item = null;\n  }).reduce((a, b) => a + b, 0).toFixed(2);\n\n  return (\n    <section className={classes.MonthBalance}>\n      <h2>{currentMonth}</h2>\n      <ul className={classes.List}>\n        <li className={classes.Wrapper}>\n          <p>incomes:</p>\n          <p className={classes.Balance}>+{sumIncomes} €</p>\n        </li>\n        <li className={classes.Wrapper}>\n          <p>expenses:</p>\n          <p className={classes.Balance}>-{sumExpenses} €</p>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthBalance;\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsMonthExpensesIndicator({\n  excessPercent,\n  balanceOfCurrent,\n  totalPercent,\n  transactionsSum,\n  type,\n  title\n  }) {\n  return (\n    <>\n      <div className={classes.IndicatorWrapper}>\n\n        {/* Indicator */}\n        <div\n          className={classes.TotalExpenses}\n          style={{width: `${totalPercent}%`}}\n        ></div>\n        <div\n          className={classes.IndicatorTotal}\n          style={{width: `${100 - totalPercent}%`}}\n        ></div>\n        <div\n          className={\n              `${\n                type === 'incomes'\n                  ? classes.IndicatorIncomes\n                  : classes.IndicatorExpenses\n              }`\n            }\n          style={{width: `${excessPercent}%`}}\n        ></div>\n\n        {/* Contents */}\n        <p className={\n            title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalTitle\n              : classes.CategoryTitle\n          }>\n          {title}\n        </p>\n        <div className={classes.TotalSumWrapper}>\n          <p className={classes.TotalSumAverage}>{balanceOfCurrent}</p>\n          <p className={\n              title === 'Incomes' || title === 'Expenses'\n              ? classes.TotalSum\n              : classes.Balance\n            }>\n            {type === 'incomes' ? '+' : '-'}\n            {transactionsSum}€\n          </p>\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsMonthExpensesIndicator;\n","export const getSum = (transactions, type) => {\n    return transactions\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0).toFixed(2);\n}\n\nexport const getBalance = (category, type, transactions) => {\n  const balance = transactions\n    .filter((transaction) => transaction.category.title === category)\n    .map((transaction) => (type === 'incomes' ? !transaction.expense : transaction.expense) ? transaction = +transaction.sum : transaction = null)\n    .reduce((acc, sum) => acc + sum, 0);\n\n    return balance.toFixed(2);\n}\n\nexport const MOTH_COUNT = 12;\n\nexport const getMonthAverageSum = (sum) => (sum / MOTH_COUNT).toFixed(2);\nexport const getTotalPercentPerMonth = (balance, sum) => (balance / getMonthAverageSum(sum) * 100).toFixed(2);\n","import React from 'react';\nimport Indicator from './Indicator/Indicator';\nimport classes from './Item.module.css';\nimport {getBalance} from '../utils';\nimport {formatMonth} from '../../../../utils/utils';\n\nfunction WidgetsMonthExpensesItem(\n    {\n      categories, excessPercent,\n      excessCategoryPercent, totalPercent,\n      totalCategoryPercent, balanceOfCurrent,\n      balanceCategoryOfCurrent, categoryPercent,\n      transactionsSum, type, title,\n      monthTransactions,\n      month\n    }\n  ) {\n\n  const daysAmount = new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n  const currentDay = new Date().getDate();\n  const currentMonth = formatMonth(new Date());\n  const currentDayStep = (currentDay / daysAmount * 100).toFixed(2);\n  const isShow = month === currentMonth;\n\n  return (\n    <section className={classes.MonthExpensesItem}>\n      {\n        isShow &&\n          <div className={classes.DayIndicatorWrapper}>\n            <div className={classes.DayIndicator} style={{left: `${currentDayStep}%`}}>\n              <p className={\n                `${classes.DayIndicatorDate} ${currentDay > 15 ? classes.Left : classes.Right}`\n                }>Today is  {currentMonth} {currentDay}th</p>\n            </div>\n          </div>\n      }\n      <Indicator\n        excessPercent={excessPercent}\n        balanceOfCurrent={balanceOfCurrent}\n        totalPercent={totalPercent}\n        transactionsSum={transactionsSum}\n        type={type}\n        title={title}\n      />\n\n      <ul className={classes.List}>\n        {categories.map((category) => (\n            <li className={classes.Wrapper} key={category}>\n              <Indicator\n                excessPercent={excessCategoryPercent(category, type)}\n                balanceOfCurrent={balanceCategoryOfCurrent(category, type)}\n                totalPercent={totalCategoryPercent(category, type)}\n                transactionsSum={getBalance(category, type, monthTransactions)}\n                type={type}\n                title={`${categoryPercent(getBalance(category, type, monthTransactions), transactionsSum)}%\n                  ${category}`}\n              />\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default WidgetsMonthExpensesItem;\n","export const TRANSACTION_TYPE = {\n    EXPENSES: 'expenses',\n    INCOMES: 'incomes',\n  }\n","import {\n  getMonthAverageSum,\n  getSum,\n  getTotalPercentPerMonth,\n  getBalance,\n  MOTH_COUNT\n} from \"./utils\";\nimport {TRANSACTION_TYPE} from './const';\n\nexport class Statistics {\n  constructor(transactions, type, budget, monthTransactions, currentMonth, userId) {\n    this.transactions = transactions;\n    this.type = type;\n    this.budget = budget;\n    this.monthTransactions = monthTransactions;\n    this.currentMonth = currentMonth;\n    this.category = this.type[0].toUpperCase() + this.type.slice(1);\n    this.userId = userId;\n  }\n\n  _getExcessPercent = (balance, sum) => {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getExcessBudgetPercent = (balance, sum) => {\n    const percent = balance / sum * 100;\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  _getTotalPercent(balance, sum) {\n    const percent = getTotalPercentPerMonth(balance, sum);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 1 : expensesPercent;\n  }\n\n  categories(type) {\n    return [...new Set(this.monthTransactions\n    .filter((transaction) => (type === TRANSACTION_TYPE.EXPENSES ? transaction.expense : !transaction.expense)\n      ? transaction.sum !== 0\n      : transaction = null)\n    .sort((a, b) => b.sum - a.sum)\n    .map(transaction => transaction.category.title))];\n  }\n\n  sum() {\n    return getSum(this.monthTransactions, this.type);\n  }\n\n  averageSum() {\n    return !this.budget[this.currentMonth][this.type][this.category]\n    ? (getMonthAverageSum(getSum(this.transactions, this.type)))\n    : this.budget[this.currentMonth][this.type][this.category];\n  }\n\n  excessPercent() {\n    return this.budget[this.currentMonth][this.type][this.category]\n    ? this._getExcessBudgetPercent(getSum(this.monthTransactions, this.type), this.averageSum())\n    : this._getExcessPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  balanceOfCurrent() {\n    const averageValue =  (this.averageSum() - getSum(this.monthTransactions, this.type)).toFixed(2);\n\n    return averageValue > 0\n      ? `${averageValue}€ below ${this.budget[this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`\n      : averageValue === '0.00' ? \"equal to budget\"\n      : `${Math.abs(averageValue)}€ above ${this.budget[this.currentMonth][this.type][this.category] ? \"budget\" : \"typical\"}`;\n  }\n\n  totalPercent() {\n    return this.budget[this.currentMonth][this.type][this.category]\n    ? (((getSum(this.monthTransactions, this.type) / this.averageSum()) * 100) >= 100\n      ? 100\n      : (getSum(this.monthTransactions, this.type) / this.averageSum()) * 100)\n    : this._getTotalPercent(getSum(this.monthTransactions, this.type), getSum(this.transactions, this.type));\n  }\n\n  percentCategory(balance, sum) {\n    let percent = (balance / sum * 100).toFixed(2);\n    const expensesPercent = percent > 99.9 ? 100 : percent;\n\n    return expensesPercent;\n  }\n\n  excessCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    const expensesPercent = percent > 100 ? percent - 100 : 0;\n\n    return expensesPercent;\n  }\n\n  balanceCategoryOfCurrent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const transactionsSumPerCategory = getBalance(category, type, this.monthTransactions)\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const averageValue = budget\n    ? (budget - transactionsSumPerCategory).toFixed(2)\n    : ((balancePerCategory / MOTH_COUNT) - transactionsSumPerCategory).toFixed(2);\n\n    return averageValue > 0\n      ? `${averageValue}€ below ${budget ? \"budget\" : \"typical\"}`\n      : averageValue === '0.00' ? \"equal to budget\"\n      : `${Math.abs(averageValue)}€ above ${budget ? \"budget\" : \"typical\"}`\n  }\n\n  totalCategoryPercent = (category, type) => {\n    const balancePerCategory = getBalance(category, type, this.transactions);\n    const balance = getBalance(category, type, this.monthTransactions);\n\n    const budget = this.budget[this.currentMonth][this.type][category];\n\n    const percent = budget\n      ? balance / budget * 100\n      : getTotalPercentPerMonth(balance, balancePerCategory);\n    let expensesPercent = percent >= 100\n      ? 100\n      : percent;\n\n    return expensesPercent === 0 ? 0 : expensesPercent;\n  }\n}\n","import React from 'react';\n// import {useSelector} from 'react-redux';\nimport WidgetsMonthExpensesItem from './Items/Item'\nimport {formatMonth} from '../../../utils/utils'\nimport {Statistics} from './Statistics';\nimport {TRANSACTION_TYPE} from './const';\n// import {selectBudgetState} from '../../../reducers/budget/budget-slice';\n\nfunction WidgetsMonthExpenses({currentYear, currentMonth, transactions, budget, userId}) {\n  // const budget = useSelector(selectBudgetState);\n\n  if (!budget) {\n    return (<p></p>)\n  }\n\n  const monthTransactions = transactions\n    .filter((transaction) => formatMonth(transaction.date) === currentMonth);\n\n  const expenses = new Statistics(transactions, TRANSACTION_TYPE.EXPENSES, budget, monthTransactions, currentMonth, userId);\n  const incomes = new Statistics(transactions, TRANSACTION_TYPE.INCOMES, budget, monthTransactions, currentMonth, userId);\n\n  return (\n    <>\n      <WidgetsMonthExpensesItem\n        categories={expenses.categories(TRANSACTION_TYPE.EXPENSES)}\n\n        categoryPercent={expenses.percentCategory}\n        excessCategoryPercent={expenses.excessCategoryPercent}\n        balanceCategoryOfCurrent={expenses.balanceCategoryOfCurrent}\n        totalCategoryPercent={expenses.totalCategoryPercent}\n\n        excessPercent={expenses.excessPercent()}\n        balanceOfCurrent={expenses.balanceOfCurrent()}\n        totalPercent={expenses.totalPercent()}\n        transactionsSum={expenses.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.EXPENSES}\n        title={\"Expenses\"}\n        month={currentMonth}\n      />\n\n      <WidgetsMonthExpensesItem\n        categories={incomes.categories(TRANSACTION_TYPE.INCOMES)}\n\n        categoryPercent={incomes.percentCategory}\n        excessCategoryPercent={incomes.excessCategoryPercent}\n        balanceCategoryOfCurrent={incomes.balanceCategoryOfCurrent}\n        totalCategoryPercent={incomes.totalCategoryPercent}\n\n        excessPercent={incomes.excessPercent()}\n        balanceOfCurrent={incomes.balanceOfCurrent()}\n        totalPercent={incomes.totalPercent()}\n        transactionsSum={incomes.sum()}\n\n        monthTransactions={monthTransactions}\n\n        type={TRANSACTION_TYPE.INCOMES}\n        title={\"Incomes\"}\n        month={currentMonth}\n      />\n    </>\n  )\n}\n\nexport default WidgetsMonthExpenses;\n","// export const MONTH_EXPENSES = {\n//   JANUARY: 'January',\n//   FEBRUARY: 'February',\n//   MARCH: 'March',\n//   APRIL: 'April',\n//   MAY: 'May',\n//   JUNE: 'June',\n//   JULY: 'July',\n//   AUGUST: 'August',\n//   SEPTEMBER: 'September',\n//   OCTOBER: 'October',\n//   NOVEMBER: 'November',\n//   DECEMBER: 'December'\n// }\n\nexport const MONTH_EXPENSES = [\n  'January', 'February', 'March',\n  'April', 'May', 'June',\n  'July', 'August', 'September',\n  'October', 'November', 'December'\n]\n","import React from 'react';\nimport classes from './Indicator.module.css';\n\nfunction WidgetsYearExpensesIndicator({month, getPercent, type}) {\n  let cls = [];\n\n  type === \"expenses\" ? cls.push(classes.Expenses) : cls.push(classes.Incomes);\n\n  return (\n    <div\n      className={cls.join(' ')}\n      id={month}\n      style={{height: `${getPercent(month, type)}%`}}\n    ></div>\n  )\n}\n\nexport default WidgetsYearExpensesIndicator;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateMonth} from '../../../reducers/transactions/transactions-slice';\n\nimport {formatMonth} from '../../../utils/utils';\nimport classes from './YearExpenses.module.css';\nimport {MONTH_EXPENSES} from './constant';\n\nimport Indicator from './Indicator/Indicator';\n\nfunction WidgetsYearExpenses({currentYear, currentMonth, transactions}) {\n  const dispatch = useDispatch();\n\n  const maxMonthExpense = 3000; // temporary value\n\n  const getPercent = (month, type) => {\n    const incomes = transactions\n      .filter((transaction) => formatMonth(transaction.date) === month)\n      .map((transaction) => (type === 'expenses' ? transaction.expense : !transaction.expense)\n      ? transaction = +transaction.sum\n      : transaction = null)\n      .reduce((acc, sum) => acc + sum, 0);\n\n    const percent = (incomes / maxMonthExpense * 100);\n    let incomesPercent = percent >= 100 ? 100 : percent;\n\n    return incomesPercent === 0 ? 1 : incomesPercent;\n  }\n\n  const monthHandler = ({target}) => {\n    dispatch(updateMonth(target.id));\n  };\n\n\n  return (\n    <>\n      <section className={classes.YearExpenses}>\n        <h4>{currentYear}</h4>\n        <div className={classes.Wrapper}>\n          {MONTH_EXPENSES.map((month) => (\n            <div\n              className={`${classes.List} ${month === currentMonth ? classes.Active : ''}`}\n              key={month}\n              id={month}\n              onClick={monthHandler}\n            >\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"incomes\"}\n              />\n\n              <Indicator\n                month={month}\n                getPercent={getPercent}\n                type={\"expenses\"}\n              />\n              <p id={month}>{month.slice(0, 3)}</p>\n            </div>\n            ))\n          }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default WidgetsYearExpenses;\n","import {addDoc, collection, setDoc, doc, deleteDoc, getDocs} from \"@firebase/firestore\";\nimport db from \"./firebase\";\n\nconst budgetRef = collection(db, \"budgets\");\n\nexport const getAll = async (userId) => {\n  const snapshot = await getDocs(budgetRef, userId);\n  const filter = snapshot.docs.filter((doc) => doc.id === userId);\n  const map = filter.map((doc) => (doc.data()));\n  const results = map.find((doc) => doc);\n  return results;\n}\n\nexport const create = async (data) => {\n  const {sum, expense, date, categoryId, accountId} = data;\n  const payload = {sum, expense, date, categoryId, accountId};\n  await addDoc(budgetRef, payload);\n}\n\nexport const deleteId = async (id) => {\n    const docRef = doc(budgetRef, id);\n    await deleteDoc(docRef);\n}\n\nexport const update = async (id, budget) => {\n  const docRef = doc(db, \"budgets\", id);\n  const payload = {...budget};\n\n  setDoc(docRef, payload, {merge:true});\n}\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getAll, update} from '../../services/budget.service';\n\nconst getOverall = (budget, type, currentMonth) => {\n    if (Object.keys(budget[currentMonth][type]).length === 0) {\n      return;\n    };\n    const upperCase = type[0].toUpperCase() + type.slice(1);\n    const balanceTotal = budget[currentMonth][type][upperCase];\n    const balanceBudget = Object.values(budget[currentMonth][type]).reduce((a, b) => +a + +b);\n\n    const overall = Math.abs((!balanceTotal ? 0 : balanceTotal) - balanceBudget);\n\n    return overall;\n  }\n\nexport const loadBudgets = createAsyncThunk(\n  'budgets/loadData',\n  async (userId) => {\n    return await getAll(userId);\n  }\n)\n\nexport const postBudget = createAsyncThunk(\n  'budgets/addData',\n  async ({updatedBudget, userId}) => {\n\n    return await update(userId, updatedBudget);\n  }\n)\n\nexport const budgetSlice = createSlice({\n  name: \"budget\",\n  initialState: {\n    budget: {},\n    budgetUpdated: {},\n  },\n  reducers: {\n    updateBudget: (state, action) => {\n      const type = action.payload.type;\n      const name = action.payload.name;\n      const nameUpperCase = type[0].toUpperCase() + type.slice(1);\n      const value = action.payload.value;\n      const month = action.payload.month;\n      const budget =  {...state.budgetUpdated};\n\n      let currentMonth = {...budget[month]};\n      let currentType = {...currentMonth[type]};\n      currentType[name] = value;\n      currentMonth[type] = currentType;\n\n      budget[month] = currentMonth;\n\n      const overall = getOverall(budget, type, month);\n\n      currentMonth = {...budget[month]};\n      currentType = {...currentMonth[type]};\n      currentType[nameUpperCase] = overall;\n      currentMonth[type] = currentType;\n\n      budget[month] = currentMonth;\n\n      return {\n        ...state,\n        budgetUpdated: {...budget}\n      };\n    },\n  },\n\n  extraReducers: {\n    [loadBudgets.pending]: (state) => {\n    },\n    [loadBudgets.fulfilled]: (state, action) => {\n      state.budget = action.payload;\n      state.budgetUpdated = action.payload;\n    },\n    [loadBudgets.rejected]: (state) => {\n    },\n  },\n});\n\nexport const selectAllBudgetState = (state) => state.budget.budget;\nexport const selectUpdatedBudgetState = (state) => state.budget.budgetUpdated;\n\nexport const {updateBudget} = budgetSlice.actions;\nexport default budgetSlice.reducer;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction WidgetsBudgetItem({title, value, onChange, id}) {\n  const isHeader = title === \"Expenses\" || title === \"Incomes\"\n  return (\n    <div className={classes.Block}>\n      <p className={isHeader ? classes.Title : classes.SubTitle}>{title}</p>\n      {isHeader ? <p className={classes.Description}>Plan</p> : ''}\n      <input\n        className={isHeader ? classes.InputDisabled : classes.Input }\n        type=\"number\"\n        step=\"0.01\"\n        id={id}\n        name={title}\n        placeholder={\"0.00\"}\n        value={value}\n        onChange={onChange}\n        // disabled={isHeader}\n      />\n    </div>\n  )\n}\n\nexport default WidgetsBudgetItem;\n","import React, {useEffect, useRef} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {loadTransactions} from '../../../reducers/transactions/transactions-slice';\nimport {selectAllCategoriesState} from '../../../reducers/categories/categories-slice';\nimport {postBudget, loadBudgets, updateBudget} from '../../../reducers/budget/budget-slice';\n\nimport classes from './Budget.module.css';\nimport WidgetsBudgetItem from './Items/Item';\n\nfunction WidgetsBudget({currentYear, currentMonth, budget, userId, updatedBudget}) {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n\n  const usePrevious = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  const prevBudget = JSON.stringify(usePrevious(budget)) === JSON.stringify(updatedBudget);\n\n  if (!updatedBudget) {\n    return (<p></p>)\n  }\n\n  const onInputChange = ({target}) => {\n    const type = target.id;\n    const name = target.name;\n    const value = target.value;\n    const month = currentMonth;\n\n    dispatch(updateBudget({type, name, value, month, userId}));\n  }\n\n  const onEditClick = () => {\n    dispatch(postBudget({updatedBudget, userId}));\n    dispatch(loadBudgets(userId));\n    dispatch(loadTransactions());// ??? update edit button\n  }\n\n  return (\n    <section className={classes.BudgetWrapper}>\n      <div className={classes.HeaderWrapper}>\n        <p className={classes.Header}>Budget</p>\n        <button\n            className={classes.Button}\n            type=\"submit\"\n            onClick={onEditClick}\n            disabled={prevBudget}\n          >\n            Edit\n          </button>\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Expenses\"}\n          id={\"expenses\"}\n          value={updatedBudget[currentMonth][\"expenses\"][\"Expenses\"] || ''}\n          onChange={onInputChange}\n          onEditClick={onEditClick}\n        />\n\n        {categories\n          .filter((category) => !category.incomes)\n          .sort((a, b) => updatedBudget[currentMonth][\"expenses\"][b.title] - updatedBudget[currentMonth][\"expenses\"][a.title])\n          .map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              id={\"expenses\"}\n              value={updatedBudget[currentMonth][\"expenses\"][category.title] || ''}\n              onChange={onInputChange}\n              onEditClick={onEditClick}\n            />\n          ))\n        }\n      </div>\n\n      <div className={classes.Content}>\n        <WidgetsBudgetItem\n          title={\"Incomes\"}\n          id={\"incomes\"}\n          value={updatedBudget[currentMonth][\"incomes\"][\"Incomes\"]  || ''}\n          onChange={onInputChange}\n          onClick={onEditClick}\n        />\n\n        {categories\n          .filter((category) => category.incomes)\n          .sort((a, b) => updatedBudget[currentMonth][\"incomes\"][b.title] - updatedBudget[currentMonth][\"incomes\"][a.title])\n          .map((category) => (\n            <WidgetsBudgetItem\n              key={category.id}\n              title={category.title}\n              id={\"incomes\"}\n              value={updatedBudget[currentMonth][\"incomes\"][category.title]  || ''}\n              onChange={onInputChange}\n              onClick={onEditClick}\n            />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default WidgetsBudget;\n","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport WidgetsMonthBalance from '../../components/Widgets/MonthBalance/MonthBalance';\nimport WidgetsMonthExpenses from '../../components/Widgets/MonthExpenses/MonthExpenses';\nimport WidgetsYearExpenses from '../../components/Widgets/YearExpenses/YearExpenses';\nimport WidgetsBudget from '../../components/Widgets/Budget/Budget';\nimport {selectUserId} from '../../reducers/user/user-slice';\nimport classes from './Statistics.module.css';\nimport {currentMonth, currentYear} from '../../reducers/transactions/transactions-slice';\nimport {\n  loadTransactions,\n  selectAllTransactionsState\n} from '../../reducers/transactions/transactions-slice';\nimport {selectAllBudgetState, loadBudgets, selectUpdatedBudgetState} from '../../reducers/budget/budget-slice';\n\nfunction Statistics() {\n  const allTransactions = useSelector(selectAllTransactionsState);\n  // const year = \"< 2021 >\";\n  const month = useSelector(currentMonth);\n  const year = useSelector(currentYear);\n  const budget = useSelector(selectAllBudgetState);\n  const updatedBudget = useSelector(selectUpdatedBudgetState);\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n  const newBudget = budget && Object.keys(budget).length !== 0 && budget;\n  const newUpdatedBudget = updatedBudget && Object.keys(updatedBudget).length !== 0 && updatedBudget;\n\n  useEffect(() => {\n    dispatch(loadBudgets(userId));\n    dispatch(loadTransactions());\n    // eslint-disable-next-line\n  }, [userId]);\n\n  return (\n    <section className={classes.Statistics}>\n      <WidgetsMonthBalance currentYear={year} currentMonth={month} transactions={allTransactions} />\n      <WidgetsYearExpenses currentYear={year} currentMonth={month} transactions={allTransactions} />\n      <WidgetsMonthExpenses currentYear={year} currentMonth={month} transactions={allTransactions} budget={newBudget} userId={userId} />\n      <WidgetsBudget currentYear={year} currentMonth={month} budget={newBudget} updatedBudget={newUpdatedBudget} userId={userId} />\n    </section>\n  )\n}\n\nexport default Statistics;\n","import React from 'react';\nimport classes from './Item.module.css';\n\nfunction SettingsItem({id, onChange, onClickSubmitButton, value, submitTitle, onClickButton, placeholder, onClickDeleteButton, transactionType, onChangeType, title}) {\n  // const htmlFor = `${'checkbox'}-${Math.random()}`;\n  return (\n    <form\n      className={classes.ItemWrapper}\n      onSubmit={onClickSubmitButton}\n    >\n      <input\n        className={classes.Input}\n        type=\"text\"\n        name={value}\n        value={value}\n        id={id}\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n      {\n        value && title !== \"Accounts\" &&\n        <>\n          <div className={classes.Type}>\n            <input\n            type=\"checkbox\"\n            name=\"transactionType\"\n            // placeholder={props.placeholder}\n            id={id}\n            // id={htmlFor}\n            // value\n            // onChange={props.onChange}\n            checked={transactionType}\n            onChange={onChangeType}\n            />\n            <label\n              // htmlFor={htmlFor}\n            >Incomes</label>\n          </div>\n        </>\n      }\n      <div className={classes.ButtonWrapper}>\n        {submitTitle && <button\n          className={classes.Button}\n          id={id}\n          type=\"submit\"\n          onClick={onClickButton}\n          disabled={!value}\n        >\n          {submitTitle}\n        </button>}\n        {onClickDeleteButton && <button\n          id={id}\n          className={classes.Button}\n          type=\"button\"\n          onClick={onClickDeleteButton}\n        >\n          Delete\n        </button>}\n      </div>\n    </form>\n  )\n}\n\nexport default SettingsItem;\n","import React from 'react';\nimport classes from '../Settings.module.css';\nimport SettingsItem from '../Items/Item';\n\nfunction SettingsBlock({\n  onClickSubmitButton, onClickCreateButton,\n  value, onChange, onClickDeleteButton,\n  items, title, placeholder, onClickEditButton,\n  onChangeType\n}) {\n  return (\n    <section className={classes.Wrapper}>\n      <div className={classes.Content}>\n        <p className={classes.Header}>{title}</p>\n        <SettingsItem\n          onClickSubmitButton={onClickSubmitButton}\n          onClickButton={onClickCreateButton}\n          value={value}\n          submitTitle={\"Create\"}\n          onChange={onChange}\n          onChangeType={onChangeType}\n          placeholder={placeholder}\n          transactionType={null}\n          title={title}\n        />\n\n        {items.map((category) => (\n          <SettingsItem\n            onClickSubmitButton={onClickSubmitButton}\n            value={category.title}\n            // submitTitle={\"Edit\"}\n            onClickButton={onClickEditButton}\n            onChange={onChange}\n            onChangeType={onChangeType}\n            id={category.id}\n            key={category.id}\n            onClickDeleteButton={onClickDeleteButton}\n            transactionType={category.incomes}\n            title={title}\n          />\n          ))\n        }\n      </div>\n    </section>\n  )\n}\n\nexport default SettingsBlock;\n","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectAllCategoriesState, deleteCategory, postCategory, loadCategories, updateCategory} from '../../reducers/categories/categories-slice';\nimport {selectAllAccountsState, updateAccount, deleteAccount, postAccount, loadAccounts} from '../../reducers/accounts/accounts-slice';\nimport { selectUserId } from '../../reducers/user/user-slice';\nimport SettingsBlock from './Blocks/Block';\n\nfunction Settings() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategoriesState);\n  const accounts = useSelector(selectAllAccountsState);\n  const userId = useSelector(selectUserId);\n\n  const [inputCategory, setInputCategory] = useState('');\n  const [inputType, setInputType] = useState(false);\n  const [inputAccount, setInputAccount] = useState('');\n\n  const onChangeType = async ({target}) => {\n    const id = target.id;\n    // const value = target.value;\n    setInputType(target.checked);\n    // const name = target.name;\n\n    // if (name === \"transactionType\") {\n    // setInputType(!inputType);\n    // console.log(`🚀 ~ file: Settings.js ~ line 34 ~ onChangeType ~ inputType`, inputType);\n    //   // dispatch(updateCategory({incomes: inputType}));\n    // // }\n\n    if (id) {\n      dispatch(updateCategory({id, incomes: target.checked}));\n      dispatch(loadCategories());\n    }\n  }\n\n  const onChangeCategory = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n    // const name = target.name;\n    const incomes = inputType;\n\n    // if (name === \"transactionType\") {\n    //   setInputType(!title);\n    //   // title ? setInputType(false) : setInputType(!inputType);\n    //   // dispatch(updateCategory({incomes: inputType}));\n    // }\n\n    if (id) {\n      dispatch(updateCategory({id, title, userId, incomes}));\n      dispatch(loadCategories());\n    } else {\n      setInputCategory(title);\n    }\n  }\n\n  const onChangeAccount = ({target}) => {\n    const id = target.id;\n    const title = target.value;\n\n    if (id) {\n      dispatch(updateAccount({id, title, userId}));\n      dispatch(loadAccounts());\n    } else {\n      setInputAccount(title);\n    }\n  }\n\n  const onClickCreateCategoryButton = () => {\n    dispatch(postCategory({title: inputCategory, userId, incomes: inputType}));\n    setInputCategory('');\n    setInputType(false);\n    dispatch(loadCategories());\n  };\n\n  const onClickCreateAccountButton = () => {\n    dispatch(postAccount({title: inputAccount, userId}));\n    setInputAccount('');\n    dispatch(loadAccounts());\n  };\n\n  const onClickEditCategoryButton = ({target}) => {\n    // inputCategory !== '' && dispatch(updateCategory(target.id, inputCategory));\n    // setInputCategory('');\n    dispatch(loadCategories());\n  };\n\n  const onClickEditAccountButton = ({target}) => {\n    // dispatch(updateCategory(inputCategory));\n    // setInputCategory('');\n    // dispatch(loadCategories());\n  };\n\n  function onClickDeleteCategoryButton({target}) {\n    dispatch(deleteCategory(target.id));\n    dispatch(loadCategories());\n  };\n\n  function onClickDeleteAccountButton({target}) {\n    dispatch(deleteAccount(target.id));\n    dispatch(loadAccounts());\n  };\n\n  const onClickSubmitButton = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateCategoryButton}\n        onClickDeleteButton={onClickDeleteCategoryButton}\n        onClickEditButton={onClickEditCategoryButton}\n        value={inputCategory}\n        submitTitle={\"Create\"}\n        onChange={onChangeCategory}\n        onChangeType={onChangeType}\n        items={categories}\n        title={\"Categories\"}\n        placeholder={\"Type the new name for the category\"}\n        transactionType={\"true\"}\n      />\n\n      <SettingsBlock\n        onClickSubmitButton={onClickSubmitButton}\n        onClickCreateButton={onClickCreateAccountButton}\n        onClickDeleteButton={onClickDeleteAccountButton}\n        onClickEditButton={onClickEditAccountButton}\n        value={inputAccount}\n        submitTitle={\"Create\"}\n        onChange={onChangeAccount}\n        onChangeType={onChangeType}\n        items={accounts}\n        title={\"Accounts\"}\n        placeholder={\"Type the new name for the account\"}\n        transactionType={undefined}\n      />\n    </>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport SettingsScreen from '../../components/Settings/Settings'\nimport classes from './Settings.module.css';\n\nfunction Settings() {\n  return (\n    <section className={classes.Settings}>\n      <SettingsScreen />\n    </section>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\nimport {Route, Routes, Navigate} from 'react-router-dom';\nimport Layout from '../src/hoc/Layout/Layout'\nimport './App.css'\nimport ScrollToTop from './hoc/ScrollToTop/ScrollToTop';\n\nimport Transactions from './containers/Transactions/Transactions';\nimport Statistics from './containers/Statistics/Statistics';\nimport Settings from './containers/Settings/Settings';\nfunction App() {\n  return (\n    <Layout>\n      <ScrollToTop />\n      <Routes>\n        <Route path=\"/\" element={<Transactions />} />\n        <Route path=\"/statistics\" element={<Statistics />} />\n        <Route path=\"/settings\" element={<Settings />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\n\nimport transactionsReducer from '../reducers/transactions/transactions-slice';\nimport categoriesReducer from '../reducers/categories/categories-slice';\nimport accountsReducer from '../reducers/accounts/accounts-slice';\nimport searchTermReducer from '../reducers/search/search-slice';\nimport budgetReducer from '../reducers/budget/budget-slice';\nimport userReducer from '../reducers/user/user-slice';\n\nexport default configureStore({\n  reducer: {\n    transactions: transactionsReducer,\n    categories: categoriesReducer,\n    accounts: accountsReducer,\n    searchTerm: searchTermReducer,\n    budget: budgetReducer,\n    user: userReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}